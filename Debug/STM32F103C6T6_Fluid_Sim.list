
STM32F103C6T6_Fluid_Sim.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005648  08000110  08000110  00001110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000110  08005758  08005758  00006758  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005868  08005868  000070f0  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08005868  08005868  000070f0  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08005868  08005868  000070f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005868  08005868  00006868  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800586c  0800586c  0000686c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000000f0  20000000  08005870  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000878  200000f0  08005960  000070f0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000968  08005960  00007968  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000070f0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000079a7  00000000  00000000  00007119  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000019d7  00000000  00000000  0000eac0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000850  00000000  00000000  00010498  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000656  00000000  00000000  00010ce8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001791a  00000000  00000000  0001133e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000ae8e  00000000  00000000  00028c58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008270e  00000000  00000000  00033ae6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b61f4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002d6c  00000000  00000000  000b6238  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004c  00000000  00000000  000b8fa4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200000f0 	.word	0x200000f0
 800012c:	00000000 	.word	0x00000000
 8000130:	08005740 	.word	0x08005740

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200000f4 	.word	0x200000f4
 800014c:	08005740 	.word	0x08005740

08000150 <__aeabi_drsub>:
 8000150:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000154:	e002      	b.n	800015c <__adddf3>
 8000156:	bf00      	nop

08000158 <__aeabi_dsub>:
 8000158:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800015c <__adddf3>:
 800015c:	b530      	push	{r4, r5, lr}
 800015e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000162:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000166:	ea94 0f05 	teq	r4, r5
 800016a:	bf08      	it	eq
 800016c:	ea90 0f02 	teqeq	r0, r2
 8000170:	bf1f      	itttt	ne
 8000172:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000176:	ea55 0c02 	orrsne.w	ip, r5, r2
 800017a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800017e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000182:	f000 80e2 	beq.w	800034a <__adddf3+0x1ee>
 8000186:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800018a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800018e:	bfb8      	it	lt
 8000190:	426d      	neglt	r5, r5
 8000192:	dd0c      	ble.n	80001ae <__adddf3+0x52>
 8000194:	442c      	add	r4, r5
 8000196:	ea80 0202 	eor.w	r2, r0, r2
 800019a:	ea81 0303 	eor.w	r3, r1, r3
 800019e:	ea82 0000 	eor.w	r0, r2, r0
 80001a2:	ea83 0101 	eor.w	r1, r3, r1
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	2d36      	cmp	r5, #54	@ 0x36
 80001b0:	bf88      	it	hi
 80001b2:	bd30      	pophi	{r4, r5, pc}
 80001b4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001bc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001c0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001c4:	d002      	beq.n	80001cc <__adddf3+0x70>
 80001c6:	4240      	negs	r0, r0
 80001c8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001cc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001d4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001d8:	d002      	beq.n	80001e0 <__adddf3+0x84>
 80001da:	4252      	negs	r2, r2
 80001dc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001e0:	ea94 0f05 	teq	r4, r5
 80001e4:	f000 80a7 	beq.w	8000336 <__adddf3+0x1da>
 80001e8:	f1a4 0401 	sub.w	r4, r4, #1
 80001ec:	f1d5 0e20 	rsbs	lr, r5, #32
 80001f0:	db0d      	blt.n	800020e <__adddf3+0xb2>
 80001f2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80001f6:	fa22 f205 	lsr.w	r2, r2, r5
 80001fa:	1880      	adds	r0, r0, r2
 80001fc:	f141 0100 	adc.w	r1, r1, #0
 8000200:	fa03 f20e 	lsl.w	r2, r3, lr
 8000204:	1880      	adds	r0, r0, r2
 8000206:	fa43 f305 	asr.w	r3, r3, r5
 800020a:	4159      	adcs	r1, r3
 800020c:	e00e      	b.n	800022c <__adddf3+0xd0>
 800020e:	f1a5 0520 	sub.w	r5, r5, #32
 8000212:	f10e 0e20 	add.w	lr, lr, #32
 8000216:	2a01      	cmp	r2, #1
 8000218:	fa03 fc0e 	lsl.w	ip, r3, lr
 800021c:	bf28      	it	cs
 800021e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000222:	fa43 f305 	asr.w	r3, r3, r5
 8000226:	18c0      	adds	r0, r0, r3
 8000228:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800022c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000230:	d507      	bpl.n	8000242 <__adddf3+0xe6>
 8000232:	f04f 0e00 	mov.w	lr, #0
 8000236:	f1dc 0c00 	rsbs	ip, ip, #0
 800023a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800023e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000242:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000246:	d31b      	bcc.n	8000280 <__adddf3+0x124>
 8000248:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800024c:	d30c      	bcc.n	8000268 <__adddf3+0x10c>
 800024e:	0849      	lsrs	r1, r1, #1
 8000250:	ea5f 0030 	movs.w	r0, r0, rrx
 8000254:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000258:	f104 0401 	add.w	r4, r4, #1
 800025c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000260:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000264:	f080 809a 	bcs.w	800039c <__adddf3+0x240>
 8000268:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800026c:	bf08      	it	eq
 800026e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000272:	f150 0000 	adcs.w	r0, r0, #0
 8000276:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800027a:	ea41 0105 	orr.w	r1, r1, r5
 800027e:	bd30      	pop	{r4, r5, pc}
 8000280:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000284:	4140      	adcs	r0, r0
 8000286:	eb41 0101 	adc.w	r1, r1, r1
 800028a:	3c01      	subs	r4, #1
 800028c:	bf28      	it	cs
 800028e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000292:	d2e9      	bcs.n	8000268 <__adddf3+0x10c>
 8000294:	f091 0f00 	teq	r1, #0
 8000298:	bf04      	itt	eq
 800029a:	4601      	moveq	r1, r0
 800029c:	2000      	moveq	r0, #0
 800029e:	fab1 f381 	clz	r3, r1
 80002a2:	bf08      	it	eq
 80002a4:	3320      	addeq	r3, #32
 80002a6:	f1a3 030b 	sub.w	r3, r3, #11
 80002aa:	f1b3 0220 	subs.w	r2, r3, #32
 80002ae:	da0c      	bge.n	80002ca <__adddf3+0x16e>
 80002b0:	320c      	adds	r2, #12
 80002b2:	dd08      	ble.n	80002c6 <__adddf3+0x16a>
 80002b4:	f102 0c14 	add.w	ip, r2, #20
 80002b8:	f1c2 020c 	rsb	r2, r2, #12
 80002bc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002c0:	fa21 f102 	lsr.w	r1, r1, r2
 80002c4:	e00c      	b.n	80002e0 <__adddf3+0x184>
 80002c6:	f102 0214 	add.w	r2, r2, #20
 80002ca:	bfd8      	it	le
 80002cc:	f1c2 0c20 	rsble	ip, r2, #32
 80002d0:	fa01 f102 	lsl.w	r1, r1, r2
 80002d4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002d8:	bfdc      	itt	le
 80002da:	ea41 010c 	orrle.w	r1, r1, ip
 80002de:	4090      	lslle	r0, r2
 80002e0:	1ae4      	subs	r4, r4, r3
 80002e2:	bfa2      	ittt	ge
 80002e4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002e8:	4329      	orrge	r1, r5
 80002ea:	bd30      	popge	{r4, r5, pc}
 80002ec:	ea6f 0404 	mvn.w	r4, r4
 80002f0:	3c1f      	subs	r4, #31
 80002f2:	da1c      	bge.n	800032e <__adddf3+0x1d2>
 80002f4:	340c      	adds	r4, #12
 80002f6:	dc0e      	bgt.n	8000316 <__adddf3+0x1ba>
 80002f8:	f104 0414 	add.w	r4, r4, #20
 80002fc:	f1c4 0220 	rsb	r2, r4, #32
 8000300:	fa20 f004 	lsr.w	r0, r0, r4
 8000304:	fa01 f302 	lsl.w	r3, r1, r2
 8000308:	ea40 0003 	orr.w	r0, r0, r3
 800030c:	fa21 f304 	lsr.w	r3, r1, r4
 8000310:	ea45 0103 	orr.w	r1, r5, r3
 8000314:	bd30      	pop	{r4, r5, pc}
 8000316:	f1c4 040c 	rsb	r4, r4, #12
 800031a:	f1c4 0220 	rsb	r2, r4, #32
 800031e:	fa20 f002 	lsr.w	r0, r0, r2
 8000322:	fa01 f304 	lsl.w	r3, r1, r4
 8000326:	ea40 0003 	orr.w	r0, r0, r3
 800032a:	4629      	mov	r1, r5
 800032c:	bd30      	pop	{r4, r5, pc}
 800032e:	fa21 f004 	lsr.w	r0, r1, r4
 8000332:	4629      	mov	r1, r5
 8000334:	bd30      	pop	{r4, r5, pc}
 8000336:	f094 0f00 	teq	r4, #0
 800033a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800033e:	bf06      	itte	eq
 8000340:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000344:	3401      	addeq	r4, #1
 8000346:	3d01      	subne	r5, #1
 8000348:	e74e      	b.n	80001e8 <__adddf3+0x8c>
 800034a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800034e:	bf18      	it	ne
 8000350:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000354:	d029      	beq.n	80003aa <__adddf3+0x24e>
 8000356:	ea94 0f05 	teq	r4, r5
 800035a:	bf08      	it	eq
 800035c:	ea90 0f02 	teqeq	r0, r2
 8000360:	d005      	beq.n	800036e <__adddf3+0x212>
 8000362:	ea54 0c00 	orrs.w	ip, r4, r0
 8000366:	bf04      	itt	eq
 8000368:	4619      	moveq	r1, r3
 800036a:	4610      	moveq	r0, r2
 800036c:	bd30      	pop	{r4, r5, pc}
 800036e:	ea91 0f03 	teq	r1, r3
 8000372:	bf1e      	ittt	ne
 8000374:	2100      	movne	r1, #0
 8000376:	2000      	movne	r0, #0
 8000378:	bd30      	popne	{r4, r5, pc}
 800037a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800037e:	d105      	bne.n	800038c <__adddf3+0x230>
 8000380:	0040      	lsls	r0, r0, #1
 8000382:	4149      	adcs	r1, r1
 8000384:	bf28      	it	cs
 8000386:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800038a:	bd30      	pop	{r4, r5, pc}
 800038c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000390:	bf3c      	itt	cc
 8000392:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000396:	bd30      	popcc	{r4, r5, pc}
 8000398:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800039c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003a0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003a4:	f04f 0000 	mov.w	r0, #0
 80003a8:	bd30      	pop	{r4, r5, pc}
 80003aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003ae:	bf1a      	itte	ne
 80003b0:	4619      	movne	r1, r3
 80003b2:	4610      	movne	r0, r2
 80003b4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003b8:	bf1c      	itt	ne
 80003ba:	460b      	movne	r3, r1
 80003bc:	4602      	movne	r2, r0
 80003be:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003c2:	bf06      	itte	eq
 80003c4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003c8:	ea91 0f03 	teqeq	r1, r3
 80003cc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003d0:	bd30      	pop	{r4, r5, pc}
 80003d2:	bf00      	nop

080003d4 <__aeabi_ui2d>:
 80003d4:	f090 0f00 	teq	r0, #0
 80003d8:	bf04      	itt	eq
 80003da:	2100      	moveq	r1, #0
 80003dc:	4770      	bxeq	lr
 80003de:	b530      	push	{r4, r5, lr}
 80003e0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80003e4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80003e8:	f04f 0500 	mov.w	r5, #0
 80003ec:	f04f 0100 	mov.w	r1, #0
 80003f0:	e750      	b.n	8000294 <__adddf3+0x138>
 80003f2:	bf00      	nop

080003f4 <__aeabi_i2d>:
 80003f4:	f090 0f00 	teq	r0, #0
 80003f8:	bf04      	itt	eq
 80003fa:	2100      	moveq	r1, #0
 80003fc:	4770      	bxeq	lr
 80003fe:	b530      	push	{r4, r5, lr}
 8000400:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000404:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000408:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800040c:	bf48      	it	mi
 800040e:	4240      	negmi	r0, r0
 8000410:	f04f 0100 	mov.w	r1, #0
 8000414:	e73e      	b.n	8000294 <__adddf3+0x138>
 8000416:	bf00      	nop

08000418 <__aeabi_f2d>:
 8000418:	0042      	lsls	r2, r0, #1
 800041a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800041e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000422:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000426:	bf1f      	itttt	ne
 8000428:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800042c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000430:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000434:	4770      	bxne	lr
 8000436:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800043a:	bf08      	it	eq
 800043c:	4770      	bxeq	lr
 800043e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000442:	bf04      	itt	eq
 8000444:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000448:	4770      	bxeq	lr
 800044a:	b530      	push	{r4, r5, lr}
 800044c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000450:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000454:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000458:	e71c      	b.n	8000294 <__adddf3+0x138>
 800045a:	bf00      	nop

0800045c <__aeabi_ul2d>:
 800045c:	ea50 0201 	orrs.w	r2, r0, r1
 8000460:	bf08      	it	eq
 8000462:	4770      	bxeq	lr
 8000464:	b530      	push	{r4, r5, lr}
 8000466:	f04f 0500 	mov.w	r5, #0
 800046a:	e00a      	b.n	8000482 <__aeabi_l2d+0x16>

0800046c <__aeabi_l2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800047a:	d502      	bpl.n	8000482 <__aeabi_l2d+0x16>
 800047c:	4240      	negs	r0, r0
 800047e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000482:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000486:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800048a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800048e:	f43f aed8 	beq.w	8000242 <__adddf3+0xe6>
 8000492:	f04f 0203 	mov.w	r2, #3
 8000496:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800049a:	bf18      	it	ne
 800049c:	3203      	addne	r2, #3
 800049e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004a2:	bf18      	it	ne
 80004a4:	3203      	addne	r2, #3
 80004a6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004aa:	f1c2 0320 	rsb	r3, r2, #32
 80004ae:	fa00 fc03 	lsl.w	ip, r0, r3
 80004b2:	fa20 f002 	lsr.w	r0, r0, r2
 80004b6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ba:	ea40 000e 	orr.w	r0, r0, lr
 80004be:	fa21 f102 	lsr.w	r1, r1, r2
 80004c2:	4414      	add	r4, r2
 80004c4:	e6bd      	b.n	8000242 <__adddf3+0xe6>
 80004c6:	bf00      	nop

080004c8 <__aeabi_dmul>:
 80004c8:	b570      	push	{r4, r5, r6, lr}
 80004ca:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004ce:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004d2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004d6:	bf1d      	ittte	ne
 80004d8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004dc:	ea94 0f0c 	teqne	r4, ip
 80004e0:	ea95 0f0c 	teqne	r5, ip
 80004e4:	f000 f8de 	bleq	80006a4 <__aeabi_dmul+0x1dc>
 80004e8:	442c      	add	r4, r5
 80004ea:	ea81 0603 	eor.w	r6, r1, r3
 80004ee:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80004f2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80004f6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80004fa:	bf18      	it	ne
 80004fc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000500:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000504:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000508:	d038      	beq.n	800057c <__aeabi_dmul+0xb4>
 800050a:	fba0 ce02 	umull	ip, lr, r0, r2
 800050e:	f04f 0500 	mov.w	r5, #0
 8000512:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000516:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800051a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800051e:	f04f 0600 	mov.w	r6, #0
 8000522:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000526:	f09c 0f00 	teq	ip, #0
 800052a:	bf18      	it	ne
 800052c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000530:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000534:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000538:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800053c:	d204      	bcs.n	8000548 <__aeabi_dmul+0x80>
 800053e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000542:	416d      	adcs	r5, r5
 8000544:	eb46 0606 	adc.w	r6, r6, r6
 8000548:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800054c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000550:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000554:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000558:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800055c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000560:	bf88      	it	hi
 8000562:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000566:	d81e      	bhi.n	80005a6 <__aeabi_dmul+0xde>
 8000568:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800056c:	bf08      	it	eq
 800056e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000572:	f150 0000 	adcs.w	r0, r0, #0
 8000576:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800057a:	bd70      	pop	{r4, r5, r6, pc}
 800057c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000580:	ea46 0101 	orr.w	r1, r6, r1
 8000584:	ea40 0002 	orr.w	r0, r0, r2
 8000588:	ea81 0103 	eor.w	r1, r1, r3
 800058c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000590:	bfc2      	ittt	gt
 8000592:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000596:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800059a:	bd70      	popgt	{r4, r5, r6, pc}
 800059c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005a0:	f04f 0e00 	mov.w	lr, #0
 80005a4:	3c01      	subs	r4, #1
 80005a6:	f300 80ab 	bgt.w	8000700 <__aeabi_dmul+0x238>
 80005aa:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005ae:	bfde      	ittt	le
 80005b0:	2000      	movle	r0, #0
 80005b2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005b6:	bd70      	pople	{r4, r5, r6, pc}
 80005b8:	f1c4 0400 	rsb	r4, r4, #0
 80005bc:	3c20      	subs	r4, #32
 80005be:	da35      	bge.n	800062c <__aeabi_dmul+0x164>
 80005c0:	340c      	adds	r4, #12
 80005c2:	dc1b      	bgt.n	80005fc <__aeabi_dmul+0x134>
 80005c4:	f104 0414 	add.w	r4, r4, #20
 80005c8:	f1c4 0520 	rsb	r5, r4, #32
 80005cc:	fa00 f305 	lsl.w	r3, r0, r5
 80005d0:	fa20 f004 	lsr.w	r0, r0, r4
 80005d4:	fa01 f205 	lsl.w	r2, r1, r5
 80005d8:	ea40 0002 	orr.w	r0, r0, r2
 80005dc:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80005e0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005e4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005e8:	fa21 f604 	lsr.w	r6, r1, r4
 80005ec:	eb42 0106 	adc.w	r1, r2, r6
 80005f0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80005f4:	bf08      	it	eq
 80005f6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80005fa:	bd70      	pop	{r4, r5, r6, pc}
 80005fc:	f1c4 040c 	rsb	r4, r4, #12
 8000600:	f1c4 0520 	rsb	r5, r4, #32
 8000604:	fa00 f304 	lsl.w	r3, r0, r4
 8000608:	fa20 f005 	lsr.w	r0, r0, r5
 800060c:	fa01 f204 	lsl.w	r2, r1, r4
 8000610:	ea40 0002 	orr.w	r0, r0, r2
 8000614:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000618:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800061c:	f141 0100 	adc.w	r1, r1, #0
 8000620:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000624:	bf08      	it	eq
 8000626:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800062a:	bd70      	pop	{r4, r5, r6, pc}
 800062c:	f1c4 0520 	rsb	r5, r4, #32
 8000630:	fa00 f205 	lsl.w	r2, r0, r5
 8000634:	ea4e 0e02 	orr.w	lr, lr, r2
 8000638:	fa20 f304 	lsr.w	r3, r0, r4
 800063c:	fa01 f205 	lsl.w	r2, r1, r5
 8000640:	ea43 0302 	orr.w	r3, r3, r2
 8000644:	fa21 f004 	lsr.w	r0, r1, r4
 8000648:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800064c:	fa21 f204 	lsr.w	r2, r1, r4
 8000650:	ea20 0002 	bic.w	r0, r0, r2
 8000654:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000658:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800065c:	bf08      	it	eq
 800065e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000662:	bd70      	pop	{r4, r5, r6, pc}
 8000664:	f094 0f00 	teq	r4, #0
 8000668:	d10f      	bne.n	800068a <__aeabi_dmul+0x1c2>
 800066a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800066e:	0040      	lsls	r0, r0, #1
 8000670:	eb41 0101 	adc.w	r1, r1, r1
 8000674:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000678:	bf08      	it	eq
 800067a:	3c01      	subeq	r4, #1
 800067c:	d0f7      	beq.n	800066e <__aeabi_dmul+0x1a6>
 800067e:	ea41 0106 	orr.w	r1, r1, r6
 8000682:	f095 0f00 	teq	r5, #0
 8000686:	bf18      	it	ne
 8000688:	4770      	bxne	lr
 800068a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800068e:	0052      	lsls	r2, r2, #1
 8000690:	eb43 0303 	adc.w	r3, r3, r3
 8000694:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000698:	bf08      	it	eq
 800069a:	3d01      	subeq	r5, #1
 800069c:	d0f7      	beq.n	800068e <__aeabi_dmul+0x1c6>
 800069e:	ea43 0306 	orr.w	r3, r3, r6
 80006a2:	4770      	bx	lr
 80006a4:	ea94 0f0c 	teq	r4, ip
 80006a8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006ac:	bf18      	it	ne
 80006ae:	ea95 0f0c 	teqne	r5, ip
 80006b2:	d00c      	beq.n	80006ce <__aeabi_dmul+0x206>
 80006b4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006b8:	bf18      	it	ne
 80006ba:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006be:	d1d1      	bne.n	8000664 <__aeabi_dmul+0x19c>
 80006c0:	ea81 0103 	eor.w	r1, r1, r3
 80006c4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006c8:	f04f 0000 	mov.w	r0, #0
 80006cc:	bd70      	pop	{r4, r5, r6, pc}
 80006ce:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006d2:	bf06      	itte	eq
 80006d4:	4610      	moveq	r0, r2
 80006d6:	4619      	moveq	r1, r3
 80006d8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006dc:	d019      	beq.n	8000712 <__aeabi_dmul+0x24a>
 80006de:	ea94 0f0c 	teq	r4, ip
 80006e2:	d102      	bne.n	80006ea <__aeabi_dmul+0x222>
 80006e4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006e8:	d113      	bne.n	8000712 <__aeabi_dmul+0x24a>
 80006ea:	ea95 0f0c 	teq	r5, ip
 80006ee:	d105      	bne.n	80006fc <__aeabi_dmul+0x234>
 80006f0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80006f4:	bf1c      	itt	ne
 80006f6:	4610      	movne	r0, r2
 80006f8:	4619      	movne	r1, r3
 80006fa:	d10a      	bne.n	8000712 <__aeabi_dmul+0x24a>
 80006fc:	ea81 0103 	eor.w	r1, r1, r3
 8000700:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000704:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000708:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800070c:	f04f 0000 	mov.w	r0, #0
 8000710:	bd70      	pop	{r4, r5, r6, pc}
 8000712:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000716:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800071a:	bd70      	pop	{r4, r5, r6, pc}

0800071c <__aeabi_ddiv>:
 800071c:	b570      	push	{r4, r5, r6, lr}
 800071e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000722:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000726:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800072a:	bf1d      	ittte	ne
 800072c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000730:	ea94 0f0c 	teqne	r4, ip
 8000734:	ea95 0f0c 	teqne	r5, ip
 8000738:	f000 f8a7 	bleq	800088a <__aeabi_ddiv+0x16e>
 800073c:	eba4 0405 	sub.w	r4, r4, r5
 8000740:	ea81 0e03 	eor.w	lr, r1, r3
 8000744:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000748:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800074c:	f000 8088 	beq.w	8000860 <__aeabi_ddiv+0x144>
 8000750:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000754:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000758:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800075c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000760:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000764:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000768:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800076c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000770:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000774:	429d      	cmp	r5, r3
 8000776:	bf08      	it	eq
 8000778:	4296      	cmpeq	r6, r2
 800077a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800077e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000782:	d202      	bcs.n	800078a <__aeabi_ddiv+0x6e>
 8000784:	085b      	lsrs	r3, r3, #1
 8000786:	ea4f 0232 	mov.w	r2, r2, rrx
 800078a:	1ab6      	subs	r6, r6, r2
 800078c:	eb65 0503 	sbc.w	r5, r5, r3
 8000790:	085b      	lsrs	r3, r3, #1
 8000792:	ea4f 0232 	mov.w	r2, r2, rrx
 8000796:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800079a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800079e:	ebb6 0e02 	subs.w	lr, r6, r2
 80007a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007a6:	bf22      	ittt	cs
 80007a8:	1ab6      	subcs	r6, r6, r2
 80007aa:	4675      	movcs	r5, lr
 80007ac:	ea40 000c 	orrcs.w	r0, r0, ip
 80007b0:	085b      	lsrs	r3, r3, #1
 80007b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007b6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ba:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007be:	bf22      	ittt	cs
 80007c0:	1ab6      	subcs	r6, r6, r2
 80007c2:	4675      	movcs	r5, lr
 80007c4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007c8:	085b      	lsrs	r3, r3, #1
 80007ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80007d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007d6:	bf22      	ittt	cs
 80007d8:	1ab6      	subcs	r6, r6, r2
 80007da:	4675      	movcs	r5, lr
 80007dc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007e0:	085b      	lsrs	r3, r3, #1
 80007e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ee:	bf22      	ittt	cs
 80007f0:	1ab6      	subcs	r6, r6, r2
 80007f2:	4675      	movcs	r5, lr
 80007f4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80007f8:	ea55 0e06 	orrs.w	lr, r5, r6
 80007fc:	d018      	beq.n	8000830 <__aeabi_ddiv+0x114>
 80007fe:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000802:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000806:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800080a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800080e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000812:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000816:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800081a:	d1c0      	bne.n	800079e <__aeabi_ddiv+0x82>
 800081c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000820:	d10b      	bne.n	800083a <__aeabi_ddiv+0x11e>
 8000822:	ea41 0100 	orr.w	r1, r1, r0
 8000826:	f04f 0000 	mov.w	r0, #0
 800082a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800082e:	e7b6      	b.n	800079e <__aeabi_ddiv+0x82>
 8000830:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000834:	bf04      	itt	eq
 8000836:	4301      	orreq	r1, r0
 8000838:	2000      	moveq	r0, #0
 800083a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800083e:	bf88      	it	hi
 8000840:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000844:	f63f aeaf 	bhi.w	80005a6 <__aeabi_dmul+0xde>
 8000848:	ebb5 0c03 	subs.w	ip, r5, r3
 800084c:	bf04      	itt	eq
 800084e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000852:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000856:	f150 0000 	adcs.w	r0, r0, #0
 800085a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800085e:	bd70      	pop	{r4, r5, r6, pc}
 8000860:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000864:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000868:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800086c:	bfc2      	ittt	gt
 800086e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000872:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000876:	bd70      	popgt	{r4, r5, r6, pc}
 8000878:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800087c:	f04f 0e00 	mov.w	lr, #0
 8000880:	3c01      	subs	r4, #1
 8000882:	e690      	b.n	80005a6 <__aeabi_dmul+0xde>
 8000884:	ea45 0e06 	orr.w	lr, r5, r6
 8000888:	e68d      	b.n	80005a6 <__aeabi_dmul+0xde>
 800088a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800088e:	ea94 0f0c 	teq	r4, ip
 8000892:	bf08      	it	eq
 8000894:	ea95 0f0c 	teqeq	r5, ip
 8000898:	f43f af3b 	beq.w	8000712 <__aeabi_dmul+0x24a>
 800089c:	ea94 0f0c 	teq	r4, ip
 80008a0:	d10a      	bne.n	80008b8 <__aeabi_ddiv+0x19c>
 80008a2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008a6:	f47f af34 	bne.w	8000712 <__aeabi_dmul+0x24a>
 80008aa:	ea95 0f0c 	teq	r5, ip
 80008ae:	f47f af25 	bne.w	80006fc <__aeabi_dmul+0x234>
 80008b2:	4610      	mov	r0, r2
 80008b4:	4619      	mov	r1, r3
 80008b6:	e72c      	b.n	8000712 <__aeabi_dmul+0x24a>
 80008b8:	ea95 0f0c 	teq	r5, ip
 80008bc:	d106      	bne.n	80008cc <__aeabi_ddiv+0x1b0>
 80008be:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008c2:	f43f aefd 	beq.w	80006c0 <__aeabi_dmul+0x1f8>
 80008c6:	4610      	mov	r0, r2
 80008c8:	4619      	mov	r1, r3
 80008ca:	e722      	b.n	8000712 <__aeabi_dmul+0x24a>
 80008cc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008d0:	bf18      	it	ne
 80008d2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008d6:	f47f aec5 	bne.w	8000664 <__aeabi_dmul+0x19c>
 80008da:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008de:	f47f af0d 	bne.w	80006fc <__aeabi_dmul+0x234>
 80008e2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008e6:	f47f aeeb 	bne.w	80006c0 <__aeabi_dmul+0x1f8>
 80008ea:	e712      	b.n	8000712 <__aeabi_dmul+0x24a>

080008ec <__aeabi_d2f>:
 80008ec:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80008f0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 80008f4:	bf24      	itt	cs
 80008f6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 80008fa:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 80008fe:	d90d      	bls.n	800091c <__aeabi_d2f+0x30>
 8000900:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000904:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000908:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800090c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000910:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000914:	bf08      	it	eq
 8000916:	f020 0001 	biceq.w	r0, r0, #1
 800091a:	4770      	bx	lr
 800091c:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000920:	d121      	bne.n	8000966 <__aeabi_d2f+0x7a>
 8000922:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000926:	bfbc      	itt	lt
 8000928:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 800092c:	4770      	bxlt	lr
 800092e:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000932:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000936:	f1c2 0218 	rsb	r2, r2, #24
 800093a:	f1c2 0c20 	rsb	ip, r2, #32
 800093e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000942:	fa20 f002 	lsr.w	r0, r0, r2
 8000946:	bf18      	it	ne
 8000948:	f040 0001 	orrne.w	r0, r0, #1
 800094c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000950:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000954:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000958:	ea40 000c 	orr.w	r0, r0, ip
 800095c:	fa23 f302 	lsr.w	r3, r3, r2
 8000960:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000964:	e7cc      	b.n	8000900 <__aeabi_d2f+0x14>
 8000966:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800096a:	d107      	bne.n	800097c <__aeabi_d2f+0x90>
 800096c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000970:	bf1e      	ittt	ne
 8000972:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000976:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 800097a:	4770      	bxne	lr
 800097c:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000980:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000984:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000988:	4770      	bx	lr
 800098a:	bf00      	nop

0800098c <__aeabi_frsub>:
 800098c:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000990:	e002      	b.n	8000998 <__addsf3>
 8000992:	bf00      	nop

08000994 <__aeabi_fsub>:
 8000994:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000998 <__addsf3>:
 8000998:	0042      	lsls	r2, r0, #1
 800099a:	bf1f      	itttt	ne
 800099c:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 80009a0:	ea92 0f03 	teqne	r2, r3
 80009a4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 80009a8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80009ac:	d06a      	beq.n	8000a84 <__addsf3+0xec>
 80009ae:	ea4f 6212 	mov.w	r2, r2, lsr #24
 80009b2:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 80009b6:	bfc1      	itttt	gt
 80009b8:	18d2      	addgt	r2, r2, r3
 80009ba:	4041      	eorgt	r1, r0
 80009bc:	4048      	eorgt	r0, r1
 80009be:	4041      	eorgt	r1, r0
 80009c0:	bfb8      	it	lt
 80009c2:	425b      	neglt	r3, r3
 80009c4:	2b19      	cmp	r3, #25
 80009c6:	bf88      	it	hi
 80009c8:	4770      	bxhi	lr
 80009ca:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 80009ce:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80009d2:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 80009d6:	bf18      	it	ne
 80009d8:	4240      	negne	r0, r0
 80009da:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80009de:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 80009e2:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 80009e6:	bf18      	it	ne
 80009e8:	4249      	negne	r1, r1
 80009ea:	ea92 0f03 	teq	r2, r3
 80009ee:	d03f      	beq.n	8000a70 <__addsf3+0xd8>
 80009f0:	f1a2 0201 	sub.w	r2, r2, #1
 80009f4:	fa41 fc03 	asr.w	ip, r1, r3
 80009f8:	eb10 000c 	adds.w	r0, r0, ip
 80009fc:	f1c3 0320 	rsb	r3, r3, #32
 8000a00:	fa01 f103 	lsl.w	r1, r1, r3
 8000a04:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000a08:	d502      	bpl.n	8000a10 <__addsf3+0x78>
 8000a0a:	4249      	negs	r1, r1
 8000a0c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000a10:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000a14:	d313      	bcc.n	8000a3e <__addsf3+0xa6>
 8000a16:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000a1a:	d306      	bcc.n	8000a2a <__addsf3+0x92>
 8000a1c:	0840      	lsrs	r0, r0, #1
 8000a1e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000a22:	f102 0201 	add.w	r2, r2, #1
 8000a26:	2afe      	cmp	r2, #254	@ 0xfe
 8000a28:	d251      	bcs.n	8000ace <__addsf3+0x136>
 8000a2a:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000a2e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000a32:	bf08      	it	eq
 8000a34:	f020 0001 	biceq.w	r0, r0, #1
 8000a38:	ea40 0003 	orr.w	r0, r0, r3
 8000a3c:	4770      	bx	lr
 8000a3e:	0049      	lsls	r1, r1, #1
 8000a40:	eb40 0000 	adc.w	r0, r0, r0
 8000a44:	3a01      	subs	r2, #1
 8000a46:	bf28      	it	cs
 8000a48:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000a4c:	d2ed      	bcs.n	8000a2a <__addsf3+0x92>
 8000a4e:	fab0 fc80 	clz	ip, r0
 8000a52:	f1ac 0c08 	sub.w	ip, ip, #8
 8000a56:	ebb2 020c 	subs.w	r2, r2, ip
 8000a5a:	fa00 f00c 	lsl.w	r0, r0, ip
 8000a5e:	bfaa      	itet	ge
 8000a60:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000a64:	4252      	neglt	r2, r2
 8000a66:	4318      	orrge	r0, r3
 8000a68:	bfbc      	itt	lt
 8000a6a:	40d0      	lsrlt	r0, r2
 8000a6c:	4318      	orrlt	r0, r3
 8000a6e:	4770      	bx	lr
 8000a70:	f092 0f00 	teq	r2, #0
 8000a74:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000a78:	bf06      	itte	eq
 8000a7a:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000a7e:	3201      	addeq	r2, #1
 8000a80:	3b01      	subne	r3, #1
 8000a82:	e7b5      	b.n	80009f0 <__addsf3+0x58>
 8000a84:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000a88:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000a8c:	bf18      	it	ne
 8000a8e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000a92:	d021      	beq.n	8000ad8 <__addsf3+0x140>
 8000a94:	ea92 0f03 	teq	r2, r3
 8000a98:	d004      	beq.n	8000aa4 <__addsf3+0x10c>
 8000a9a:	f092 0f00 	teq	r2, #0
 8000a9e:	bf08      	it	eq
 8000aa0:	4608      	moveq	r0, r1
 8000aa2:	4770      	bx	lr
 8000aa4:	ea90 0f01 	teq	r0, r1
 8000aa8:	bf1c      	itt	ne
 8000aaa:	2000      	movne	r0, #0
 8000aac:	4770      	bxne	lr
 8000aae:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000ab2:	d104      	bne.n	8000abe <__addsf3+0x126>
 8000ab4:	0040      	lsls	r0, r0, #1
 8000ab6:	bf28      	it	cs
 8000ab8:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000abc:	4770      	bx	lr
 8000abe:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000ac2:	bf3c      	itt	cc
 8000ac4:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000ac8:	4770      	bxcc	lr
 8000aca:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000ace:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000ad2:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000ad6:	4770      	bx	lr
 8000ad8:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000adc:	bf16      	itet	ne
 8000ade:	4608      	movne	r0, r1
 8000ae0:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000ae4:	4601      	movne	r1, r0
 8000ae6:	0242      	lsls	r2, r0, #9
 8000ae8:	bf06      	itte	eq
 8000aea:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000aee:	ea90 0f01 	teqeq	r0, r1
 8000af2:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000af6:	4770      	bx	lr

08000af8 <__aeabi_ui2f>:
 8000af8:	f04f 0300 	mov.w	r3, #0
 8000afc:	e004      	b.n	8000b08 <__aeabi_i2f+0x8>
 8000afe:	bf00      	nop

08000b00 <__aeabi_i2f>:
 8000b00:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000b04:	bf48      	it	mi
 8000b06:	4240      	negmi	r0, r0
 8000b08:	ea5f 0c00 	movs.w	ip, r0
 8000b0c:	bf08      	it	eq
 8000b0e:	4770      	bxeq	lr
 8000b10:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000b14:	4601      	mov	r1, r0
 8000b16:	f04f 0000 	mov.w	r0, #0
 8000b1a:	e01c      	b.n	8000b56 <__aeabi_l2f+0x2a>

08000b1c <__aeabi_ul2f>:
 8000b1c:	ea50 0201 	orrs.w	r2, r0, r1
 8000b20:	bf08      	it	eq
 8000b22:	4770      	bxeq	lr
 8000b24:	f04f 0300 	mov.w	r3, #0
 8000b28:	e00a      	b.n	8000b40 <__aeabi_l2f+0x14>
 8000b2a:	bf00      	nop

08000b2c <__aeabi_l2f>:
 8000b2c:	ea50 0201 	orrs.w	r2, r0, r1
 8000b30:	bf08      	it	eq
 8000b32:	4770      	bxeq	lr
 8000b34:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000b38:	d502      	bpl.n	8000b40 <__aeabi_l2f+0x14>
 8000b3a:	4240      	negs	r0, r0
 8000b3c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000b40:	ea5f 0c01 	movs.w	ip, r1
 8000b44:	bf02      	ittt	eq
 8000b46:	4684      	moveq	ip, r0
 8000b48:	4601      	moveq	r1, r0
 8000b4a:	2000      	moveq	r0, #0
 8000b4c:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000b50:	bf08      	it	eq
 8000b52:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000b56:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000b5a:	fabc f28c 	clz	r2, ip
 8000b5e:	3a08      	subs	r2, #8
 8000b60:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000b64:	db10      	blt.n	8000b88 <__aeabi_l2f+0x5c>
 8000b66:	fa01 fc02 	lsl.w	ip, r1, r2
 8000b6a:	4463      	add	r3, ip
 8000b6c:	fa00 fc02 	lsl.w	ip, r0, r2
 8000b70:	f1c2 0220 	rsb	r2, r2, #32
 8000b74:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000b78:	fa20 f202 	lsr.w	r2, r0, r2
 8000b7c:	eb43 0002 	adc.w	r0, r3, r2
 8000b80:	bf08      	it	eq
 8000b82:	f020 0001 	biceq.w	r0, r0, #1
 8000b86:	4770      	bx	lr
 8000b88:	f102 0220 	add.w	r2, r2, #32
 8000b8c:	fa01 fc02 	lsl.w	ip, r1, r2
 8000b90:	f1c2 0220 	rsb	r2, r2, #32
 8000b94:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000b98:	fa21 f202 	lsr.w	r2, r1, r2
 8000b9c:	eb43 0002 	adc.w	r0, r3, r2
 8000ba0:	bf08      	it	eq
 8000ba2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000ba6:	4770      	bx	lr

08000ba8 <__aeabi_fmul>:
 8000ba8:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000bac:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000bb0:	bf1e      	ittt	ne
 8000bb2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000bb6:	ea92 0f0c 	teqne	r2, ip
 8000bba:	ea93 0f0c 	teqne	r3, ip
 8000bbe:	d06f      	beq.n	8000ca0 <__aeabi_fmul+0xf8>
 8000bc0:	441a      	add	r2, r3
 8000bc2:	ea80 0c01 	eor.w	ip, r0, r1
 8000bc6:	0240      	lsls	r0, r0, #9
 8000bc8:	bf18      	it	ne
 8000bca:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000bce:	d01e      	beq.n	8000c0e <__aeabi_fmul+0x66>
 8000bd0:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000bd4:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000bd8:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000bdc:	fba0 3101 	umull	r3, r1, r0, r1
 8000be0:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000be4:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000be8:	bf3e      	ittt	cc
 8000bea:	0049      	lslcc	r1, r1, #1
 8000bec:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000bf0:	005b      	lslcc	r3, r3, #1
 8000bf2:	ea40 0001 	orr.w	r0, r0, r1
 8000bf6:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000bfa:	2afd      	cmp	r2, #253	@ 0xfd
 8000bfc:	d81d      	bhi.n	8000c3a <__aeabi_fmul+0x92>
 8000bfe:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000c02:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c06:	bf08      	it	eq
 8000c08:	f020 0001 	biceq.w	r0, r0, #1
 8000c0c:	4770      	bx	lr
 8000c0e:	f090 0f00 	teq	r0, #0
 8000c12:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000c16:	bf08      	it	eq
 8000c18:	0249      	lsleq	r1, r1, #9
 8000c1a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000c1e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000c22:	3a7f      	subs	r2, #127	@ 0x7f
 8000c24:	bfc2      	ittt	gt
 8000c26:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000c2a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000c2e:	4770      	bxgt	lr
 8000c30:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c34:	f04f 0300 	mov.w	r3, #0
 8000c38:	3a01      	subs	r2, #1
 8000c3a:	dc5d      	bgt.n	8000cf8 <__aeabi_fmul+0x150>
 8000c3c:	f112 0f19 	cmn.w	r2, #25
 8000c40:	bfdc      	itt	le
 8000c42:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000c46:	4770      	bxle	lr
 8000c48:	f1c2 0200 	rsb	r2, r2, #0
 8000c4c:	0041      	lsls	r1, r0, #1
 8000c4e:	fa21 f102 	lsr.w	r1, r1, r2
 8000c52:	f1c2 0220 	rsb	r2, r2, #32
 8000c56:	fa00 fc02 	lsl.w	ip, r0, r2
 8000c5a:	ea5f 0031 	movs.w	r0, r1, rrx
 8000c5e:	f140 0000 	adc.w	r0, r0, #0
 8000c62:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000c66:	bf08      	it	eq
 8000c68:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000c6c:	4770      	bx	lr
 8000c6e:	f092 0f00 	teq	r2, #0
 8000c72:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000c76:	bf02      	ittt	eq
 8000c78:	0040      	lsleq	r0, r0, #1
 8000c7a:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000c7e:	3a01      	subeq	r2, #1
 8000c80:	d0f9      	beq.n	8000c76 <__aeabi_fmul+0xce>
 8000c82:	ea40 000c 	orr.w	r0, r0, ip
 8000c86:	f093 0f00 	teq	r3, #0
 8000c8a:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c8e:	bf02      	ittt	eq
 8000c90:	0049      	lsleq	r1, r1, #1
 8000c92:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000c96:	3b01      	subeq	r3, #1
 8000c98:	d0f9      	beq.n	8000c8e <__aeabi_fmul+0xe6>
 8000c9a:	ea41 010c 	orr.w	r1, r1, ip
 8000c9e:	e78f      	b.n	8000bc0 <__aeabi_fmul+0x18>
 8000ca0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000ca4:	ea92 0f0c 	teq	r2, ip
 8000ca8:	bf18      	it	ne
 8000caa:	ea93 0f0c 	teqne	r3, ip
 8000cae:	d00a      	beq.n	8000cc6 <__aeabi_fmul+0x11e>
 8000cb0:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000cb4:	bf18      	it	ne
 8000cb6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000cba:	d1d8      	bne.n	8000c6e <__aeabi_fmul+0xc6>
 8000cbc:	ea80 0001 	eor.w	r0, r0, r1
 8000cc0:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000cc4:	4770      	bx	lr
 8000cc6:	f090 0f00 	teq	r0, #0
 8000cca:	bf17      	itett	ne
 8000ccc:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000cd0:	4608      	moveq	r0, r1
 8000cd2:	f091 0f00 	teqne	r1, #0
 8000cd6:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000cda:	d014      	beq.n	8000d06 <__aeabi_fmul+0x15e>
 8000cdc:	ea92 0f0c 	teq	r2, ip
 8000ce0:	d101      	bne.n	8000ce6 <__aeabi_fmul+0x13e>
 8000ce2:	0242      	lsls	r2, r0, #9
 8000ce4:	d10f      	bne.n	8000d06 <__aeabi_fmul+0x15e>
 8000ce6:	ea93 0f0c 	teq	r3, ip
 8000cea:	d103      	bne.n	8000cf4 <__aeabi_fmul+0x14c>
 8000cec:	024b      	lsls	r3, r1, #9
 8000cee:	bf18      	it	ne
 8000cf0:	4608      	movne	r0, r1
 8000cf2:	d108      	bne.n	8000d06 <__aeabi_fmul+0x15e>
 8000cf4:	ea80 0001 	eor.w	r0, r0, r1
 8000cf8:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000cfc:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000d00:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000d04:	4770      	bx	lr
 8000d06:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000d0a:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 8000d0e:	4770      	bx	lr

08000d10 <__aeabi_fdiv>:
 8000d10:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000d14:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d18:	bf1e      	ittt	ne
 8000d1a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d1e:	ea92 0f0c 	teqne	r2, ip
 8000d22:	ea93 0f0c 	teqne	r3, ip
 8000d26:	d069      	beq.n	8000dfc <__aeabi_fdiv+0xec>
 8000d28:	eba2 0203 	sub.w	r2, r2, r3
 8000d2c:	ea80 0c01 	eor.w	ip, r0, r1
 8000d30:	0249      	lsls	r1, r1, #9
 8000d32:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000d36:	d037      	beq.n	8000da8 <__aeabi_fdiv+0x98>
 8000d38:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000d3c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000d40:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000d44:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000d48:	428b      	cmp	r3, r1
 8000d4a:	bf38      	it	cc
 8000d4c:	005b      	lslcc	r3, r3, #1
 8000d4e:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000d52:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000d56:	428b      	cmp	r3, r1
 8000d58:	bf24      	itt	cs
 8000d5a:	1a5b      	subcs	r3, r3, r1
 8000d5c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000d60:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000d64:	bf24      	itt	cs
 8000d66:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000d6a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000d6e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000d72:	bf24      	itt	cs
 8000d74:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000d78:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000d7c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000d80:	bf24      	itt	cs
 8000d82:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000d86:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000d8a:	011b      	lsls	r3, r3, #4
 8000d8c:	bf18      	it	ne
 8000d8e:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000d92:	d1e0      	bne.n	8000d56 <__aeabi_fdiv+0x46>
 8000d94:	2afd      	cmp	r2, #253	@ 0xfd
 8000d96:	f63f af50 	bhi.w	8000c3a <__aeabi_fmul+0x92>
 8000d9a:	428b      	cmp	r3, r1
 8000d9c:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000da0:	bf08      	it	eq
 8000da2:	f020 0001 	biceq.w	r0, r0, #1
 8000da6:	4770      	bx	lr
 8000da8:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000dac:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000db0:	327f      	adds	r2, #127	@ 0x7f
 8000db2:	bfc2      	ittt	gt
 8000db4:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000db8:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000dbc:	4770      	bxgt	lr
 8000dbe:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000dc2:	f04f 0300 	mov.w	r3, #0
 8000dc6:	3a01      	subs	r2, #1
 8000dc8:	e737      	b.n	8000c3a <__aeabi_fmul+0x92>
 8000dca:	f092 0f00 	teq	r2, #0
 8000dce:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000dd2:	bf02      	ittt	eq
 8000dd4:	0040      	lsleq	r0, r0, #1
 8000dd6:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000dda:	3a01      	subeq	r2, #1
 8000ddc:	d0f9      	beq.n	8000dd2 <__aeabi_fdiv+0xc2>
 8000dde:	ea40 000c 	orr.w	r0, r0, ip
 8000de2:	f093 0f00 	teq	r3, #0
 8000de6:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000dea:	bf02      	ittt	eq
 8000dec:	0049      	lsleq	r1, r1, #1
 8000dee:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000df2:	3b01      	subeq	r3, #1
 8000df4:	d0f9      	beq.n	8000dea <__aeabi_fdiv+0xda>
 8000df6:	ea41 010c 	orr.w	r1, r1, ip
 8000dfa:	e795      	b.n	8000d28 <__aeabi_fdiv+0x18>
 8000dfc:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e00:	ea92 0f0c 	teq	r2, ip
 8000e04:	d108      	bne.n	8000e18 <__aeabi_fdiv+0x108>
 8000e06:	0242      	lsls	r2, r0, #9
 8000e08:	f47f af7d 	bne.w	8000d06 <__aeabi_fmul+0x15e>
 8000e0c:	ea93 0f0c 	teq	r3, ip
 8000e10:	f47f af70 	bne.w	8000cf4 <__aeabi_fmul+0x14c>
 8000e14:	4608      	mov	r0, r1
 8000e16:	e776      	b.n	8000d06 <__aeabi_fmul+0x15e>
 8000e18:	ea93 0f0c 	teq	r3, ip
 8000e1c:	d104      	bne.n	8000e28 <__aeabi_fdiv+0x118>
 8000e1e:	024b      	lsls	r3, r1, #9
 8000e20:	f43f af4c 	beq.w	8000cbc <__aeabi_fmul+0x114>
 8000e24:	4608      	mov	r0, r1
 8000e26:	e76e      	b.n	8000d06 <__aeabi_fmul+0x15e>
 8000e28:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000e2c:	bf18      	it	ne
 8000e2e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000e32:	d1ca      	bne.n	8000dca <__aeabi_fdiv+0xba>
 8000e34:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8000e38:	f47f af5c 	bne.w	8000cf4 <__aeabi_fmul+0x14c>
 8000e3c:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 8000e40:	f47f af3c 	bne.w	8000cbc <__aeabi_fmul+0x114>
 8000e44:	e75f      	b.n	8000d06 <__aeabi_fmul+0x15e>
 8000e46:	bf00      	nop

08000e48 <__gesf2>:
 8000e48:	f04f 3cff 	mov.w	ip, #4294967295
 8000e4c:	e006      	b.n	8000e5c <__cmpsf2+0x4>
 8000e4e:	bf00      	nop

08000e50 <__lesf2>:
 8000e50:	f04f 0c01 	mov.w	ip, #1
 8000e54:	e002      	b.n	8000e5c <__cmpsf2+0x4>
 8000e56:	bf00      	nop

08000e58 <__cmpsf2>:
 8000e58:	f04f 0c01 	mov.w	ip, #1
 8000e5c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000e60:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000e64:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000e68:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000e6c:	bf18      	it	ne
 8000e6e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000e72:	d011      	beq.n	8000e98 <__cmpsf2+0x40>
 8000e74:	b001      	add	sp, #4
 8000e76:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8000e7a:	bf18      	it	ne
 8000e7c:	ea90 0f01 	teqne	r0, r1
 8000e80:	bf58      	it	pl
 8000e82:	ebb2 0003 	subspl.w	r0, r2, r3
 8000e86:	bf88      	it	hi
 8000e88:	17c8      	asrhi	r0, r1, #31
 8000e8a:	bf38      	it	cc
 8000e8c:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8000e90:	bf18      	it	ne
 8000e92:	f040 0001 	orrne.w	r0, r0, #1
 8000e96:	4770      	bx	lr
 8000e98:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000e9c:	d102      	bne.n	8000ea4 <__cmpsf2+0x4c>
 8000e9e:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000ea2:	d105      	bne.n	8000eb0 <__cmpsf2+0x58>
 8000ea4:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8000ea8:	d1e4      	bne.n	8000e74 <__cmpsf2+0x1c>
 8000eaa:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000eae:	d0e1      	beq.n	8000e74 <__cmpsf2+0x1c>
 8000eb0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000eb4:	4770      	bx	lr
 8000eb6:	bf00      	nop

08000eb8 <__aeabi_cfrcmple>:
 8000eb8:	4684      	mov	ip, r0
 8000eba:	4608      	mov	r0, r1
 8000ebc:	4661      	mov	r1, ip
 8000ebe:	e7ff      	b.n	8000ec0 <__aeabi_cfcmpeq>

08000ec0 <__aeabi_cfcmpeq>:
 8000ec0:	b50f      	push	{r0, r1, r2, r3, lr}
 8000ec2:	f7ff ffc9 	bl	8000e58 <__cmpsf2>
 8000ec6:	2800      	cmp	r0, #0
 8000ec8:	bf48      	it	mi
 8000eca:	f110 0f00 	cmnmi.w	r0, #0
 8000ece:	bd0f      	pop	{r0, r1, r2, r3, pc}

08000ed0 <__aeabi_fcmpeq>:
 8000ed0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ed4:	f7ff fff4 	bl	8000ec0 <__aeabi_cfcmpeq>
 8000ed8:	bf0c      	ite	eq
 8000eda:	2001      	moveq	r0, #1
 8000edc:	2000      	movne	r0, #0
 8000ede:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ee2:	bf00      	nop

08000ee4 <__aeabi_fcmplt>:
 8000ee4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ee8:	f7ff ffea 	bl	8000ec0 <__aeabi_cfcmpeq>
 8000eec:	bf34      	ite	cc
 8000eee:	2001      	movcc	r0, #1
 8000ef0:	2000      	movcs	r0, #0
 8000ef2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ef6:	bf00      	nop

08000ef8 <__aeabi_fcmple>:
 8000ef8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000efc:	f7ff ffe0 	bl	8000ec0 <__aeabi_cfcmpeq>
 8000f00:	bf94      	ite	ls
 8000f02:	2001      	movls	r0, #1
 8000f04:	2000      	movhi	r0, #0
 8000f06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000f0a:	bf00      	nop

08000f0c <__aeabi_fcmpge>:
 8000f0c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000f10:	f7ff ffd2 	bl	8000eb8 <__aeabi_cfrcmple>
 8000f14:	bf94      	ite	ls
 8000f16:	2001      	movls	r0, #1
 8000f18:	2000      	movhi	r0, #0
 8000f1a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000f1e:	bf00      	nop

08000f20 <__aeabi_fcmpgt>:
 8000f20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000f24:	f7ff ffc8 	bl	8000eb8 <__aeabi_cfrcmple>
 8000f28:	bf34      	ite	cc
 8000f2a:	2001      	movcc	r0, #1
 8000f2c:	2000      	movcs	r0, #0
 8000f2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000f32:	bf00      	nop

08000f34 <__aeabi_fcmpun>:
 8000f34:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000f38:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000f3c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000f40:	d102      	bne.n	8000f48 <__aeabi_fcmpun+0x14>
 8000f42:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000f46:	d108      	bne.n	8000f5a <__aeabi_fcmpun+0x26>
 8000f48:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8000f4c:	d102      	bne.n	8000f54 <__aeabi_fcmpun+0x20>
 8000f4e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000f52:	d102      	bne.n	8000f5a <__aeabi_fcmpun+0x26>
 8000f54:	f04f 0000 	mov.w	r0, #0
 8000f58:	4770      	bx	lr
 8000f5a:	f04f 0001 	mov.w	r0, #1
 8000f5e:	4770      	bx	lr

08000f60 <__aeabi_f2iz>:
 8000f60:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000f64:	f1b2 4ffe 	cmp.w	r2, #2130706432	@ 0x7f000000
 8000f68:	d30f      	bcc.n	8000f8a <__aeabi_f2iz+0x2a>
 8000f6a:	f04f 039e 	mov.w	r3, #158	@ 0x9e
 8000f6e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000f72:	d90d      	bls.n	8000f90 <__aeabi_f2iz+0x30>
 8000f74:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000f78:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000f7c:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000f80:	fa23 f002 	lsr.w	r0, r3, r2
 8000f84:	bf18      	it	ne
 8000f86:	4240      	negne	r0, r0
 8000f88:	4770      	bx	lr
 8000f8a:	f04f 0000 	mov.w	r0, #0
 8000f8e:	4770      	bx	lr
 8000f90:	f112 0f61 	cmn.w	r2, #97	@ 0x61
 8000f94:	d101      	bne.n	8000f9a <__aeabi_f2iz+0x3a>
 8000f96:	0242      	lsls	r2, r0, #9
 8000f98:	d105      	bne.n	8000fa6 <__aeabi_f2iz+0x46>
 8000f9a:	f010 4000 	ands.w	r0, r0, #2147483648	@ 0x80000000
 8000f9e:	bf08      	it	eq
 8000fa0:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000fa4:	4770      	bx	lr
 8000fa6:	f04f 0000 	mov.w	r0, #0
 8000faa:	4770      	bx	lr

08000fac <generate_output>:
	out_string[index] = '\0';

	return out_string;
}

void generate_output(){
 8000fac:	b580      	push	{r7, lr}
 8000fae:	b086      	sub	sp, #24
 8000fb0:	af00      	add	r7, sp, #0
	for (int y = 0; y < OUT_BUFFER_DIM; y++) {
 8000fb2:	2300      	movs	r3, #0
 8000fb4:	617b      	str	r3, [r7, #20]
 8000fb6:	e013      	b.n	8000fe0 <generate_output+0x34>
		for (int x = 0; x < OUT_BUFFER_DIM; x++) {
 8000fb8:	2300      	movs	r3, #0
 8000fba:	613b      	str	r3, [r7, #16]
 8000fbc:	e00a      	b.n	8000fd4 <generate_output+0x28>
			out_buffer[y][x] = 0;
 8000fbe:	4a2a      	ldr	r2, [pc, #168]	@ (8001068 <generate_output+0xbc>)
 8000fc0:	697b      	ldr	r3, [r7, #20]
 8000fc2:	00db      	lsls	r3, r3, #3
 8000fc4:	441a      	add	r2, r3
 8000fc6:	693b      	ldr	r3, [r7, #16]
 8000fc8:	4413      	add	r3, r2
 8000fca:	2200      	movs	r2, #0
 8000fcc:	701a      	strb	r2, [r3, #0]
		for (int x = 0; x < OUT_BUFFER_DIM; x++) {
 8000fce:	693b      	ldr	r3, [r7, #16]
 8000fd0:	3301      	adds	r3, #1
 8000fd2:	613b      	str	r3, [r7, #16]
 8000fd4:	693b      	ldr	r3, [r7, #16]
 8000fd6:	2b07      	cmp	r3, #7
 8000fd8:	ddf1      	ble.n	8000fbe <generate_output+0x12>
	for (int y = 0; y < OUT_BUFFER_DIM; y++) {
 8000fda:	697b      	ldr	r3, [r7, #20]
 8000fdc:	3301      	adds	r3, #1
 8000fde:	617b      	str	r3, [r7, #20]
 8000fe0:	697b      	ldr	r3, [r7, #20]
 8000fe2:	2b07      	cmp	r3, #7
 8000fe4:	dde8      	ble.n	8000fb8 <generate_output+0xc>
		}
	}
	for (int i = 0; i < PARTICLE_COUNT; i++) {
 8000fe6:	2300      	movs	r3, #0
 8000fe8:	60fb      	str	r3, [r7, #12]
 8000fea:	e035      	b.n	8001058 <generate_output+0xac>
		Particle* p = particles + i;
 8000fec:	68fb      	ldr	r3, [r7, #12]
 8000fee:	011b      	lsls	r3, r3, #4
 8000ff0:	4a1e      	ldr	r2, [pc, #120]	@ (800106c <generate_output+0xc0>)
 8000ff2:	4413      	add	r3, r2
 8000ff4:	60bb      	str	r3, [r7, #8]
		int x = p->pos.x / GRID_SIZE * OUT_BUFFER_DIM;
 8000ff6:	68bb      	ldr	r3, [r7, #8]
 8000ff8:	681b      	ldr	r3, [r3, #0]
 8000ffa:	f04f 4182 	mov.w	r1, #1090519040	@ 0x41000000
 8000ffe:	4618      	mov	r0, r3
 8001000:	f7ff fe86 	bl	8000d10 <__aeabi_fdiv>
 8001004:	4603      	mov	r3, r0
 8001006:	f04f 4182 	mov.w	r1, #1090519040	@ 0x41000000
 800100a:	4618      	mov	r0, r3
 800100c:	f7ff fdcc 	bl	8000ba8 <__aeabi_fmul>
 8001010:	4603      	mov	r3, r0
 8001012:	4618      	mov	r0, r3
 8001014:	f7ff ffa4 	bl	8000f60 <__aeabi_f2iz>
 8001018:	4603      	mov	r3, r0
 800101a:	607b      	str	r3, [r7, #4]
		int y = p->pos.y / GRID_SIZE * OUT_BUFFER_DIM;
 800101c:	68bb      	ldr	r3, [r7, #8]
 800101e:	685b      	ldr	r3, [r3, #4]
 8001020:	f04f 4182 	mov.w	r1, #1090519040	@ 0x41000000
 8001024:	4618      	mov	r0, r3
 8001026:	f7ff fe73 	bl	8000d10 <__aeabi_fdiv>
 800102a:	4603      	mov	r3, r0
 800102c:	f04f 4182 	mov.w	r1, #1090519040	@ 0x41000000
 8001030:	4618      	mov	r0, r3
 8001032:	f7ff fdb9 	bl	8000ba8 <__aeabi_fmul>
 8001036:	4603      	mov	r3, r0
 8001038:	4618      	mov	r0, r3
 800103a:	f7ff ff91 	bl	8000f60 <__aeabi_f2iz>
 800103e:	4603      	mov	r3, r0
 8001040:	603b      	str	r3, [r7, #0]
		out_buffer[y][x] = 1;
 8001042:	4a09      	ldr	r2, [pc, #36]	@ (8001068 <generate_output+0xbc>)
 8001044:	683b      	ldr	r3, [r7, #0]
 8001046:	00db      	lsls	r3, r3, #3
 8001048:	441a      	add	r2, r3
 800104a:	687b      	ldr	r3, [r7, #4]
 800104c:	4413      	add	r3, r2
 800104e:	2201      	movs	r2, #1
 8001050:	701a      	strb	r2, [r3, #0]
	for (int i = 0; i < PARTICLE_COUNT; i++) {
 8001052:	68fb      	ldr	r3, [r7, #12]
 8001054:	3301      	adds	r3, #1
 8001056:	60fb      	str	r3, [r7, #12]
 8001058:	68fb      	ldr	r3, [r7, #12]
 800105a:	2b1d      	cmp	r3, #29
 800105c:	ddc6      	ble.n	8000fec <generate_output+0x40>
	}
}
 800105e:	bf00      	nop
 8001060:	bf00      	nop
 8001062:	3718      	adds	r7, #24
 8001064:	46bd      	mov	sp, r7
 8001066:	bd80      	pop	{r7, pc}
 8001068:	20000768 	.word	0x20000768
 800106c:	2000010c 	.word	0x2000010c

08001070 <init_particles_middle>:
        particles[i].vel.x = 0.0f;
        particles[i].vel.y = 0.0f;
    }
}

void init_particles_middle() {
 8001070:	b580      	push	{r7, lr}
 8001072:	b082      	sub	sp, #8
 8001074:	af00      	add	r7, sp, #0
    for (int i = 0; i < PARTICLE_COUNT; i++) {
 8001076:	2300      	movs	r3, #0
 8001078:	607b      	str	r3, [r7, #4]
 800107a:	e05b      	b.n	8001134 <init_particles_middle+0xc4>
        particles[i].pos.x = (float)rand() / RAND_MAX * GRID_SIZE / 3 + GRID_SIZE / 3;
 800107c:	f003 faf0 	bl	8004660 <rand>
 8001080:	4603      	mov	r3, r0
 8001082:	4618      	mov	r0, r3
 8001084:	f7ff fd3c 	bl	8000b00 <__aeabi_i2f>
 8001088:	4603      	mov	r3, r0
 800108a:	f04f 419e 	mov.w	r1, #1325400064	@ 0x4f000000
 800108e:	4618      	mov	r0, r3
 8001090:	f7ff fe3e 	bl	8000d10 <__aeabi_fdiv>
 8001094:	4603      	mov	r3, r0
 8001096:	f04f 4182 	mov.w	r1, #1090519040	@ 0x41000000
 800109a:	4618      	mov	r0, r3
 800109c:	f7ff fd84 	bl	8000ba8 <__aeabi_fmul>
 80010a0:	4603      	mov	r3, r0
 80010a2:	4928      	ldr	r1, [pc, #160]	@ (8001144 <init_particles_middle+0xd4>)
 80010a4:	4618      	mov	r0, r3
 80010a6:	f7ff fe33 	bl	8000d10 <__aeabi_fdiv>
 80010aa:	4603      	mov	r3, r0
 80010ac:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
 80010b0:	4618      	mov	r0, r3
 80010b2:	f7ff fc71 	bl	8000998 <__addsf3>
 80010b6:	4603      	mov	r3, r0
 80010b8:	4619      	mov	r1, r3
 80010ba:	4a23      	ldr	r2, [pc, #140]	@ (8001148 <init_particles_middle+0xd8>)
 80010bc:	687b      	ldr	r3, [r7, #4]
 80010be:	011b      	lsls	r3, r3, #4
 80010c0:	4413      	add	r3, r2
 80010c2:	6019      	str	r1, [r3, #0]
        particles[i].pos.y = (float)rand() / RAND_MAX * GRID_SIZE / 3 + GRID_SIZE / 3;
 80010c4:	f003 facc 	bl	8004660 <rand>
 80010c8:	4603      	mov	r3, r0
 80010ca:	4618      	mov	r0, r3
 80010cc:	f7ff fd18 	bl	8000b00 <__aeabi_i2f>
 80010d0:	4603      	mov	r3, r0
 80010d2:	f04f 419e 	mov.w	r1, #1325400064	@ 0x4f000000
 80010d6:	4618      	mov	r0, r3
 80010d8:	f7ff fe1a 	bl	8000d10 <__aeabi_fdiv>
 80010dc:	4603      	mov	r3, r0
 80010de:	f04f 4182 	mov.w	r1, #1090519040	@ 0x41000000
 80010e2:	4618      	mov	r0, r3
 80010e4:	f7ff fd60 	bl	8000ba8 <__aeabi_fmul>
 80010e8:	4603      	mov	r3, r0
 80010ea:	4916      	ldr	r1, [pc, #88]	@ (8001144 <init_particles_middle+0xd4>)
 80010ec:	4618      	mov	r0, r3
 80010ee:	f7ff fe0f 	bl	8000d10 <__aeabi_fdiv>
 80010f2:	4603      	mov	r3, r0
 80010f4:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
 80010f8:	4618      	mov	r0, r3
 80010fa:	f7ff fc4d 	bl	8000998 <__addsf3>
 80010fe:	4603      	mov	r3, r0
 8001100:	4619      	mov	r1, r3
 8001102:	4a11      	ldr	r2, [pc, #68]	@ (8001148 <init_particles_middle+0xd8>)
 8001104:	687b      	ldr	r3, [r7, #4]
 8001106:	011b      	lsls	r3, r3, #4
 8001108:	4413      	add	r3, r2
 800110a:	3304      	adds	r3, #4
 800110c:	6019      	str	r1, [r3, #0]
        particles[i].vel.x = 0.0f;
 800110e:	4a0e      	ldr	r2, [pc, #56]	@ (8001148 <init_particles_middle+0xd8>)
 8001110:	687b      	ldr	r3, [r7, #4]
 8001112:	011b      	lsls	r3, r3, #4
 8001114:	4413      	add	r3, r2
 8001116:	3308      	adds	r3, #8
 8001118:	f04f 0200 	mov.w	r2, #0
 800111c:	601a      	str	r2, [r3, #0]
        particles[i].vel.y = 0.0f;
 800111e:	4a0a      	ldr	r2, [pc, #40]	@ (8001148 <init_particles_middle+0xd8>)
 8001120:	687b      	ldr	r3, [r7, #4]
 8001122:	011b      	lsls	r3, r3, #4
 8001124:	4413      	add	r3, r2
 8001126:	330c      	adds	r3, #12
 8001128:	f04f 0200 	mov.w	r2, #0
 800112c:	601a      	str	r2, [r3, #0]
    for (int i = 0; i < PARTICLE_COUNT; i++) {
 800112e:	687b      	ldr	r3, [r7, #4]
 8001130:	3301      	adds	r3, #1
 8001132:	607b      	str	r3, [r7, #4]
 8001134:	687b      	ldr	r3, [r7, #4]
 8001136:	2b1d      	cmp	r3, #29
 8001138:	dda0      	ble.n	800107c <init_particles_middle+0xc>
    }
}
 800113a:	bf00      	nop
 800113c:	bf00      	nop
 800113e:	3708      	adds	r7, #8
 8001140:	46bd      	mov	sp, r7
 8001142:	bd80      	pop	{r7, pc}
 8001144:	40400000 	.word	0x40400000
 8001148:	2000010c 	.word	0x2000010c

0800114c <clear_grid>:


void clear_grid() {
 800114c:	b480      	push	{r7}
 800114e:	b083      	sub	sp, #12
 8001150:	af00      	add	r7, sp, #0
    for (int y = 0; y < GRID_SIZE; y++)
 8001152:	2300      	movs	r3, #0
 8001154:	607b      	str	r3, [r7, #4]
 8001156:	e040      	b.n	80011da <clear_grid+0x8e>
        for (int x = 0; x < GRID_SIZE; x++) {
 8001158:	2300      	movs	r3, #0
 800115a:	603b      	str	r3, [r7, #0]
 800115c:	e037      	b.n	80011ce <clear_grid+0x82>
            grid[y][x].velocity.x = 0.0f;
 800115e:	4823      	ldr	r0, [pc, #140]	@ (80011ec <clear_grid+0xa0>)
 8001160:	683b      	ldr	r3, [r7, #0]
 8001162:	6879      	ldr	r1, [r7, #4]
 8001164:	461a      	mov	r2, r3
 8001166:	0052      	lsls	r2, r2, #1
 8001168:	441a      	add	r2, r3
 800116a:	0093      	lsls	r3, r2, #2
 800116c:	461a      	mov	r2, r3
 800116e:	460b      	mov	r3, r1
 8001170:	005b      	lsls	r3, r3, #1
 8001172:	440b      	add	r3, r1
 8001174:	015b      	lsls	r3, r3, #5
 8001176:	4413      	add	r3, r2
 8001178:	4403      	add	r3, r0
 800117a:	f04f 0200 	mov.w	r2, #0
 800117e:	601a      	str	r2, [r3, #0]
            grid[y][x].velocity.y = 0.0f;
 8001180:	481a      	ldr	r0, [pc, #104]	@ (80011ec <clear_grid+0xa0>)
 8001182:	683b      	ldr	r3, [r7, #0]
 8001184:	6879      	ldr	r1, [r7, #4]
 8001186:	461a      	mov	r2, r3
 8001188:	0052      	lsls	r2, r2, #1
 800118a:	441a      	add	r2, r3
 800118c:	0093      	lsls	r3, r2, #2
 800118e:	461a      	mov	r2, r3
 8001190:	460b      	mov	r3, r1
 8001192:	005b      	lsls	r3, r3, #1
 8001194:	440b      	add	r3, r1
 8001196:	015b      	lsls	r3, r3, #5
 8001198:	4413      	add	r3, r2
 800119a:	4403      	add	r3, r0
 800119c:	3304      	adds	r3, #4
 800119e:	f04f 0200 	mov.w	r2, #0
 80011a2:	601a      	str	r2, [r3, #0]
            grid[y][x].mass = 0.0f;
 80011a4:	4811      	ldr	r0, [pc, #68]	@ (80011ec <clear_grid+0xa0>)
 80011a6:	683b      	ldr	r3, [r7, #0]
 80011a8:	6879      	ldr	r1, [r7, #4]
 80011aa:	461a      	mov	r2, r3
 80011ac:	0052      	lsls	r2, r2, #1
 80011ae:	441a      	add	r2, r3
 80011b0:	0093      	lsls	r3, r2, #2
 80011b2:	461a      	mov	r2, r3
 80011b4:	460b      	mov	r3, r1
 80011b6:	005b      	lsls	r3, r3, #1
 80011b8:	440b      	add	r3, r1
 80011ba:	015b      	lsls	r3, r3, #5
 80011bc:	4413      	add	r3, r2
 80011be:	4403      	add	r3, r0
 80011c0:	3308      	adds	r3, #8
 80011c2:	f04f 0200 	mov.w	r2, #0
 80011c6:	601a      	str	r2, [r3, #0]
        for (int x = 0; x < GRID_SIZE; x++) {
 80011c8:	683b      	ldr	r3, [r7, #0]
 80011ca:	3301      	adds	r3, #1
 80011cc:	603b      	str	r3, [r7, #0]
 80011ce:	683b      	ldr	r3, [r7, #0]
 80011d0:	2b07      	cmp	r3, #7
 80011d2:	ddc4      	ble.n	800115e <clear_grid+0x12>
    for (int y = 0; y < GRID_SIZE; y++)
 80011d4:	687b      	ldr	r3, [r7, #4]
 80011d6:	3301      	adds	r3, #1
 80011d8:	607b      	str	r3, [r7, #4]
 80011da:	687b      	ldr	r3, [r7, #4]
 80011dc:	2b07      	cmp	r3, #7
 80011de:	ddbb      	ble.n	8001158 <clear_grid+0xc>
        }
}
 80011e0:	bf00      	nop
 80011e2:	bf00      	nop
 80011e4:	370c      	adds	r7, #12
 80011e6:	46bd      	mov	sp, r7
 80011e8:	bc80      	pop	{r7}
 80011ea:	4770      	bx	lr
 80011ec:	200002ec 	.word	0x200002ec

080011f0 <particle_to_grid>:

void particle_to_grid() {
 80011f0:	b590      	push	{r4, r7, lr}
 80011f2:	b087      	sub	sp, #28
 80011f4:	af00      	add	r7, sp, #0
    for (int i = 0; i < PARTICLE_COUNT; i++) {
 80011f6:	2300      	movs	r3, #0
 80011f8:	617b      	str	r3, [r7, #20]
 80011fa:	e096      	b.n	800132a <particle_to_grid+0x13a>
        Particle* p = &particles[i];
 80011fc:	697b      	ldr	r3, [r7, #20]
 80011fe:	011b      	lsls	r3, r3, #4
 8001200:	4a98      	ldr	r2, [pc, #608]	@ (8001464 <particle_to_grid+0x274>)
 8001202:	4413      	add	r3, r2
 8001204:	60bb      	str	r3, [r7, #8]
        int x = (int)p->pos.x;
 8001206:	68bb      	ldr	r3, [r7, #8]
 8001208:	681b      	ldr	r3, [r3, #0]
 800120a:	4618      	mov	r0, r3
 800120c:	f7ff fea8 	bl	8000f60 <__aeabi_f2iz>
 8001210:	4603      	mov	r3, r0
 8001212:	607b      	str	r3, [r7, #4]
        int y = (int)p->pos.y;
 8001214:	68bb      	ldr	r3, [r7, #8]
 8001216:	685b      	ldr	r3, [r3, #4]
 8001218:	4618      	mov	r0, r3
 800121a:	f7ff fea1 	bl	8000f60 <__aeabi_f2iz>
 800121e:	4603      	mov	r3, r0
 8001220:	603b      	str	r3, [r7, #0]

        if (x >= 0 && x < GRID_SIZE && y >= 0 && y < GRID_SIZE) {
 8001222:	687b      	ldr	r3, [r7, #4]
 8001224:	2b00      	cmp	r3, #0
 8001226:	db7d      	blt.n	8001324 <particle_to_grid+0x134>
 8001228:	687b      	ldr	r3, [r7, #4]
 800122a:	2b07      	cmp	r3, #7
 800122c:	dc7a      	bgt.n	8001324 <particle_to_grid+0x134>
 800122e:	683b      	ldr	r3, [r7, #0]
 8001230:	2b00      	cmp	r3, #0
 8001232:	db77      	blt.n	8001324 <particle_to_grid+0x134>
 8001234:	683b      	ldr	r3, [r7, #0]
 8001236:	2b07      	cmp	r3, #7
 8001238:	dc74      	bgt.n	8001324 <particle_to_grid+0x134>
            grid[y][x].velocity.x += p->vel.x;
 800123a:	488b      	ldr	r0, [pc, #556]	@ (8001468 <particle_to_grid+0x278>)
 800123c:	687b      	ldr	r3, [r7, #4]
 800123e:	6839      	ldr	r1, [r7, #0]
 8001240:	461a      	mov	r2, r3
 8001242:	0052      	lsls	r2, r2, #1
 8001244:	441a      	add	r2, r3
 8001246:	0093      	lsls	r3, r2, #2
 8001248:	461a      	mov	r2, r3
 800124a:	460b      	mov	r3, r1
 800124c:	005b      	lsls	r3, r3, #1
 800124e:	440b      	add	r3, r1
 8001250:	015b      	lsls	r3, r3, #5
 8001252:	4413      	add	r3, r2
 8001254:	4403      	add	r3, r0
 8001256:	681a      	ldr	r2, [r3, #0]
 8001258:	68bb      	ldr	r3, [r7, #8]
 800125a:	689b      	ldr	r3, [r3, #8]
 800125c:	4619      	mov	r1, r3
 800125e:	4610      	mov	r0, r2
 8001260:	f7ff fb9a 	bl	8000998 <__addsf3>
 8001264:	4603      	mov	r3, r0
 8001266:	461c      	mov	r4, r3
 8001268:	487f      	ldr	r0, [pc, #508]	@ (8001468 <particle_to_grid+0x278>)
 800126a:	687b      	ldr	r3, [r7, #4]
 800126c:	6839      	ldr	r1, [r7, #0]
 800126e:	461a      	mov	r2, r3
 8001270:	0052      	lsls	r2, r2, #1
 8001272:	441a      	add	r2, r3
 8001274:	0093      	lsls	r3, r2, #2
 8001276:	461a      	mov	r2, r3
 8001278:	460b      	mov	r3, r1
 800127a:	005b      	lsls	r3, r3, #1
 800127c:	440b      	add	r3, r1
 800127e:	015b      	lsls	r3, r3, #5
 8001280:	4413      	add	r3, r2
 8001282:	4403      	add	r3, r0
 8001284:	601c      	str	r4, [r3, #0]
            grid[y][x].velocity.y += p->vel.y;
 8001286:	4878      	ldr	r0, [pc, #480]	@ (8001468 <particle_to_grid+0x278>)
 8001288:	687b      	ldr	r3, [r7, #4]
 800128a:	6839      	ldr	r1, [r7, #0]
 800128c:	461a      	mov	r2, r3
 800128e:	0052      	lsls	r2, r2, #1
 8001290:	441a      	add	r2, r3
 8001292:	0093      	lsls	r3, r2, #2
 8001294:	461a      	mov	r2, r3
 8001296:	460b      	mov	r3, r1
 8001298:	005b      	lsls	r3, r3, #1
 800129a:	440b      	add	r3, r1
 800129c:	015b      	lsls	r3, r3, #5
 800129e:	4413      	add	r3, r2
 80012a0:	4403      	add	r3, r0
 80012a2:	3304      	adds	r3, #4
 80012a4:	681a      	ldr	r2, [r3, #0]
 80012a6:	68bb      	ldr	r3, [r7, #8]
 80012a8:	68db      	ldr	r3, [r3, #12]
 80012aa:	4619      	mov	r1, r3
 80012ac:	4610      	mov	r0, r2
 80012ae:	f7ff fb73 	bl	8000998 <__addsf3>
 80012b2:	4603      	mov	r3, r0
 80012b4:	461c      	mov	r4, r3
 80012b6:	486c      	ldr	r0, [pc, #432]	@ (8001468 <particle_to_grid+0x278>)
 80012b8:	687b      	ldr	r3, [r7, #4]
 80012ba:	6839      	ldr	r1, [r7, #0]
 80012bc:	461a      	mov	r2, r3
 80012be:	0052      	lsls	r2, r2, #1
 80012c0:	441a      	add	r2, r3
 80012c2:	0093      	lsls	r3, r2, #2
 80012c4:	461a      	mov	r2, r3
 80012c6:	460b      	mov	r3, r1
 80012c8:	005b      	lsls	r3, r3, #1
 80012ca:	440b      	add	r3, r1
 80012cc:	015b      	lsls	r3, r3, #5
 80012ce:	4413      	add	r3, r2
 80012d0:	4403      	add	r3, r0
 80012d2:	3304      	adds	r3, #4
 80012d4:	601c      	str	r4, [r3, #0]
            grid[y][x].mass += 1.0f;
 80012d6:	4864      	ldr	r0, [pc, #400]	@ (8001468 <particle_to_grid+0x278>)
 80012d8:	687b      	ldr	r3, [r7, #4]
 80012da:	6839      	ldr	r1, [r7, #0]
 80012dc:	461a      	mov	r2, r3
 80012de:	0052      	lsls	r2, r2, #1
 80012e0:	441a      	add	r2, r3
 80012e2:	0093      	lsls	r3, r2, #2
 80012e4:	461a      	mov	r2, r3
 80012e6:	460b      	mov	r3, r1
 80012e8:	005b      	lsls	r3, r3, #1
 80012ea:	440b      	add	r3, r1
 80012ec:	015b      	lsls	r3, r3, #5
 80012ee:	4413      	add	r3, r2
 80012f0:	4403      	add	r3, r0
 80012f2:	3308      	adds	r3, #8
 80012f4:	681b      	ldr	r3, [r3, #0]
 80012f6:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 80012fa:	4618      	mov	r0, r3
 80012fc:	f7ff fb4c 	bl	8000998 <__addsf3>
 8001300:	4603      	mov	r3, r0
 8001302:	461c      	mov	r4, r3
 8001304:	4858      	ldr	r0, [pc, #352]	@ (8001468 <particle_to_grid+0x278>)
 8001306:	687b      	ldr	r3, [r7, #4]
 8001308:	6839      	ldr	r1, [r7, #0]
 800130a:	461a      	mov	r2, r3
 800130c:	0052      	lsls	r2, r2, #1
 800130e:	441a      	add	r2, r3
 8001310:	0093      	lsls	r3, r2, #2
 8001312:	461a      	mov	r2, r3
 8001314:	460b      	mov	r3, r1
 8001316:	005b      	lsls	r3, r3, #1
 8001318:	440b      	add	r3, r1
 800131a:	015b      	lsls	r3, r3, #5
 800131c:	4413      	add	r3, r2
 800131e:	4403      	add	r3, r0
 8001320:	3308      	adds	r3, #8
 8001322:	601c      	str	r4, [r3, #0]
    for (int i = 0; i < PARTICLE_COUNT; i++) {
 8001324:	697b      	ldr	r3, [r7, #20]
 8001326:	3301      	adds	r3, #1
 8001328:	617b      	str	r3, [r7, #20]
 800132a:	697b      	ldr	r3, [r7, #20]
 800132c:	2b1d      	cmp	r3, #29
 800132e:	f77f af65 	ble.w	80011fc <particle_to_grid+0xc>
        }
    }

    for (int y = 0; y < GRID_SIZE; y++)
 8001332:	2300      	movs	r3, #0
 8001334:	613b      	str	r3, [r7, #16]
 8001336:	e08c      	b.n	8001452 <particle_to_grid+0x262>
        for (int x = 0; x < GRID_SIZE; x++) {
 8001338:	2300      	movs	r3, #0
 800133a:	60fb      	str	r3, [r7, #12]
 800133c:	e082      	b.n	8001444 <particle_to_grid+0x254>
            if (grid[y][x].mass > 0.0f) {
 800133e:	484a      	ldr	r0, [pc, #296]	@ (8001468 <particle_to_grid+0x278>)
 8001340:	68fb      	ldr	r3, [r7, #12]
 8001342:	6939      	ldr	r1, [r7, #16]
 8001344:	461a      	mov	r2, r3
 8001346:	0052      	lsls	r2, r2, #1
 8001348:	441a      	add	r2, r3
 800134a:	0093      	lsls	r3, r2, #2
 800134c:	461a      	mov	r2, r3
 800134e:	460b      	mov	r3, r1
 8001350:	005b      	lsls	r3, r3, #1
 8001352:	440b      	add	r3, r1
 8001354:	015b      	lsls	r3, r3, #5
 8001356:	4413      	add	r3, r2
 8001358:	4403      	add	r3, r0
 800135a:	3308      	adds	r3, #8
 800135c:	681b      	ldr	r3, [r3, #0]
 800135e:	f04f 0100 	mov.w	r1, #0
 8001362:	4618      	mov	r0, r3
 8001364:	f7ff fddc 	bl	8000f20 <__aeabi_fcmpgt>
 8001368:	4603      	mov	r3, r0
 800136a:	2b00      	cmp	r3, #0
 800136c:	d067      	beq.n	800143e <particle_to_grid+0x24e>
                grid[y][x].velocity.x /= grid[y][x].mass;
 800136e:	483e      	ldr	r0, [pc, #248]	@ (8001468 <particle_to_grid+0x278>)
 8001370:	68fb      	ldr	r3, [r7, #12]
 8001372:	6939      	ldr	r1, [r7, #16]
 8001374:	461a      	mov	r2, r3
 8001376:	0052      	lsls	r2, r2, #1
 8001378:	441a      	add	r2, r3
 800137a:	0093      	lsls	r3, r2, #2
 800137c:	461a      	mov	r2, r3
 800137e:	460b      	mov	r3, r1
 8001380:	005b      	lsls	r3, r3, #1
 8001382:	440b      	add	r3, r1
 8001384:	015b      	lsls	r3, r3, #5
 8001386:	4413      	add	r3, r2
 8001388:	4403      	add	r3, r0
 800138a:	6818      	ldr	r0, [r3, #0]
 800138c:	4c36      	ldr	r4, [pc, #216]	@ (8001468 <particle_to_grid+0x278>)
 800138e:	68fb      	ldr	r3, [r7, #12]
 8001390:	6939      	ldr	r1, [r7, #16]
 8001392:	461a      	mov	r2, r3
 8001394:	0052      	lsls	r2, r2, #1
 8001396:	441a      	add	r2, r3
 8001398:	0093      	lsls	r3, r2, #2
 800139a:	461a      	mov	r2, r3
 800139c:	460b      	mov	r3, r1
 800139e:	005b      	lsls	r3, r3, #1
 80013a0:	440b      	add	r3, r1
 80013a2:	015b      	lsls	r3, r3, #5
 80013a4:	4413      	add	r3, r2
 80013a6:	4423      	add	r3, r4
 80013a8:	3308      	adds	r3, #8
 80013aa:	681b      	ldr	r3, [r3, #0]
 80013ac:	4619      	mov	r1, r3
 80013ae:	f7ff fcaf 	bl	8000d10 <__aeabi_fdiv>
 80013b2:	4603      	mov	r3, r0
 80013b4:	461c      	mov	r4, r3
 80013b6:	482c      	ldr	r0, [pc, #176]	@ (8001468 <particle_to_grid+0x278>)
 80013b8:	68fb      	ldr	r3, [r7, #12]
 80013ba:	6939      	ldr	r1, [r7, #16]
 80013bc:	461a      	mov	r2, r3
 80013be:	0052      	lsls	r2, r2, #1
 80013c0:	441a      	add	r2, r3
 80013c2:	0093      	lsls	r3, r2, #2
 80013c4:	461a      	mov	r2, r3
 80013c6:	460b      	mov	r3, r1
 80013c8:	005b      	lsls	r3, r3, #1
 80013ca:	440b      	add	r3, r1
 80013cc:	015b      	lsls	r3, r3, #5
 80013ce:	4413      	add	r3, r2
 80013d0:	4403      	add	r3, r0
 80013d2:	601c      	str	r4, [r3, #0]
                grid[y][x].velocity.y /= grid[y][x].mass;
 80013d4:	4824      	ldr	r0, [pc, #144]	@ (8001468 <particle_to_grid+0x278>)
 80013d6:	68fb      	ldr	r3, [r7, #12]
 80013d8:	6939      	ldr	r1, [r7, #16]
 80013da:	461a      	mov	r2, r3
 80013dc:	0052      	lsls	r2, r2, #1
 80013de:	441a      	add	r2, r3
 80013e0:	0093      	lsls	r3, r2, #2
 80013e2:	461a      	mov	r2, r3
 80013e4:	460b      	mov	r3, r1
 80013e6:	005b      	lsls	r3, r3, #1
 80013e8:	440b      	add	r3, r1
 80013ea:	015b      	lsls	r3, r3, #5
 80013ec:	4413      	add	r3, r2
 80013ee:	4403      	add	r3, r0
 80013f0:	3304      	adds	r3, #4
 80013f2:	6818      	ldr	r0, [r3, #0]
 80013f4:	4c1c      	ldr	r4, [pc, #112]	@ (8001468 <particle_to_grid+0x278>)
 80013f6:	68fb      	ldr	r3, [r7, #12]
 80013f8:	6939      	ldr	r1, [r7, #16]
 80013fa:	461a      	mov	r2, r3
 80013fc:	0052      	lsls	r2, r2, #1
 80013fe:	441a      	add	r2, r3
 8001400:	0093      	lsls	r3, r2, #2
 8001402:	461a      	mov	r2, r3
 8001404:	460b      	mov	r3, r1
 8001406:	005b      	lsls	r3, r3, #1
 8001408:	440b      	add	r3, r1
 800140a:	015b      	lsls	r3, r3, #5
 800140c:	4413      	add	r3, r2
 800140e:	4423      	add	r3, r4
 8001410:	3308      	adds	r3, #8
 8001412:	681b      	ldr	r3, [r3, #0]
 8001414:	4619      	mov	r1, r3
 8001416:	f7ff fc7b 	bl	8000d10 <__aeabi_fdiv>
 800141a:	4603      	mov	r3, r0
 800141c:	461c      	mov	r4, r3
 800141e:	4812      	ldr	r0, [pc, #72]	@ (8001468 <particle_to_grid+0x278>)
 8001420:	68fb      	ldr	r3, [r7, #12]
 8001422:	6939      	ldr	r1, [r7, #16]
 8001424:	461a      	mov	r2, r3
 8001426:	0052      	lsls	r2, r2, #1
 8001428:	441a      	add	r2, r3
 800142a:	0093      	lsls	r3, r2, #2
 800142c:	461a      	mov	r2, r3
 800142e:	460b      	mov	r3, r1
 8001430:	005b      	lsls	r3, r3, #1
 8001432:	440b      	add	r3, r1
 8001434:	015b      	lsls	r3, r3, #5
 8001436:	4413      	add	r3, r2
 8001438:	4403      	add	r3, r0
 800143a:	3304      	adds	r3, #4
 800143c:	601c      	str	r4, [r3, #0]
        for (int x = 0; x < GRID_SIZE; x++) {
 800143e:	68fb      	ldr	r3, [r7, #12]
 8001440:	3301      	adds	r3, #1
 8001442:	60fb      	str	r3, [r7, #12]
 8001444:	68fb      	ldr	r3, [r7, #12]
 8001446:	2b07      	cmp	r3, #7
 8001448:	f77f af79 	ble.w	800133e <particle_to_grid+0x14e>
    for (int y = 0; y < GRID_SIZE; y++)
 800144c:	693b      	ldr	r3, [r7, #16]
 800144e:	3301      	adds	r3, #1
 8001450:	613b      	str	r3, [r7, #16]
 8001452:	693b      	ldr	r3, [r7, #16]
 8001454:	2b07      	cmp	r3, #7
 8001456:	f77f af6f 	ble.w	8001338 <particle_to_grid+0x148>
            }
        }
}
 800145a:	bf00      	nop
 800145c:	bf00      	nop
 800145e:	371c      	adds	r7, #28
 8001460:	46bd      	mov	sp, r7
 8001462:	bd90      	pop	{r4, r7, pc}
 8001464:	2000010c 	.word	0x2000010c
 8001468:	200002ec 	.word	0x200002ec

0800146c <apply_gravity>:


void apply_gravity() {
 800146c:	b590      	push	{r4, r7, lr}
 800146e:	b083      	sub	sp, #12
 8001470:	af00      	add	r7, sp, #0
    for (int y = 0; y < GRID_SIZE; y++) {
 8001472:	2300      	movs	r3, #0
 8001474:	607b      	str	r3, [r7, #4]
 8001476:	e07b      	b.n	8001570 <apply_gravity+0x104>
        for (int x = 0; x < GRID_SIZE; x++) {
 8001478:	2300      	movs	r3, #0
 800147a:	603b      	str	r3, [r7, #0]
 800147c:	e072      	b.n	8001564 <apply_gravity+0xf8>
            if (grid[y][x].mass > 0.0f) {
 800147e:	4840      	ldr	r0, [pc, #256]	@ (8001580 <apply_gravity+0x114>)
 8001480:	683b      	ldr	r3, [r7, #0]
 8001482:	6879      	ldr	r1, [r7, #4]
 8001484:	461a      	mov	r2, r3
 8001486:	0052      	lsls	r2, r2, #1
 8001488:	441a      	add	r2, r3
 800148a:	0093      	lsls	r3, r2, #2
 800148c:	461a      	mov	r2, r3
 800148e:	460b      	mov	r3, r1
 8001490:	005b      	lsls	r3, r3, #1
 8001492:	440b      	add	r3, r1
 8001494:	015b      	lsls	r3, r3, #5
 8001496:	4413      	add	r3, r2
 8001498:	4403      	add	r3, r0
 800149a:	3308      	adds	r3, #8
 800149c:	681b      	ldr	r3, [r3, #0]
 800149e:	f04f 0100 	mov.w	r1, #0
 80014a2:	4618      	mov	r0, r3
 80014a4:	f7ff fd3c 	bl	8000f20 <__aeabi_fcmpgt>
 80014a8:	4603      	mov	r3, r0
 80014aa:	2b00      	cmp	r3, #0
 80014ac:	d057      	beq.n	800155e <apply_gravity+0xf2>
                grid[y][x].velocity.x += gravity.x * DT;
 80014ae:	4834      	ldr	r0, [pc, #208]	@ (8001580 <apply_gravity+0x114>)
 80014b0:	683b      	ldr	r3, [r7, #0]
 80014b2:	6879      	ldr	r1, [r7, #4]
 80014b4:	461a      	mov	r2, r3
 80014b6:	0052      	lsls	r2, r2, #1
 80014b8:	441a      	add	r2, r3
 80014ba:	0093      	lsls	r3, r2, #2
 80014bc:	461a      	mov	r2, r3
 80014be:	460b      	mov	r3, r1
 80014c0:	005b      	lsls	r3, r3, #1
 80014c2:	440b      	add	r3, r1
 80014c4:	015b      	lsls	r3, r3, #5
 80014c6:	4413      	add	r3, r2
 80014c8:	4403      	add	r3, r0
 80014ca:	681c      	ldr	r4, [r3, #0]
 80014cc:	4b2d      	ldr	r3, [pc, #180]	@ (8001584 <apply_gravity+0x118>)
 80014ce:	681b      	ldr	r3, [r3, #0]
 80014d0:	492d      	ldr	r1, [pc, #180]	@ (8001588 <apply_gravity+0x11c>)
 80014d2:	4618      	mov	r0, r3
 80014d4:	f7ff fb68 	bl	8000ba8 <__aeabi_fmul>
 80014d8:	4603      	mov	r3, r0
 80014da:	4619      	mov	r1, r3
 80014dc:	4620      	mov	r0, r4
 80014de:	f7ff fa5b 	bl	8000998 <__addsf3>
 80014e2:	4603      	mov	r3, r0
 80014e4:	461c      	mov	r4, r3
 80014e6:	4826      	ldr	r0, [pc, #152]	@ (8001580 <apply_gravity+0x114>)
 80014e8:	683b      	ldr	r3, [r7, #0]
 80014ea:	6879      	ldr	r1, [r7, #4]
 80014ec:	461a      	mov	r2, r3
 80014ee:	0052      	lsls	r2, r2, #1
 80014f0:	441a      	add	r2, r3
 80014f2:	0093      	lsls	r3, r2, #2
 80014f4:	461a      	mov	r2, r3
 80014f6:	460b      	mov	r3, r1
 80014f8:	005b      	lsls	r3, r3, #1
 80014fa:	440b      	add	r3, r1
 80014fc:	015b      	lsls	r3, r3, #5
 80014fe:	4413      	add	r3, r2
 8001500:	4403      	add	r3, r0
 8001502:	601c      	str	r4, [r3, #0]
                grid[y][x].velocity.y += gravity.y * DT;
 8001504:	481e      	ldr	r0, [pc, #120]	@ (8001580 <apply_gravity+0x114>)
 8001506:	683b      	ldr	r3, [r7, #0]
 8001508:	6879      	ldr	r1, [r7, #4]
 800150a:	461a      	mov	r2, r3
 800150c:	0052      	lsls	r2, r2, #1
 800150e:	441a      	add	r2, r3
 8001510:	0093      	lsls	r3, r2, #2
 8001512:	461a      	mov	r2, r3
 8001514:	460b      	mov	r3, r1
 8001516:	005b      	lsls	r3, r3, #1
 8001518:	440b      	add	r3, r1
 800151a:	015b      	lsls	r3, r3, #5
 800151c:	4413      	add	r3, r2
 800151e:	4403      	add	r3, r0
 8001520:	3304      	adds	r3, #4
 8001522:	681c      	ldr	r4, [r3, #0]
 8001524:	4b17      	ldr	r3, [pc, #92]	@ (8001584 <apply_gravity+0x118>)
 8001526:	685b      	ldr	r3, [r3, #4]
 8001528:	4917      	ldr	r1, [pc, #92]	@ (8001588 <apply_gravity+0x11c>)
 800152a:	4618      	mov	r0, r3
 800152c:	f7ff fb3c 	bl	8000ba8 <__aeabi_fmul>
 8001530:	4603      	mov	r3, r0
 8001532:	4619      	mov	r1, r3
 8001534:	4620      	mov	r0, r4
 8001536:	f7ff fa2f 	bl	8000998 <__addsf3>
 800153a:	4603      	mov	r3, r0
 800153c:	461c      	mov	r4, r3
 800153e:	4810      	ldr	r0, [pc, #64]	@ (8001580 <apply_gravity+0x114>)
 8001540:	683b      	ldr	r3, [r7, #0]
 8001542:	6879      	ldr	r1, [r7, #4]
 8001544:	461a      	mov	r2, r3
 8001546:	0052      	lsls	r2, r2, #1
 8001548:	441a      	add	r2, r3
 800154a:	0093      	lsls	r3, r2, #2
 800154c:	461a      	mov	r2, r3
 800154e:	460b      	mov	r3, r1
 8001550:	005b      	lsls	r3, r3, #1
 8001552:	440b      	add	r3, r1
 8001554:	015b      	lsls	r3, r3, #5
 8001556:	4413      	add	r3, r2
 8001558:	4403      	add	r3, r0
 800155a:	3304      	adds	r3, #4
 800155c:	601c      	str	r4, [r3, #0]
        for (int x = 0; x < GRID_SIZE; x++) {
 800155e:	683b      	ldr	r3, [r7, #0]
 8001560:	3301      	adds	r3, #1
 8001562:	603b      	str	r3, [r7, #0]
 8001564:	683b      	ldr	r3, [r7, #0]
 8001566:	2b07      	cmp	r3, #7
 8001568:	dd89      	ble.n	800147e <apply_gravity+0x12>
    for (int y = 0; y < GRID_SIZE; y++) {
 800156a:	687b      	ldr	r3, [r7, #4]
 800156c:	3301      	adds	r3, #1
 800156e:	607b      	str	r3, [r7, #4]
 8001570:	687b      	ldr	r3, [r7, #4]
 8001572:	2b07      	cmp	r3, #7
 8001574:	dd80      	ble.n	8001478 <apply_gravity+0xc>
            }
        }
    }
}
 8001576:	bf00      	nop
 8001578:	bf00      	nop
 800157a:	370c      	adds	r7, #12
 800157c:	46bd      	mov	sp, r7
 800157e:	bd90      	pop	{r4, r7, pc}
 8001580:	200002ec 	.word	0x200002ec
 8001584:	20000000 	.word	0x20000000
 8001588:	3dcccccd 	.word	0x3dcccccd

0800158c <set_gravity_direction>:

void set_gravity_direction(Vec2 dir) {
 800158c:	b590      	push	{r4, r7, lr}
 800158e:	b085      	sub	sp, #20
 8001590:	af00      	add	r7, sp, #0
 8001592:	463b      	mov	r3, r7
 8001594:	e883 0003 	stmia.w	r3, {r0, r1}
    float len = sqrtf(dir.x * dir.x + dir.y * dir.y);
 8001598:	683b      	ldr	r3, [r7, #0]
 800159a:	683a      	ldr	r2, [r7, #0]
 800159c:	4611      	mov	r1, r2
 800159e:	4618      	mov	r0, r3
 80015a0:	f7ff fb02 	bl	8000ba8 <__aeabi_fmul>
 80015a4:	4603      	mov	r3, r0
 80015a6:	461c      	mov	r4, r3
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	687a      	ldr	r2, [r7, #4]
 80015ac:	4611      	mov	r1, r2
 80015ae:	4618      	mov	r0, r3
 80015b0:	f7ff fafa 	bl	8000ba8 <__aeabi_fmul>
 80015b4:	4603      	mov	r3, r0
 80015b6:	4619      	mov	r1, r3
 80015b8:	4620      	mov	r0, r4
 80015ba:	f7ff f9ed 	bl	8000998 <__addsf3>
 80015be:	4603      	mov	r3, r0
 80015c0:	4618      	mov	r0, r3
 80015c2:	f004 f833 	bl	800562c <sqrtf>
 80015c6:	60f8      	str	r0, [r7, #12]
    if (len > 1e-6f) {
 80015c8:	4913      	ldr	r1, [pc, #76]	@ (8001618 <set_gravity_direction+0x8c>)
 80015ca:	68f8      	ldr	r0, [r7, #12]
 80015cc:	f7ff fca8 	bl	8000f20 <__aeabi_fcmpgt>
 80015d0:	4603      	mov	r3, r0
 80015d2:	2b00      	cmp	r3, #0
 80015d4:	d014      	beq.n	8001600 <set_gravity_direction+0x74>
        gravity.x = dir.x / len * GRAVITY_MAGNITUDE;
 80015d6:	683b      	ldr	r3, [r7, #0]
 80015d8:	68f9      	ldr	r1, [r7, #12]
 80015da:	4618      	mov	r0, r3
 80015dc:	f7ff fb98 	bl	8000d10 <__aeabi_fdiv>
 80015e0:	4603      	mov	r3, r0
 80015e2:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000
 80015e6:	4a0d      	ldr	r2, [pc, #52]	@ (800161c <set_gravity_direction+0x90>)
 80015e8:	6013      	str	r3, [r2, #0]
        gravity.y = dir.y / len * GRAVITY_MAGNITUDE;
 80015ea:	687b      	ldr	r3, [r7, #4]
 80015ec:	68f9      	ldr	r1, [r7, #12]
 80015ee:	4618      	mov	r0, r3
 80015f0:	f7ff fb8e 	bl	8000d10 <__aeabi_fdiv>
 80015f4:	4603      	mov	r3, r0
 80015f6:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000
 80015fa:	4a08      	ldr	r2, [pc, #32]	@ (800161c <set_gravity_direction+0x90>)
 80015fc:	6053      	str	r3, [r2, #4]
    }
    else {
        gravity.x = 0.0f;
        gravity.y = 0.0f;
    }
}
 80015fe:	e007      	b.n	8001610 <set_gravity_direction+0x84>
        gravity.x = 0.0f;
 8001600:	4b06      	ldr	r3, [pc, #24]	@ (800161c <set_gravity_direction+0x90>)
 8001602:	f04f 0200 	mov.w	r2, #0
 8001606:	601a      	str	r2, [r3, #0]
        gravity.y = 0.0f;
 8001608:	4b04      	ldr	r3, [pc, #16]	@ (800161c <set_gravity_direction+0x90>)
 800160a:	f04f 0200 	mov.w	r2, #0
 800160e:	605a      	str	r2, [r3, #4]
}
 8001610:	bf00      	nop
 8001612:	3714      	adds	r7, #20
 8001614:	46bd      	mov	sp, r7
 8001616:	bd90      	pop	{r4, r7, pc}
 8001618:	358637bd 	.word	0x358637bd
 800161c:	20000000 	.word	0x20000000

08001620 <grid_to_particle>:

void grid_to_particle() {
 8001620:	b580      	push	{r7, lr}
 8001622:	b086      	sub	sp, #24
 8001624:	af00      	add	r7, sp, #0
    for (int i = 0; i < PARTICLE_COUNT; i++) {
 8001626:	2300      	movs	r3, #0
 8001628:	617b      	str	r3, [r7, #20]
 800162a:	e03b      	b.n	80016a4 <grid_to_particle+0x84>
        Particle* p = &particles[i];
 800162c:	697b      	ldr	r3, [r7, #20]
 800162e:	011b      	lsls	r3, r3, #4
 8001630:	4a20      	ldr	r2, [pc, #128]	@ (80016b4 <grid_to_particle+0x94>)
 8001632:	4413      	add	r3, r2
 8001634:	613b      	str	r3, [r7, #16]
        int x = (int)p->pos.x;
 8001636:	693b      	ldr	r3, [r7, #16]
 8001638:	681b      	ldr	r3, [r3, #0]
 800163a:	4618      	mov	r0, r3
 800163c:	f7ff fc90 	bl	8000f60 <__aeabi_f2iz>
 8001640:	4603      	mov	r3, r0
 8001642:	60fb      	str	r3, [r7, #12]
        int y = (int)p->pos.y;
 8001644:	693b      	ldr	r3, [r7, #16]
 8001646:	685b      	ldr	r3, [r3, #4]
 8001648:	4618      	mov	r0, r3
 800164a:	f7ff fc89 	bl	8000f60 <__aeabi_f2iz>
 800164e:	4603      	mov	r3, r0
 8001650:	60bb      	str	r3, [r7, #8]

        if (x >= 0 && x < GRID_SIZE && y >= 0 && y < GRID_SIZE) {
 8001652:	68fb      	ldr	r3, [r7, #12]
 8001654:	2b00      	cmp	r3, #0
 8001656:	db22      	blt.n	800169e <grid_to_particle+0x7e>
 8001658:	68fb      	ldr	r3, [r7, #12]
 800165a:	2b07      	cmp	r3, #7
 800165c:	dc1f      	bgt.n	800169e <grid_to_particle+0x7e>
 800165e:	68bb      	ldr	r3, [r7, #8]
 8001660:	2b00      	cmp	r3, #0
 8001662:	db1c      	blt.n	800169e <grid_to_particle+0x7e>
 8001664:	68bb      	ldr	r3, [r7, #8]
 8001666:	2b07      	cmp	r3, #7
 8001668:	dc19      	bgt.n	800169e <grid_to_particle+0x7e>
            Vec2 gridVel = grid[y][x].velocity;
 800166a:	4813      	ldr	r0, [pc, #76]	@ (80016b8 <grid_to_particle+0x98>)
 800166c:	68fb      	ldr	r3, [r7, #12]
 800166e:	68b9      	ldr	r1, [r7, #8]
 8001670:	461a      	mov	r2, r3
 8001672:	0052      	lsls	r2, r2, #1
 8001674:	441a      	add	r2, r3
 8001676:	0093      	lsls	r3, r2, #2
 8001678:	461a      	mov	r2, r3
 800167a:	460b      	mov	r3, r1
 800167c:	005b      	lsls	r3, r3, #1
 800167e:	440b      	add	r3, r1
 8001680:	015b      	lsls	r3, r3, #5
 8001682:	4413      	add	r3, r2
 8001684:	18c2      	adds	r2, r0, r3
 8001686:	463b      	mov	r3, r7
 8001688:	e892 0003 	ldmia.w	r2, {r0, r1}
 800168c:	e883 0003 	stmia.w	r3, {r0, r1}
            p->vel = gridVel;
 8001690:	693b      	ldr	r3, [r7, #16]
 8001692:	3308      	adds	r3, #8
 8001694:	463a      	mov	r2, r7
 8001696:	e892 0003 	ldmia.w	r2, {r0, r1}
 800169a:	e883 0003 	stmia.w	r3, {r0, r1}
    for (int i = 0; i < PARTICLE_COUNT; i++) {
 800169e:	697b      	ldr	r3, [r7, #20]
 80016a0:	3301      	adds	r3, #1
 80016a2:	617b      	str	r3, [r7, #20]
 80016a4:	697b      	ldr	r3, [r7, #20]
 80016a6:	2b1d      	cmp	r3, #29
 80016a8:	ddc0      	ble.n	800162c <grid_to_particle+0xc>
        }
    }
}
 80016aa:	bf00      	nop
 80016ac:	bf00      	nop
 80016ae:	3718      	adds	r7, #24
 80016b0:	46bd      	mov	sp, r7
 80016b2:	bd80      	pop	{r7, pc}
 80016b4:	2000010c 	.word	0x2000010c
 80016b8:	200002ec 	.word	0x200002ec

080016bc <advect_particles_circular>:
            apply_repulsion(particles + i, particles + j);
        }
    }
}

void advect_particles_circular() {
 80016bc:	b590      	push	{r4, r7, lr}
 80016be:	b08b      	sub	sp, #44	@ 0x2c
 80016c0:	af00      	add	r7, sp, #0
    for (int i = 0; i < PARTICLE_COUNT; i++) {
 80016c2:	2300      	movs	r3, #0
 80016c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80016c6:	e0c1      	b.n	800184c <advect_particles_circular+0x190>
        Particle* p = &particles[i];
 80016c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80016ca:	011b      	lsls	r3, r3, #4
 80016cc:	4a64      	ldr	r2, [pc, #400]	@ (8001860 <advect_particles_circular+0x1a4>)
 80016ce:	4413      	add	r3, r2
 80016d0:	623b      	str	r3, [r7, #32]

        p->pos.x += p->vel.x * DT;
 80016d2:	6a3b      	ldr	r3, [r7, #32]
 80016d4:	681c      	ldr	r4, [r3, #0]
 80016d6:	6a3b      	ldr	r3, [r7, #32]
 80016d8:	689b      	ldr	r3, [r3, #8]
 80016da:	4962      	ldr	r1, [pc, #392]	@ (8001864 <advect_particles_circular+0x1a8>)
 80016dc:	4618      	mov	r0, r3
 80016de:	f7ff fa63 	bl	8000ba8 <__aeabi_fmul>
 80016e2:	4603      	mov	r3, r0
 80016e4:	4619      	mov	r1, r3
 80016e6:	4620      	mov	r0, r4
 80016e8:	f7ff f956 	bl	8000998 <__addsf3>
 80016ec:	4603      	mov	r3, r0
 80016ee:	461a      	mov	r2, r3
 80016f0:	6a3b      	ldr	r3, [r7, #32]
 80016f2:	601a      	str	r2, [r3, #0]
        p->pos.y += p->vel.y * DT;
 80016f4:	6a3b      	ldr	r3, [r7, #32]
 80016f6:	685c      	ldr	r4, [r3, #4]
 80016f8:	6a3b      	ldr	r3, [r7, #32]
 80016fa:	68db      	ldr	r3, [r3, #12]
 80016fc:	4959      	ldr	r1, [pc, #356]	@ (8001864 <advect_particles_circular+0x1a8>)
 80016fe:	4618      	mov	r0, r3
 8001700:	f7ff fa52 	bl	8000ba8 <__aeabi_fmul>
 8001704:	4603      	mov	r3, r0
 8001706:	4619      	mov	r1, r3
 8001708:	4620      	mov	r0, r4
 800170a:	f7ff f945 	bl	8000998 <__addsf3>
 800170e:	4603      	mov	r3, r0
 8001710:	461a      	mov	r2, r3
 8001712:	6a3b      	ldr	r3, [r7, #32]
 8001714:	605a      	str	r2, [r3, #4]

#define CENTER (GRID_SIZE / 2.0f)
#define SQUARED_RADIUS (CENTER * CENTER)

        float dx = p->pos.x - CENTER;
 8001716:	6a3b      	ldr	r3, [r7, #32]
 8001718:	681b      	ldr	r3, [r3, #0]
 800171a:	f04f 4181 	mov.w	r1, #1082130432	@ 0x40800000
 800171e:	4618      	mov	r0, r3
 8001720:	f7ff f938 	bl	8000994 <__aeabi_fsub>
 8001724:	4603      	mov	r3, r0
 8001726:	61fb      	str	r3, [r7, #28]
        float dy = p->pos.y - CENTER;
 8001728:	6a3b      	ldr	r3, [r7, #32]
 800172a:	685b      	ldr	r3, [r3, #4]
 800172c:	f04f 4181 	mov.w	r1, #1082130432	@ 0x40800000
 8001730:	4618      	mov	r0, r3
 8001732:	f7ff f92f 	bl	8000994 <__aeabi_fsub>
 8001736:	4603      	mov	r3, r0
 8001738:	61bb      	str	r3, [r7, #24]
        float dist2 = dx * dx + dy * dy;
 800173a:	69f9      	ldr	r1, [r7, #28]
 800173c:	69f8      	ldr	r0, [r7, #28]
 800173e:	f7ff fa33 	bl	8000ba8 <__aeabi_fmul>
 8001742:	4603      	mov	r3, r0
 8001744:	461c      	mov	r4, r3
 8001746:	69b9      	ldr	r1, [r7, #24]
 8001748:	69b8      	ldr	r0, [r7, #24]
 800174a:	f7ff fa2d 	bl	8000ba8 <__aeabi_fmul>
 800174e:	4603      	mov	r3, r0
 8001750:	4619      	mov	r1, r3
 8001752:	4620      	mov	r0, r4
 8001754:	f7ff f920 	bl	8000998 <__addsf3>
 8001758:	4603      	mov	r3, r0
 800175a:	617b      	str	r3, [r7, #20]

        if (dist2 > SQUARED_RADIUS) {
 800175c:	f04f 4183 	mov.w	r1, #1098907648	@ 0x41800000
 8001760:	6978      	ldr	r0, [r7, #20]
 8001762:	f7ff fbdd 	bl	8000f20 <__aeabi_fcmpgt>
 8001766:	4603      	mov	r3, r0
 8001768:	2b00      	cmp	r3, #0
 800176a:	d06c      	beq.n	8001846 <advect_particles_circular+0x18a>
            float dist = sqrtf(dist2);
 800176c:	6978      	ldr	r0, [r7, #20]
 800176e:	f003 ff5d 	bl	800562c <sqrtf>
 8001772:	6138      	str	r0, [r7, #16]
            float nx = dx / dist;  // normal x
 8001774:	6939      	ldr	r1, [r7, #16]
 8001776:	69f8      	ldr	r0, [r7, #28]
 8001778:	f7ff faca 	bl	8000d10 <__aeabi_fdiv>
 800177c:	4603      	mov	r3, r0
 800177e:	60fb      	str	r3, [r7, #12]
            float ny = dy / dist;  // normal y
 8001780:	6939      	ldr	r1, [r7, #16]
 8001782:	69b8      	ldr	r0, [r7, #24]
 8001784:	f7ff fac4 	bl	8000d10 <__aeabi_fdiv>
 8001788:	4603      	mov	r3, r0
 800178a:	60bb      	str	r3, [r7, #8]


            p->pos.x = CENTER + nx * CENTER;
 800178c:	f04f 4181 	mov.w	r1, #1082130432	@ 0x40800000
 8001790:	68f8      	ldr	r0, [r7, #12]
 8001792:	f7ff fa09 	bl	8000ba8 <__aeabi_fmul>
 8001796:	4603      	mov	r3, r0
 8001798:	f04f 4181 	mov.w	r1, #1082130432	@ 0x40800000
 800179c:	4618      	mov	r0, r3
 800179e:	f7ff f8fb 	bl	8000998 <__addsf3>
 80017a2:	4603      	mov	r3, r0
 80017a4:	461a      	mov	r2, r3
 80017a6:	6a3b      	ldr	r3, [r7, #32]
 80017a8:	601a      	str	r2, [r3, #0]
            p->pos.y = CENTER + ny * CENTER;
 80017aa:	f04f 4181 	mov.w	r1, #1082130432	@ 0x40800000
 80017ae:	68b8      	ldr	r0, [r7, #8]
 80017b0:	f7ff f9fa 	bl	8000ba8 <__aeabi_fmul>
 80017b4:	4603      	mov	r3, r0
 80017b6:	f04f 4181 	mov.w	r1, #1082130432	@ 0x40800000
 80017ba:	4618      	mov	r0, r3
 80017bc:	f7ff f8ec 	bl	8000998 <__addsf3>
 80017c0:	4603      	mov	r3, r0
 80017c2:	461a      	mov	r2, r3
 80017c4:	6a3b      	ldr	r3, [r7, #32]
 80017c6:	605a      	str	r2, [r3, #4]


            float dot = p->vel.x * nx + p->vel.y * ny;
 80017c8:	6a3b      	ldr	r3, [r7, #32]
 80017ca:	689b      	ldr	r3, [r3, #8]
 80017cc:	68f9      	ldr	r1, [r7, #12]
 80017ce:	4618      	mov	r0, r3
 80017d0:	f7ff f9ea 	bl	8000ba8 <__aeabi_fmul>
 80017d4:	4603      	mov	r3, r0
 80017d6:	461c      	mov	r4, r3
 80017d8:	6a3b      	ldr	r3, [r7, #32]
 80017da:	68db      	ldr	r3, [r3, #12]
 80017dc:	68b9      	ldr	r1, [r7, #8]
 80017de:	4618      	mov	r0, r3
 80017e0:	f7ff f9e2 	bl	8000ba8 <__aeabi_fmul>
 80017e4:	4603      	mov	r3, r0
 80017e6:	4619      	mov	r1, r3
 80017e8:	4620      	mov	r0, r4
 80017ea:	f7ff f8d5 	bl	8000998 <__addsf3>
 80017ee:	4603      	mov	r3, r0
 80017f0:	607b      	str	r3, [r7, #4]
            p->vel.x -= 2.0f * dot * nx;
 80017f2:	6a3b      	ldr	r3, [r7, #32]
 80017f4:	689c      	ldr	r4, [r3, #8]
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	4619      	mov	r1, r3
 80017fa:	4618      	mov	r0, r3
 80017fc:	f7ff f8cc 	bl	8000998 <__addsf3>
 8001800:	4603      	mov	r3, r0
 8001802:	68f9      	ldr	r1, [r7, #12]
 8001804:	4618      	mov	r0, r3
 8001806:	f7ff f9cf 	bl	8000ba8 <__aeabi_fmul>
 800180a:	4603      	mov	r3, r0
 800180c:	4619      	mov	r1, r3
 800180e:	4620      	mov	r0, r4
 8001810:	f7ff f8c0 	bl	8000994 <__aeabi_fsub>
 8001814:	4603      	mov	r3, r0
 8001816:	461a      	mov	r2, r3
 8001818:	6a3b      	ldr	r3, [r7, #32]
 800181a:	609a      	str	r2, [r3, #8]
            p->vel.y -= 2.0f * dot * ny;
 800181c:	6a3b      	ldr	r3, [r7, #32]
 800181e:	68dc      	ldr	r4, [r3, #12]
 8001820:	687b      	ldr	r3, [r7, #4]
 8001822:	4619      	mov	r1, r3
 8001824:	4618      	mov	r0, r3
 8001826:	f7ff f8b7 	bl	8000998 <__addsf3>
 800182a:	4603      	mov	r3, r0
 800182c:	68b9      	ldr	r1, [r7, #8]
 800182e:	4618      	mov	r0, r3
 8001830:	f7ff f9ba 	bl	8000ba8 <__aeabi_fmul>
 8001834:	4603      	mov	r3, r0
 8001836:	4619      	mov	r1, r3
 8001838:	4620      	mov	r0, r4
 800183a:	f7ff f8ab 	bl	8000994 <__aeabi_fsub>
 800183e:	4603      	mov	r3, r0
 8001840:	461a      	mov	r2, r3
 8001842:	6a3b      	ldr	r3, [r7, #32]
 8001844:	60da      	str	r2, [r3, #12]
    for (int i = 0; i < PARTICLE_COUNT; i++) {
 8001846:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001848:	3301      	adds	r3, #1
 800184a:	627b      	str	r3, [r7, #36]	@ 0x24
 800184c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800184e:	2b1d      	cmp	r3, #29
 8001850:	f77f af3a 	ble.w	80016c8 <advect_particles_circular+0xc>

        }
    }
}
 8001854:	bf00      	nop
 8001856:	bf00      	nop
 8001858:	372c      	adds	r7, #44	@ 0x2c
 800185a:	46bd      	mov	sp, r7
 800185c:	bd90      	pop	{r4, r7, pc}
 800185e:	bf00      	nop
 8001860:	2000010c 	.word	0x2000010c
 8001864:	3dcccccd 	.word	0x3dcccccd

08001868 <apply_repulsion>:

void apply_repulsion(Particle* p1, Particle* p2) {
 8001868:	b590      	push	{r4, r7, lr}
 800186a:	b08b      	sub	sp, #44	@ 0x2c
 800186c:	af00      	add	r7, sp, #0
 800186e:	6078      	str	r0, [r7, #4]
 8001870:	6039      	str	r1, [r7, #0]
    Vec2 dp = {
        p1->pos.x - p2->pos.x,
 8001872:	687b      	ldr	r3, [r7, #4]
 8001874:	681a      	ldr	r2, [r3, #0]
 8001876:	683b      	ldr	r3, [r7, #0]
 8001878:	681b      	ldr	r3, [r3, #0]
 800187a:	4619      	mov	r1, r3
 800187c:	4610      	mov	r0, r2
 800187e:	f7ff f889 	bl	8000994 <__aeabi_fsub>
 8001882:	4603      	mov	r3, r0
    Vec2 dp = {
 8001884:	617b      	str	r3, [r7, #20]
        p1->pos.y - p2->pos.y
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	685a      	ldr	r2, [r3, #4]
 800188a:	683b      	ldr	r3, [r7, #0]
 800188c:	685b      	ldr	r3, [r3, #4]
 800188e:	4619      	mov	r1, r3
 8001890:	4610      	mov	r0, r2
 8001892:	f7ff f87f 	bl	8000994 <__aeabi_fsub>
 8001896:	4603      	mov	r3, r0
    Vec2 dp = {
 8001898:	61bb      	str	r3, [r7, #24]
    };
    float dist2 = dp.x * dp.x + dp.y * dp.y;
 800189a:	697b      	ldr	r3, [r7, #20]
 800189c:	697a      	ldr	r2, [r7, #20]
 800189e:	4611      	mov	r1, r2
 80018a0:	4618      	mov	r0, r3
 80018a2:	f7ff f981 	bl	8000ba8 <__aeabi_fmul>
 80018a6:	4603      	mov	r3, r0
 80018a8:	461c      	mov	r4, r3
 80018aa:	69bb      	ldr	r3, [r7, #24]
 80018ac:	69ba      	ldr	r2, [r7, #24]
 80018ae:	4611      	mov	r1, r2
 80018b0:	4618      	mov	r0, r3
 80018b2:	f7ff f979 	bl	8000ba8 <__aeabi_fmul>
 80018b6:	4603      	mov	r3, r0
 80018b8:	4619      	mov	r1, r3
 80018ba:	4620      	mov	r0, r4
 80018bc:	f7ff f86c 	bl	8000998 <__addsf3>
 80018c0:	4603      	mov	r3, r0
 80018c2:	627b      	str	r3, [r7, #36]	@ 0x24
    if (dist2 < eps) {
 80018c4:	4ba8      	ldr	r3, [pc, #672]	@ (8001b68 <apply_repulsion+0x300>)
 80018c6:	4619      	mov	r1, r3
 80018c8:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 80018ca:	f7ff fb0b 	bl	8000ee4 <__aeabi_fcmplt>
 80018ce:	4603      	mov	r3, r0
 80018d0:	2b00      	cmp	r3, #0
 80018d2:	f000 80b8 	beq.w	8001a46 <apply_repulsion+0x1de>
        p1->vel.x = GRAVITY_MAGNITUDE * ((float)(rand() % 20000) / 10000.0 - 1.0);
 80018d6:	f002 fec3 	bl	8004660 <rand>
 80018da:	4602      	mov	r2, r0
 80018dc:	4ba3      	ldr	r3, [pc, #652]	@ (8001b6c <apply_repulsion+0x304>)
 80018de:	fb83 1302 	smull	r1, r3, r3, r2
 80018e2:	1359      	asrs	r1, r3, #13
 80018e4:	17d3      	asrs	r3, r2, #31
 80018e6:	1acb      	subs	r3, r1, r3
 80018e8:	f644 6120 	movw	r1, #20000	@ 0x4e20
 80018ec:	fb01 f303 	mul.w	r3, r1, r3
 80018f0:	1ad3      	subs	r3, r2, r3
 80018f2:	4618      	mov	r0, r3
 80018f4:	f7ff f904 	bl	8000b00 <__aeabi_i2f>
 80018f8:	4603      	mov	r3, r0
 80018fa:	4618      	mov	r0, r3
 80018fc:	f7fe fd8c 	bl	8000418 <__aeabi_f2d>
 8001900:	a397      	add	r3, pc, #604	@ (adr r3, 8001b60 <apply_repulsion+0x2f8>)
 8001902:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001906:	f7fe ff09 	bl	800071c <__aeabi_ddiv>
 800190a:	4602      	mov	r2, r0
 800190c:	460b      	mov	r3, r1
 800190e:	4610      	mov	r0, r2
 8001910:	4619      	mov	r1, r3
 8001912:	f04f 0200 	mov.w	r2, #0
 8001916:	4b96      	ldr	r3, [pc, #600]	@ (8001b70 <apply_repulsion+0x308>)
 8001918:	f7fe fc1e 	bl	8000158 <__aeabi_dsub>
 800191c:	4602      	mov	r2, r0
 800191e:	460b      	mov	r3, r1
 8001920:	4610      	mov	r0, r2
 8001922:	4619      	mov	r1, r3
 8001924:	f7fe ffe2 	bl	80008ec <__aeabi_d2f>
 8001928:	4603      	mov	r3, r0
 800192a:	f083 4200 	eor.w	r2, r3, #2147483648	@ 0x80000000
 800192e:	687b      	ldr	r3, [r7, #4]
 8001930:	609a      	str	r2, [r3, #8]
        p1->vel.y = GRAVITY_MAGNITUDE * ((float)(rand() % 20000) / 10000.0 - 1.0);
 8001932:	f002 fe95 	bl	8004660 <rand>
 8001936:	4602      	mov	r2, r0
 8001938:	4b8c      	ldr	r3, [pc, #560]	@ (8001b6c <apply_repulsion+0x304>)
 800193a:	fb83 1302 	smull	r1, r3, r3, r2
 800193e:	1359      	asrs	r1, r3, #13
 8001940:	17d3      	asrs	r3, r2, #31
 8001942:	1acb      	subs	r3, r1, r3
 8001944:	f644 6120 	movw	r1, #20000	@ 0x4e20
 8001948:	fb01 f303 	mul.w	r3, r1, r3
 800194c:	1ad3      	subs	r3, r2, r3
 800194e:	4618      	mov	r0, r3
 8001950:	f7ff f8d6 	bl	8000b00 <__aeabi_i2f>
 8001954:	4603      	mov	r3, r0
 8001956:	4618      	mov	r0, r3
 8001958:	f7fe fd5e 	bl	8000418 <__aeabi_f2d>
 800195c:	a380      	add	r3, pc, #512	@ (adr r3, 8001b60 <apply_repulsion+0x2f8>)
 800195e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001962:	f7fe fedb 	bl	800071c <__aeabi_ddiv>
 8001966:	4602      	mov	r2, r0
 8001968:	460b      	mov	r3, r1
 800196a:	4610      	mov	r0, r2
 800196c:	4619      	mov	r1, r3
 800196e:	f04f 0200 	mov.w	r2, #0
 8001972:	4b7f      	ldr	r3, [pc, #508]	@ (8001b70 <apply_repulsion+0x308>)
 8001974:	f7fe fbf0 	bl	8000158 <__aeabi_dsub>
 8001978:	4602      	mov	r2, r0
 800197a:	460b      	mov	r3, r1
 800197c:	4610      	mov	r0, r2
 800197e:	4619      	mov	r1, r3
 8001980:	f7fe ffb4 	bl	80008ec <__aeabi_d2f>
 8001984:	4603      	mov	r3, r0
 8001986:	f083 4200 	eor.w	r2, r3, #2147483648	@ 0x80000000
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	60da      	str	r2, [r3, #12]
        p2->vel.x = GRAVITY_MAGNITUDE * ((float)(rand() % 20000) / 10000.0 - 1.0);
 800198e:	f002 fe67 	bl	8004660 <rand>
 8001992:	4602      	mov	r2, r0
 8001994:	4b75      	ldr	r3, [pc, #468]	@ (8001b6c <apply_repulsion+0x304>)
 8001996:	fb83 1302 	smull	r1, r3, r3, r2
 800199a:	1359      	asrs	r1, r3, #13
 800199c:	17d3      	asrs	r3, r2, #31
 800199e:	1acb      	subs	r3, r1, r3
 80019a0:	f644 6120 	movw	r1, #20000	@ 0x4e20
 80019a4:	fb01 f303 	mul.w	r3, r1, r3
 80019a8:	1ad3      	subs	r3, r2, r3
 80019aa:	4618      	mov	r0, r3
 80019ac:	f7ff f8a8 	bl	8000b00 <__aeabi_i2f>
 80019b0:	4603      	mov	r3, r0
 80019b2:	4618      	mov	r0, r3
 80019b4:	f7fe fd30 	bl	8000418 <__aeabi_f2d>
 80019b8:	a369      	add	r3, pc, #420	@ (adr r3, 8001b60 <apply_repulsion+0x2f8>)
 80019ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019be:	f7fe fead 	bl	800071c <__aeabi_ddiv>
 80019c2:	4602      	mov	r2, r0
 80019c4:	460b      	mov	r3, r1
 80019c6:	4610      	mov	r0, r2
 80019c8:	4619      	mov	r1, r3
 80019ca:	f04f 0200 	mov.w	r2, #0
 80019ce:	4b68      	ldr	r3, [pc, #416]	@ (8001b70 <apply_repulsion+0x308>)
 80019d0:	f7fe fbc2 	bl	8000158 <__aeabi_dsub>
 80019d4:	4602      	mov	r2, r0
 80019d6:	460b      	mov	r3, r1
 80019d8:	4610      	mov	r0, r2
 80019da:	4619      	mov	r1, r3
 80019dc:	f7fe ff86 	bl	80008ec <__aeabi_d2f>
 80019e0:	4603      	mov	r3, r0
 80019e2:	f083 4200 	eor.w	r2, r3, #2147483648	@ 0x80000000
 80019e6:	683b      	ldr	r3, [r7, #0]
 80019e8:	609a      	str	r2, [r3, #8]
        p2->vel.y = GRAVITY_MAGNITUDE * ((float)(rand() % 20000) / 10000.0 - 1.0);
 80019ea:	f002 fe39 	bl	8004660 <rand>
 80019ee:	4602      	mov	r2, r0
 80019f0:	4b5e      	ldr	r3, [pc, #376]	@ (8001b6c <apply_repulsion+0x304>)
 80019f2:	fb83 1302 	smull	r1, r3, r3, r2
 80019f6:	1359      	asrs	r1, r3, #13
 80019f8:	17d3      	asrs	r3, r2, #31
 80019fa:	1acb      	subs	r3, r1, r3
 80019fc:	f644 6120 	movw	r1, #20000	@ 0x4e20
 8001a00:	fb01 f303 	mul.w	r3, r1, r3
 8001a04:	1ad3      	subs	r3, r2, r3
 8001a06:	4618      	mov	r0, r3
 8001a08:	f7ff f87a 	bl	8000b00 <__aeabi_i2f>
 8001a0c:	4603      	mov	r3, r0
 8001a0e:	4618      	mov	r0, r3
 8001a10:	f7fe fd02 	bl	8000418 <__aeabi_f2d>
 8001a14:	a352      	add	r3, pc, #328	@ (adr r3, 8001b60 <apply_repulsion+0x2f8>)
 8001a16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a1a:	f7fe fe7f 	bl	800071c <__aeabi_ddiv>
 8001a1e:	4602      	mov	r2, r0
 8001a20:	460b      	mov	r3, r1
 8001a22:	4610      	mov	r0, r2
 8001a24:	4619      	mov	r1, r3
 8001a26:	f04f 0200 	mov.w	r2, #0
 8001a2a:	4b51      	ldr	r3, [pc, #324]	@ (8001b70 <apply_repulsion+0x308>)
 8001a2c:	f7fe fb94 	bl	8000158 <__aeabi_dsub>
 8001a30:	4602      	mov	r2, r0
 8001a32:	460b      	mov	r3, r1
 8001a34:	4610      	mov	r0, r2
 8001a36:	4619      	mov	r1, r3
 8001a38:	f7fe ff58 	bl	80008ec <__aeabi_d2f>
 8001a3c:	4603      	mov	r3, r0
 8001a3e:	f083 4200 	eor.w	r2, r3, #2147483648	@ 0x80000000
 8001a42:	683b      	ldr	r3, [r7, #0]
 8001a44:	60da      	str	r2, [r3, #12]
		//p1->vel.x *= -1;
		//p1->vel.y *= -1;
    }
    if (dist2 < minDist * minDist) {
 8001a46:	4b4b      	ldr	r3, [pc, #300]	@ (8001b74 <apply_repulsion+0x30c>)
 8001a48:	4a4a      	ldr	r2, [pc, #296]	@ (8001b74 <apply_repulsion+0x30c>)
 8001a4a:	4611      	mov	r1, r2
 8001a4c:	4618      	mov	r0, r3
 8001a4e:	f7ff f8ab 	bl	8000ba8 <__aeabi_fmul>
 8001a52:	4603      	mov	r3, r0
 8001a54:	4619      	mov	r1, r3
 8001a56:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8001a58:	f7ff fa44 	bl	8000ee4 <__aeabi_fcmplt>
 8001a5c:	4603      	mov	r3, r0
 8001a5e:	2b00      	cmp	r3, #0
 8001a60:	d100      	bne.n	8001a64 <apply_repulsion+0x1fc>
        p1->vel.x += dir.x * force * DT;
        p1->vel.y += dir.y * force * DT;
        p2->vel.x -= dir.x * force * DT;
        p2->vel.y -= dir.y * force * DT;
    }
}
 8001a62:	e079      	b.n	8001b58 <apply_repulsion+0x2f0>
        float dist = sqrtf(dist2);
 8001a64:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8001a66:	f003 fde1 	bl	800562c <sqrtf>
 8001a6a:	6238      	str	r0, [r7, #32]
        float force = k * (minDist - dist) / dist;
 8001a6c:	4b41      	ldr	r3, [pc, #260]	@ (8001b74 <apply_repulsion+0x30c>)
 8001a6e:	6a39      	ldr	r1, [r7, #32]
 8001a70:	4618      	mov	r0, r3
 8001a72:	f7fe ff8f 	bl	8000994 <__aeabi_fsub>
 8001a76:	4603      	mov	r3, r0
 8001a78:	461a      	mov	r2, r3
 8001a7a:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
 8001a7e:	4619      	mov	r1, r3
 8001a80:	4610      	mov	r0, r2
 8001a82:	f7ff f891 	bl	8000ba8 <__aeabi_fmul>
 8001a86:	4603      	mov	r3, r0
 8001a88:	6a39      	ldr	r1, [r7, #32]
 8001a8a:	4618      	mov	r0, r3
 8001a8c:	f7ff f940 	bl	8000d10 <__aeabi_fdiv>
 8001a90:	4603      	mov	r3, r0
 8001a92:	61fb      	str	r3, [r7, #28]
        Vec2 dir = { dp.x / dist, dp.y / dist };
 8001a94:	697b      	ldr	r3, [r7, #20]
 8001a96:	6a39      	ldr	r1, [r7, #32]
 8001a98:	4618      	mov	r0, r3
 8001a9a:	f7ff f939 	bl	8000d10 <__aeabi_fdiv>
 8001a9e:	4603      	mov	r3, r0
 8001aa0:	60fb      	str	r3, [r7, #12]
 8001aa2:	69bb      	ldr	r3, [r7, #24]
 8001aa4:	6a39      	ldr	r1, [r7, #32]
 8001aa6:	4618      	mov	r0, r3
 8001aa8:	f7ff f932 	bl	8000d10 <__aeabi_fdiv>
 8001aac:	4603      	mov	r3, r0
 8001aae:	613b      	str	r3, [r7, #16]
        p1->vel.x += dir.x * force * DT;
 8001ab0:	687b      	ldr	r3, [r7, #4]
 8001ab2:	689c      	ldr	r4, [r3, #8]
 8001ab4:	68fb      	ldr	r3, [r7, #12]
 8001ab6:	69f9      	ldr	r1, [r7, #28]
 8001ab8:	4618      	mov	r0, r3
 8001aba:	f7ff f875 	bl	8000ba8 <__aeabi_fmul>
 8001abe:	4603      	mov	r3, r0
 8001ac0:	492d      	ldr	r1, [pc, #180]	@ (8001b78 <apply_repulsion+0x310>)
 8001ac2:	4618      	mov	r0, r3
 8001ac4:	f7ff f870 	bl	8000ba8 <__aeabi_fmul>
 8001ac8:	4603      	mov	r3, r0
 8001aca:	4619      	mov	r1, r3
 8001acc:	4620      	mov	r0, r4
 8001ace:	f7fe ff63 	bl	8000998 <__addsf3>
 8001ad2:	4603      	mov	r3, r0
 8001ad4:	461a      	mov	r2, r3
 8001ad6:	687b      	ldr	r3, [r7, #4]
 8001ad8:	609a      	str	r2, [r3, #8]
        p1->vel.y += dir.y * force * DT;
 8001ada:	687b      	ldr	r3, [r7, #4]
 8001adc:	68dc      	ldr	r4, [r3, #12]
 8001ade:	693b      	ldr	r3, [r7, #16]
 8001ae0:	69f9      	ldr	r1, [r7, #28]
 8001ae2:	4618      	mov	r0, r3
 8001ae4:	f7ff f860 	bl	8000ba8 <__aeabi_fmul>
 8001ae8:	4603      	mov	r3, r0
 8001aea:	4923      	ldr	r1, [pc, #140]	@ (8001b78 <apply_repulsion+0x310>)
 8001aec:	4618      	mov	r0, r3
 8001aee:	f7ff f85b 	bl	8000ba8 <__aeabi_fmul>
 8001af2:	4603      	mov	r3, r0
 8001af4:	4619      	mov	r1, r3
 8001af6:	4620      	mov	r0, r4
 8001af8:	f7fe ff4e 	bl	8000998 <__addsf3>
 8001afc:	4603      	mov	r3, r0
 8001afe:	461a      	mov	r2, r3
 8001b00:	687b      	ldr	r3, [r7, #4]
 8001b02:	60da      	str	r2, [r3, #12]
        p2->vel.x -= dir.x * force * DT;
 8001b04:	683b      	ldr	r3, [r7, #0]
 8001b06:	689c      	ldr	r4, [r3, #8]
 8001b08:	68fb      	ldr	r3, [r7, #12]
 8001b0a:	69f9      	ldr	r1, [r7, #28]
 8001b0c:	4618      	mov	r0, r3
 8001b0e:	f7ff f84b 	bl	8000ba8 <__aeabi_fmul>
 8001b12:	4603      	mov	r3, r0
 8001b14:	4918      	ldr	r1, [pc, #96]	@ (8001b78 <apply_repulsion+0x310>)
 8001b16:	4618      	mov	r0, r3
 8001b18:	f7ff f846 	bl	8000ba8 <__aeabi_fmul>
 8001b1c:	4603      	mov	r3, r0
 8001b1e:	4619      	mov	r1, r3
 8001b20:	4620      	mov	r0, r4
 8001b22:	f7fe ff37 	bl	8000994 <__aeabi_fsub>
 8001b26:	4603      	mov	r3, r0
 8001b28:	461a      	mov	r2, r3
 8001b2a:	683b      	ldr	r3, [r7, #0]
 8001b2c:	609a      	str	r2, [r3, #8]
        p2->vel.y -= dir.y * force * DT;
 8001b2e:	683b      	ldr	r3, [r7, #0]
 8001b30:	68dc      	ldr	r4, [r3, #12]
 8001b32:	693b      	ldr	r3, [r7, #16]
 8001b34:	69f9      	ldr	r1, [r7, #28]
 8001b36:	4618      	mov	r0, r3
 8001b38:	f7ff f836 	bl	8000ba8 <__aeabi_fmul>
 8001b3c:	4603      	mov	r3, r0
 8001b3e:	490e      	ldr	r1, [pc, #56]	@ (8001b78 <apply_repulsion+0x310>)
 8001b40:	4618      	mov	r0, r3
 8001b42:	f7ff f831 	bl	8000ba8 <__aeabi_fmul>
 8001b46:	4603      	mov	r3, r0
 8001b48:	4619      	mov	r1, r3
 8001b4a:	4620      	mov	r0, r4
 8001b4c:	f7fe ff22 	bl	8000994 <__aeabi_fsub>
 8001b50:	4603      	mov	r3, r0
 8001b52:	461a      	mov	r2, r3
 8001b54:	683b      	ldr	r3, [r7, #0]
 8001b56:	60da      	str	r2, [r3, #12]
}
 8001b58:	bf00      	nop
 8001b5a:	372c      	adds	r7, #44	@ 0x2c
 8001b5c:	46bd      	mov	sp, r7
 8001b5e:	bd90      	pop	{r4, r7, pc}
 8001b60:	00000000 	.word	0x00000000
 8001b64:	40c38800 	.word	0x40c38800
 8001b68:	3d4ccccd 	.word	0x3d4ccccd
 8001b6c:	68db8bad 	.word	0x68db8bad
 8001b70:	3ff00000 	.word	0x3ff00000
 8001b74:	3f8020c5 	.word	0x3f8020c5
 8001b78:	3dcccccd 	.word	0x3dcccccd

08001b7c <apply_repulsion_optimized_without_hash>:

void apply_repulsion_optimized_without_hash() {
 8001b7c:	b580      	push	{r7, lr}
 8001b7e:	b094      	sub	sp, #80	@ 0x50
 8001b80:	af00      	add	r7, sp, #0
    for (int i = 0; i < REPULSION_GRID_DIM; i++) {
 8001b82:	2300      	movs	r3, #0
 8001b84:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8001b86:	e013      	b.n	8001bb0 <apply_repulsion_optimized_without_hash+0x34>
		for (int j = 0; j < REPULSION_GRID_DIM; j++) {
 8001b88:	2300      	movs	r3, #0
 8001b8a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8001b8c:	e00a      	b.n	8001ba4 <apply_repulsion_optimized_without_hash+0x28>
			indexTable[i][j] = 0;
 8001b8e:	4982      	ldr	r1, [pc, #520]	@ (8001d98 <apply_repulsion_optimized_without_hash+0x21c>)
 8001b90:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001b92:	00da      	lsls	r2, r3, #3
 8001b94:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8001b96:	4413      	add	r3, r2
 8001b98:	2200      	movs	r2, #0
 8001b9a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		for (int j = 0; j < REPULSION_GRID_DIM; j++) {
 8001b9e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8001ba0:	3301      	adds	r3, #1
 8001ba2:	64bb      	str	r3, [r7, #72]	@ 0x48
 8001ba4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8001ba6:	2b07      	cmp	r3, #7
 8001ba8:	ddf1      	ble.n	8001b8e <apply_repulsion_optimized_without_hash+0x12>
    for (int i = 0; i < REPULSION_GRID_DIM; i++) {
 8001baa:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001bac:	3301      	adds	r3, #1
 8001bae:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8001bb0:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001bb2:	2b07      	cmp	r3, #7
 8001bb4:	dde8      	ble.n	8001b88 <apply_repulsion_optimized_without_hash+0xc>
		}
    }
    for (int i = 0; i < PARTICLE_COUNT; i++) {
 8001bb6:	2300      	movs	r3, #0
 8001bb8:	647b      	str	r3, [r7, #68]	@ 0x44
 8001bba:	e052      	b.n	8001c62 <apply_repulsion_optimized_without_hash+0xe6>
        Particle* p = particles + i;
 8001bbc:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001bbe:	011b      	lsls	r3, r3, #4
 8001bc0:	4a76      	ldr	r2, [pc, #472]	@ (8001d9c <apply_repulsion_optimized_without_hash+0x220>)
 8001bc2:	4413      	add	r3, r2
 8001bc4:	60bb      	str	r3, [r7, #8]
        if (isnan(p->pos.x) || isnan(p->pos.y)) {
 8001bc6:	68bb      	ldr	r3, [r7, #8]
 8001bc8:	681b      	ldr	r3, [r3, #0]
 8001bca:	4619      	mov	r1, r3
 8001bcc:	4618      	mov	r0, r3
 8001bce:	f7ff f9b1 	bl	8000f34 <__aeabi_fcmpun>
 8001bd2:	4603      	mov	r3, r0
 8001bd4:	2b00      	cmp	r3, #0
 8001bd6:	d108      	bne.n	8001bea <apply_repulsion_optimized_without_hash+0x6e>
 8001bd8:	68bb      	ldr	r3, [r7, #8]
 8001bda:	685b      	ldr	r3, [r3, #4]
 8001bdc:	4619      	mov	r1, r3
 8001bde:	4618      	mov	r0, r3
 8001be0:	f7ff f9a8 	bl	8000f34 <__aeabi_fcmpun>
 8001be4:	4603      	mov	r3, r0
 8001be6:	2b00      	cmp	r3, #0
 8001be8:	d00f      	beq.n	8001c0a <apply_repulsion_optimized_without_hash+0x8e>
            p->pos.x = 0;
 8001bea:	68bb      	ldr	r3, [r7, #8]
 8001bec:	f04f 0200 	mov.w	r2, #0
 8001bf0:	601a      	str	r2, [r3, #0]
            p->pos.y = 0;
 8001bf2:	68bb      	ldr	r3, [r7, #8]
 8001bf4:	f04f 0200 	mov.w	r2, #0
 8001bf8:	605a      	str	r2, [r3, #4]
            p->vel.x = 0;
 8001bfa:	68bb      	ldr	r3, [r7, #8]
 8001bfc:	f04f 0200 	mov.w	r2, #0
 8001c00:	609a      	str	r2, [r3, #8]
            p->vel.y = 0;
 8001c02:	68bb      	ldr	r3, [r7, #8]
 8001c04:	f04f 0200 	mov.w	r2, #0
 8001c08:	60da      	str	r2, [r3, #12]
        }
        int x = (int)(p->pos.x / minDist);
 8001c0a:	68bb      	ldr	r3, [r7, #8]
 8001c0c:	681b      	ldr	r3, [r3, #0]
 8001c0e:	4a64      	ldr	r2, [pc, #400]	@ (8001da0 <apply_repulsion_optimized_without_hash+0x224>)
 8001c10:	4611      	mov	r1, r2
 8001c12:	4618      	mov	r0, r3
 8001c14:	f7ff f87c 	bl	8000d10 <__aeabi_fdiv>
 8001c18:	4603      	mov	r3, r0
 8001c1a:	4618      	mov	r0, r3
 8001c1c:	f7ff f9a0 	bl	8000f60 <__aeabi_f2iz>
 8001c20:	4603      	mov	r3, r0
 8001c22:	607b      	str	r3, [r7, #4]
        int y = (int)(p->pos.y / minDist);
 8001c24:	68bb      	ldr	r3, [r7, #8]
 8001c26:	685b      	ldr	r3, [r3, #4]
 8001c28:	4a5d      	ldr	r2, [pc, #372]	@ (8001da0 <apply_repulsion_optimized_without_hash+0x224>)
 8001c2a:	4611      	mov	r1, r2
 8001c2c:	4618      	mov	r0, r3
 8001c2e:	f7ff f86f 	bl	8000d10 <__aeabi_fdiv>
 8001c32:	4603      	mov	r3, r0
 8001c34:	4618      	mov	r0, r3
 8001c36:	f7ff f993 	bl	8000f60 <__aeabi_f2iz>
 8001c3a:	4603      	mov	r3, r0
 8001c3c:	603b      	str	r3, [r7, #0]
		indexTable[x][y]++;
 8001c3e:	4956      	ldr	r1, [pc, #344]	@ (8001d98 <apply_repulsion_optimized_without_hash+0x21c>)
 8001c40:	687b      	ldr	r3, [r7, #4]
 8001c42:	00da      	lsls	r2, r3, #3
 8001c44:	683b      	ldr	r3, [r7, #0]
 8001c46:	4413      	add	r3, r2
 8001c48:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8001c4c:	1c5a      	adds	r2, r3, #1
 8001c4e:	4852      	ldr	r0, [pc, #328]	@ (8001d98 <apply_repulsion_optimized_without_hash+0x21c>)
 8001c50:	687b      	ldr	r3, [r7, #4]
 8001c52:	00d9      	lsls	r1, r3, #3
 8001c54:	683b      	ldr	r3, [r7, #0]
 8001c56:	440b      	add	r3, r1
 8001c58:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
    for (int i = 0; i < PARTICLE_COUNT; i++) {
 8001c5c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001c5e:	3301      	adds	r3, #1
 8001c60:	647b      	str	r3, [r7, #68]	@ 0x44
 8001c62:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001c64:	2b1d      	cmp	r3, #29
 8001c66:	dda9      	ble.n	8001bbc <apply_repulsion_optimized_without_hash+0x40>
    }

    int last_val = 0;
 8001c68:	2300      	movs	r3, #0
 8001c6a:	643b      	str	r3, [r7, #64]	@ 0x40
	for (int i = 0; i < REPULSION_GRID_DIM; i++) {
 8001c6c:	2300      	movs	r3, #0
 8001c6e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001c70:	e023      	b.n	8001cba <apply_repulsion_optimized_without_hash+0x13e>
		for (int j = 0; j < REPULSION_GRID_DIM; j++) {
 8001c72:	2300      	movs	r3, #0
 8001c74:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001c76:	e01a      	b.n	8001cae <apply_repulsion_optimized_without_hash+0x132>
			indexTable[i][j] += last_val;
 8001c78:	4947      	ldr	r1, [pc, #284]	@ (8001d98 <apply_repulsion_optimized_without_hash+0x21c>)
 8001c7a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001c7c:	00da      	lsls	r2, r3, #3
 8001c7e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001c80:	4413      	add	r3, r2
 8001c82:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
 8001c86:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8001c88:	441a      	add	r2, r3
 8001c8a:	4843      	ldr	r0, [pc, #268]	@ (8001d98 <apply_repulsion_optimized_without_hash+0x21c>)
 8001c8c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001c8e:	00d9      	lsls	r1, r3, #3
 8001c90:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001c92:	440b      	add	r3, r1
 8001c94:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
			last_val = indexTable[i][j];
 8001c98:	493f      	ldr	r1, [pc, #252]	@ (8001d98 <apply_repulsion_optimized_without_hash+0x21c>)
 8001c9a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001c9c:	00da      	lsls	r2, r3, #3
 8001c9e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001ca0:	4413      	add	r3, r2
 8001ca2:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8001ca6:	643b      	str	r3, [r7, #64]	@ 0x40
		for (int j = 0; j < REPULSION_GRID_DIM; j++) {
 8001ca8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001caa:	3301      	adds	r3, #1
 8001cac:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001cae:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001cb0:	2b07      	cmp	r3, #7
 8001cb2:	dde1      	ble.n	8001c78 <apply_repulsion_optimized_without_hash+0xfc>
	for (int i = 0; i < REPULSION_GRID_DIM; i++) {
 8001cb4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001cb6:	3301      	adds	r3, #1
 8001cb8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001cba:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001cbc:	2b07      	cmp	r3, #7
 8001cbe:	ddd8      	ble.n	8001c72 <apply_repulsion_optimized_without_hash+0xf6>
		}
	}

    for (int i = 0; i < PARTICLE_COUNT; i++) {
 8001cc0:	2300      	movs	r3, #0
 8001cc2:	637b      	str	r3, [r7, #52]	@ 0x34
 8001cc4:	e03d      	b.n	8001d42 <apply_repulsion_optimized_without_hash+0x1c6>
        Particle* p = particles + i;
 8001cc6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001cc8:	011b      	lsls	r3, r3, #4
 8001cca:	4a34      	ldr	r2, [pc, #208]	@ (8001d9c <apply_repulsion_optimized_without_hash+0x220>)
 8001ccc:	4413      	add	r3, r2
 8001cce:	61bb      	str	r3, [r7, #24]
        int x = (int)(p->pos.x / minDist);
 8001cd0:	69bb      	ldr	r3, [r7, #24]
 8001cd2:	681b      	ldr	r3, [r3, #0]
 8001cd4:	4a32      	ldr	r2, [pc, #200]	@ (8001da0 <apply_repulsion_optimized_without_hash+0x224>)
 8001cd6:	4611      	mov	r1, r2
 8001cd8:	4618      	mov	r0, r3
 8001cda:	f7ff f819 	bl	8000d10 <__aeabi_fdiv>
 8001cde:	4603      	mov	r3, r0
 8001ce0:	4618      	mov	r0, r3
 8001ce2:	f7ff f93d 	bl	8000f60 <__aeabi_f2iz>
 8001ce6:	4603      	mov	r3, r0
 8001ce8:	617b      	str	r3, [r7, #20]
        int y = (int)(p->pos.y / minDist);
 8001cea:	69bb      	ldr	r3, [r7, #24]
 8001cec:	685b      	ldr	r3, [r3, #4]
 8001cee:	4a2c      	ldr	r2, [pc, #176]	@ (8001da0 <apply_repulsion_optimized_without_hash+0x224>)
 8001cf0:	4611      	mov	r1, r2
 8001cf2:	4618      	mov	r0, r3
 8001cf4:	f7ff f80c 	bl	8000d10 <__aeabi_fdiv>
 8001cf8:	4603      	mov	r3, r0
 8001cfa:	4618      	mov	r0, r3
 8001cfc:	f7ff f930 	bl	8000f60 <__aeabi_f2iz>
 8001d00:	4603      	mov	r3, r0
 8001d02:	613b      	str	r3, [r7, #16]
        int final_index = --indexTable[x][y];
 8001d04:	4924      	ldr	r1, [pc, #144]	@ (8001d98 <apply_repulsion_optimized_without_hash+0x21c>)
 8001d06:	697b      	ldr	r3, [r7, #20]
 8001d08:	00da      	lsls	r2, r3, #3
 8001d0a:	693b      	ldr	r3, [r7, #16]
 8001d0c:	4413      	add	r3, r2
 8001d0e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8001d12:	1e5a      	subs	r2, r3, #1
 8001d14:	4820      	ldr	r0, [pc, #128]	@ (8001d98 <apply_repulsion_optimized_without_hash+0x21c>)
 8001d16:	697b      	ldr	r3, [r7, #20]
 8001d18:	00d9      	lsls	r1, r3, #3
 8001d1a:	693b      	ldr	r3, [r7, #16]
 8001d1c:	440b      	add	r3, r1
 8001d1e:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8001d22:	491d      	ldr	r1, [pc, #116]	@ (8001d98 <apply_repulsion_optimized_without_hash+0x21c>)
 8001d24:	697b      	ldr	r3, [r7, #20]
 8001d26:	00da      	lsls	r2, r3, #3
 8001d28:	693b      	ldr	r3, [r7, #16]
 8001d2a:	4413      	add	r3, r2
 8001d2c:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8001d30:	60fb      	str	r3, [r7, #12]
        particle_lookup[final_index] = p;
 8001d32:	491c      	ldr	r1, [pc, #112]	@ (8001da4 <apply_repulsion_optimized_without_hash+0x228>)
 8001d34:	68fb      	ldr	r3, [r7, #12]
 8001d36:	69ba      	ldr	r2, [r7, #24]
 8001d38:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    for (int i = 0; i < PARTICLE_COUNT; i++) {
 8001d3c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001d3e:	3301      	adds	r3, #1
 8001d40:	637b      	str	r3, [r7, #52]	@ 0x34
 8001d42:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001d44:	2b1d      	cmp	r3, #29
 8001d46:	ddbe      	ble.n	8001cc6 <apply_repulsion_optimized_without_hash+0x14a>
    }
    for (int i1 = 0; i1 < REPULSION_GRID_DIM; i1++) {
 8001d48:	2300      	movs	r3, #0
 8001d4a:	633b      	str	r3, [r7, #48]	@ 0x30
 8001d4c:	e0c3      	b.n	8001ed6 <apply_repulsion_optimized_without_hash+0x35a>
        for (int j1 = 0; j1 < REPULSION_GRID_DIM; j1++) {
 8001d4e:	2300      	movs	r3, #0
 8001d50:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001d52:	e0b9      	b.n	8001ec8 <apply_repulsion_optimized_without_hash+0x34c>
            for (int i2 = i1 - 1; i2 <= i1 + 1 && i2 < REPULSION_GRID_DIM; i2++) {
 8001d54:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001d56:	3b01      	subs	r3, #1
 8001d58:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001d5a:	e0a9      	b.n	8001eb0 <apply_repulsion_optimized_without_hash+0x334>
                if (i2 < 0) continue;
 8001d5c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001d5e:	2b00      	cmp	r3, #0
 8001d60:	f2c0 80a2 	blt.w	8001ea8 <apply_repulsion_optimized_without_hash+0x32c>
                for (int j2 = j1 - 1; j2 <= j1 + 1 && j2 < REPULSION_GRID_DIM; j2++) {
 8001d64:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001d66:	3b01      	subs	r3, #1
 8001d68:	627b      	str	r3, [r7, #36]	@ 0x24
 8001d6a:	e093      	b.n	8001e94 <apply_repulsion_optimized_without_hash+0x318>
                    if (j2 < 0) continue;
 8001d6c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d6e:	2b00      	cmp	r3, #0
 8001d70:	f2c0 808c 	blt.w	8001e8c <apply_repulsion_optimized_without_hash+0x310>
                    int lookup_index1 = indexTable[i1][j1];
 8001d74:	4908      	ldr	r1, [pc, #32]	@ (8001d98 <apply_repulsion_optimized_without_hash+0x21c>)
 8001d76:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001d78:	00da      	lsls	r2, r3, #3
 8001d7a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001d7c:	4413      	add	r3, r2
 8001d7e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8001d82:	623b      	str	r3, [r7, #32]
                    while (lookup_index1 >= 0
 8001d84:	e056      	b.n	8001e34 <apply_repulsion_optimized_without_hash+0x2b8>
                        && lookup_index1 < PARTICLE_COUNT
                        && (int)(particle_lookup[lookup_index1]->pos.x / minDist) == i1
                        && (int)(particle_lookup[lookup_index1]->pos.y / minDist) == j1) {
                        int lookup_index2 = indexTable[i2][j2];
 8001d86:	4904      	ldr	r1, [pc, #16]	@ (8001d98 <apply_repulsion_optimized_without_hash+0x21c>)
 8001d88:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001d8a:	00da      	lsls	r2, r3, #3
 8001d8c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d8e:	4413      	add	r3, r2
 8001d90:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8001d94:	61fb      	str	r3, [r7, #28]
                        while (lookup_index2 >= 0
 8001d96:	e020      	b.n	8001dda <apply_repulsion_optimized_without_hash+0x25e>
 8001d98:	200005ec 	.word	0x200005ec
 8001d9c:	2000010c 	.word	0x2000010c
 8001da0:	3f8020c5 	.word	0x3f8020c5
 8001da4:	200006ec 	.word	0x200006ec
                            && lookup_index2 < PARTICLE_COUNT
                            && (int)(particle_lookup[lookup_index2]->pos.x / minDist) == i2
                            && (int)(particle_lookup[lookup_index2]->pos.y / minDist) == j2) {
                            if (particle_lookup[lookup_index1] != particle_lookup[lookup_index2]) {
 8001da8:	4a4f      	ldr	r2, [pc, #316]	@ (8001ee8 <apply_repulsion_optimized_without_hash+0x36c>)
 8001daa:	6a3b      	ldr	r3, [r7, #32]
 8001dac:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8001db0:	494d      	ldr	r1, [pc, #308]	@ (8001ee8 <apply_repulsion_optimized_without_hash+0x36c>)
 8001db2:	69fb      	ldr	r3, [r7, #28]
 8001db4:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8001db8:	429a      	cmp	r2, r3
 8001dba:	d00b      	beq.n	8001dd4 <apply_repulsion_optimized_without_hash+0x258>
                                apply_repulsion(particle_lookup[lookup_index1], particle_lookup[lookup_index2]);
 8001dbc:	4a4a      	ldr	r2, [pc, #296]	@ (8001ee8 <apply_repulsion_optimized_without_hash+0x36c>)
 8001dbe:	6a3b      	ldr	r3, [r7, #32]
 8001dc0:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8001dc4:	4948      	ldr	r1, [pc, #288]	@ (8001ee8 <apply_repulsion_optimized_without_hash+0x36c>)
 8001dc6:	69fb      	ldr	r3, [r7, #28]
 8001dc8:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8001dcc:	4619      	mov	r1, r3
 8001dce:	4610      	mov	r0, r2
 8001dd0:	f7ff fd4a 	bl	8001868 <apply_repulsion>
                            }
                            lookup_index2++;
 8001dd4:	69fb      	ldr	r3, [r7, #28]
 8001dd6:	3301      	adds	r3, #1
 8001dd8:	61fb      	str	r3, [r7, #28]
                            && (int)(particle_lookup[lookup_index2]->pos.y / minDist) == j2) {
 8001dda:	69fb      	ldr	r3, [r7, #28]
 8001ddc:	2b00      	cmp	r3, #0
 8001dde:	db26      	blt.n	8001e2e <apply_repulsion_optimized_without_hash+0x2b2>
                            && lookup_index2 < PARTICLE_COUNT
 8001de0:	69fb      	ldr	r3, [r7, #28]
 8001de2:	2b1d      	cmp	r3, #29
 8001de4:	dc23      	bgt.n	8001e2e <apply_repulsion_optimized_without_hash+0x2b2>
                            && (int)(particle_lookup[lookup_index2]->pos.x / minDist) == i2
 8001de6:	4a40      	ldr	r2, [pc, #256]	@ (8001ee8 <apply_repulsion_optimized_without_hash+0x36c>)
 8001de8:	69fb      	ldr	r3, [r7, #28]
 8001dea:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001dee:	681b      	ldr	r3, [r3, #0]
 8001df0:	4a3e      	ldr	r2, [pc, #248]	@ (8001eec <apply_repulsion_optimized_without_hash+0x370>)
 8001df2:	4611      	mov	r1, r2
 8001df4:	4618      	mov	r0, r3
 8001df6:	f7fe ff8b 	bl	8000d10 <__aeabi_fdiv>
 8001dfa:	4603      	mov	r3, r0
 8001dfc:	4618      	mov	r0, r3
 8001dfe:	f7ff f8af 	bl	8000f60 <__aeabi_f2iz>
 8001e02:	4602      	mov	r2, r0
 8001e04:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001e06:	4293      	cmp	r3, r2
 8001e08:	d111      	bne.n	8001e2e <apply_repulsion_optimized_without_hash+0x2b2>
                            && (int)(particle_lookup[lookup_index2]->pos.y / minDist) == j2) {
 8001e0a:	4a37      	ldr	r2, [pc, #220]	@ (8001ee8 <apply_repulsion_optimized_without_hash+0x36c>)
 8001e0c:	69fb      	ldr	r3, [r7, #28]
 8001e0e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001e12:	685b      	ldr	r3, [r3, #4]
 8001e14:	4a35      	ldr	r2, [pc, #212]	@ (8001eec <apply_repulsion_optimized_without_hash+0x370>)
 8001e16:	4611      	mov	r1, r2
 8001e18:	4618      	mov	r0, r3
 8001e1a:	f7fe ff79 	bl	8000d10 <__aeabi_fdiv>
 8001e1e:	4603      	mov	r3, r0
 8001e20:	4618      	mov	r0, r3
 8001e22:	f7ff f89d 	bl	8000f60 <__aeabi_f2iz>
 8001e26:	4602      	mov	r2, r0
 8001e28:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001e2a:	4293      	cmp	r3, r2
 8001e2c:	d0bc      	beq.n	8001da8 <apply_repulsion_optimized_without_hash+0x22c>
                        }
                        lookup_index1++;
 8001e2e:	6a3b      	ldr	r3, [r7, #32]
 8001e30:	3301      	adds	r3, #1
 8001e32:	623b      	str	r3, [r7, #32]
                        && (int)(particle_lookup[lookup_index1]->pos.y / minDist) == j1) {
 8001e34:	6a3b      	ldr	r3, [r7, #32]
 8001e36:	2b00      	cmp	r3, #0
 8001e38:	db29      	blt.n	8001e8e <apply_repulsion_optimized_without_hash+0x312>
                        && lookup_index1 < PARTICLE_COUNT
 8001e3a:	6a3b      	ldr	r3, [r7, #32]
 8001e3c:	2b1d      	cmp	r3, #29
 8001e3e:	dc26      	bgt.n	8001e8e <apply_repulsion_optimized_without_hash+0x312>
                        && (int)(particle_lookup[lookup_index1]->pos.x / minDist) == i1
 8001e40:	4a29      	ldr	r2, [pc, #164]	@ (8001ee8 <apply_repulsion_optimized_without_hash+0x36c>)
 8001e42:	6a3b      	ldr	r3, [r7, #32]
 8001e44:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001e48:	681b      	ldr	r3, [r3, #0]
 8001e4a:	4a28      	ldr	r2, [pc, #160]	@ (8001eec <apply_repulsion_optimized_without_hash+0x370>)
 8001e4c:	4611      	mov	r1, r2
 8001e4e:	4618      	mov	r0, r3
 8001e50:	f7fe ff5e 	bl	8000d10 <__aeabi_fdiv>
 8001e54:	4603      	mov	r3, r0
 8001e56:	4618      	mov	r0, r3
 8001e58:	f7ff f882 	bl	8000f60 <__aeabi_f2iz>
 8001e5c:	4602      	mov	r2, r0
 8001e5e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001e60:	4293      	cmp	r3, r2
 8001e62:	d114      	bne.n	8001e8e <apply_repulsion_optimized_without_hash+0x312>
                        && (int)(particle_lookup[lookup_index1]->pos.y / minDist) == j1) {
 8001e64:	4a20      	ldr	r2, [pc, #128]	@ (8001ee8 <apply_repulsion_optimized_without_hash+0x36c>)
 8001e66:	6a3b      	ldr	r3, [r7, #32]
 8001e68:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001e6c:	685b      	ldr	r3, [r3, #4]
 8001e6e:	4a1f      	ldr	r2, [pc, #124]	@ (8001eec <apply_repulsion_optimized_without_hash+0x370>)
 8001e70:	4611      	mov	r1, r2
 8001e72:	4618      	mov	r0, r3
 8001e74:	f7fe ff4c 	bl	8000d10 <__aeabi_fdiv>
 8001e78:	4603      	mov	r3, r0
 8001e7a:	4618      	mov	r0, r3
 8001e7c:	f7ff f870 	bl	8000f60 <__aeabi_f2iz>
 8001e80:	4602      	mov	r2, r0
 8001e82:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001e84:	4293      	cmp	r3, r2
 8001e86:	f43f af7e 	beq.w	8001d86 <apply_repulsion_optimized_without_hash+0x20a>
 8001e8a:	e000      	b.n	8001e8e <apply_repulsion_optimized_without_hash+0x312>
                    if (j2 < 0) continue;
 8001e8c:	bf00      	nop
                for (int j2 = j1 - 1; j2 <= j1 + 1 && j2 < REPULSION_GRID_DIM; j2++) {
 8001e8e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001e90:	3301      	adds	r3, #1
 8001e92:	627b      	str	r3, [r7, #36]	@ 0x24
 8001e94:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001e96:	3301      	adds	r3, #1
 8001e98:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001e9a:	429a      	cmp	r2, r3
 8001e9c:	dc05      	bgt.n	8001eaa <apply_repulsion_optimized_without_hash+0x32e>
 8001e9e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001ea0:	2b07      	cmp	r3, #7
 8001ea2:	f77f af63 	ble.w	8001d6c <apply_repulsion_optimized_without_hash+0x1f0>
 8001ea6:	e000      	b.n	8001eaa <apply_repulsion_optimized_without_hash+0x32e>
                if (i2 < 0) continue;
 8001ea8:	bf00      	nop
            for (int i2 = i1 - 1; i2 <= i1 + 1 && i2 < REPULSION_GRID_DIM; i2++) {
 8001eaa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001eac:	3301      	adds	r3, #1
 8001eae:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001eb0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001eb2:	3301      	adds	r3, #1
 8001eb4:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8001eb6:	429a      	cmp	r2, r3
 8001eb8:	dc03      	bgt.n	8001ec2 <apply_repulsion_optimized_without_hash+0x346>
 8001eba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001ebc:	2b07      	cmp	r3, #7
 8001ebe:	f77f af4d 	ble.w	8001d5c <apply_repulsion_optimized_without_hash+0x1e0>
        for (int j1 = 0; j1 < REPULSION_GRID_DIM; j1++) {
 8001ec2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001ec4:	3301      	adds	r3, #1
 8001ec6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001ec8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001eca:	2b07      	cmp	r3, #7
 8001ecc:	f77f af42 	ble.w	8001d54 <apply_repulsion_optimized_without_hash+0x1d8>
    for (int i1 = 0; i1 < REPULSION_GRID_DIM; i1++) {
 8001ed0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001ed2:	3301      	adds	r3, #1
 8001ed4:	633b      	str	r3, [r7, #48]	@ 0x30
 8001ed6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001ed8:	2b07      	cmp	r3, #7
 8001eda:	f77f af38 	ble.w	8001d4e <apply_repulsion_optimized_without_hash+0x1d2>

                }
            }
        }
    }
}
 8001ede:	bf00      	nop
 8001ee0:	bf00      	nop
 8001ee2:	3750      	adds	r7, #80	@ 0x50
 8001ee4:	46bd      	mov	sp, r7
 8001ee6:	bd80      	pop	{r7, pc}
 8001ee8:	200006ec 	.word	0x200006ec
 8001eec:	3f8020c5 	.word	0x3f8020c5

08001ef0 <step_simulation>:

void step_simulation() {
 8001ef0:	b580      	push	{r7, lr}
 8001ef2:	af00      	add	r7, sp, #0
	clear_grid();
 8001ef4:	f7ff f92a 	bl	800114c <clear_grid>
	particle_to_grid();
 8001ef8:	f7ff f97a 	bl	80011f0 <particle_to_grid>
	apply_gravity();
 8001efc:	f7ff fab6 	bl	800146c <apply_gravity>
	grid_to_particle();
 8001f00:	f7ff fb8e 	bl	8001620 <grid_to_particle>
	apply_repulsion_optimized_without_hash();
 8001f04:	f7ff fe3a 	bl	8001b7c <apply_repulsion_optimized_without_hash>
	//apply_repulsion_optimized();
	//apply_repulsion();
	advect_particles_circular();
 8001f08:	f7ff fbd8 	bl	80016bc <advect_particles_circular>
	//advect_particles();
}
 8001f0c:	bf00      	nop
 8001f0e:	bd80      	pop	{r7, pc}

08001f10 <DrawBufferDim>:
			}
		}
	}
}

void DrawBufferDim() {
 8001f10:	b480      	push	{r7}
 8001f12:	b083      	sub	sp, #12
 8001f14:	af00      	add	r7, sp, #0
	for (int i = 0; i < OUT_BUFFER_DIM; i++) {
 8001f16:	2300      	movs	r3, #0
 8001f18:	607b      	str	r3, [r7, #4]
 8001f1a:	e03f      	b.n	8001f9c <DrawBufferDim+0x8c>
		for (int j = 0; j < OUT_BUFFER_DIM; j++) {
 8001f1c:	2300      	movs	r3, #0
 8001f1e:	603b      	str	r3, [r7, #0]
 8001f20:	e036      	b.n	8001f90 <DrawBufferDim+0x80>
			if (out_buffer[i][j]){
 8001f22:	4a23      	ldr	r2, [pc, #140]	@ (8001fb0 <DrawBufferDim+0xa0>)
 8001f24:	687b      	ldr	r3, [r7, #4]
 8001f26:	00db      	lsls	r3, r3, #3
 8001f28:	441a      	add	r2, r3
 8001f2a:	683b      	ldr	r3, [r7, #0]
 8001f2c:	4413      	add	r3, r2
 8001f2e:	781b      	ldrb	r3, [r3, #0]
 8001f30:	2b00      	cmp	r3, #0
 8001f32:	d015      	beq.n	8001f60 <DrawBufferDim+0x50>
				frame[i * FRAME_DIM + j] &= ~0x200;
 8001f34:	4b1f      	ldr	r3, [pc, #124]	@ (8001fb4 <DrawBufferDim+0xa4>)
 8001f36:	681a      	ldr	r2, [r3, #0]
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	00d9      	lsls	r1, r3, #3
 8001f3c:	683b      	ldr	r3, [r7, #0]
 8001f3e:	440b      	add	r3, r1
 8001f40:	005b      	lsls	r3, r3, #1
 8001f42:	4413      	add	r3, r2
 8001f44:	881a      	ldrh	r2, [r3, #0]
 8001f46:	4b1b      	ldr	r3, [pc, #108]	@ (8001fb4 <DrawBufferDim+0xa4>)
 8001f48:	6819      	ldr	r1, [r3, #0]
 8001f4a:	687b      	ldr	r3, [r7, #4]
 8001f4c:	00d8      	lsls	r0, r3, #3
 8001f4e:	683b      	ldr	r3, [r7, #0]
 8001f50:	4403      	add	r3, r0
 8001f52:	005b      	lsls	r3, r3, #1
 8001f54:	440b      	add	r3, r1
 8001f56:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8001f5a:	b292      	uxth	r2, r2
 8001f5c:	801a      	strh	r2, [r3, #0]
 8001f5e:	e014      	b.n	8001f8a <DrawBufferDim+0x7a>
			}
			else {
				frame[i * FRAME_DIM + j] |= 0x200;
 8001f60:	4b14      	ldr	r3, [pc, #80]	@ (8001fb4 <DrawBufferDim+0xa4>)
 8001f62:	681a      	ldr	r2, [r3, #0]
 8001f64:	687b      	ldr	r3, [r7, #4]
 8001f66:	00d9      	lsls	r1, r3, #3
 8001f68:	683b      	ldr	r3, [r7, #0]
 8001f6a:	440b      	add	r3, r1
 8001f6c:	005b      	lsls	r3, r3, #1
 8001f6e:	4413      	add	r3, r2
 8001f70:	881a      	ldrh	r2, [r3, #0]
 8001f72:	4b10      	ldr	r3, [pc, #64]	@ (8001fb4 <DrawBufferDim+0xa4>)
 8001f74:	6819      	ldr	r1, [r3, #0]
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	00d8      	lsls	r0, r3, #3
 8001f7a:	683b      	ldr	r3, [r7, #0]
 8001f7c:	4403      	add	r3, r0
 8001f7e:	005b      	lsls	r3, r3, #1
 8001f80:	440b      	add	r3, r1
 8001f82:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001f86:	b292      	uxth	r2, r2
 8001f88:	801a      	strh	r2, [r3, #0]
		for (int j = 0; j < OUT_BUFFER_DIM; j++) {
 8001f8a:	683b      	ldr	r3, [r7, #0]
 8001f8c:	3301      	adds	r3, #1
 8001f8e:	603b      	str	r3, [r7, #0]
 8001f90:	683b      	ldr	r3, [r7, #0]
 8001f92:	2b07      	cmp	r3, #7
 8001f94:	ddc5      	ble.n	8001f22 <DrawBufferDim+0x12>
	for (int i = 0; i < OUT_BUFFER_DIM; i++) {
 8001f96:	687b      	ldr	r3, [r7, #4]
 8001f98:	3301      	adds	r3, #1
 8001f9a:	607b      	str	r3, [r7, #4]
 8001f9c:	687b      	ldr	r3, [r7, #4]
 8001f9e:	2b07      	cmp	r3, #7
 8001fa0:	ddbc      	ble.n	8001f1c <DrawBufferDim+0xc>
			}
		}
	}
}
 8001fa2:	bf00      	nop
 8001fa4:	bf00      	nop
 8001fa6:	370c      	adds	r7, #12
 8001fa8:	46bd      	mov	sp, r7
 8001faa:	bc80      	pop	{r7}
 8001fac:	4770      	bx	lr
 8001fae:	bf00      	nop
 8001fb0:	20000768 	.word	0x20000768
 8001fb4:	200007fc 	.word	0x200007fc

08001fb8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001fb8:	b580      	push	{r7, lr}
 8001fba:	b086      	sub	sp, #24
 8001fbc:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001fbe:	f000 fbb3 	bl	8002728 <HAL_Init>

  /* USER CODE BEGIN Init */
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001fc2:	f000 f88f 	bl	80020e4 <SystemClock_Config>

  /* USER CODE BEGIN SysInit */
  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001fc6:	f000 f901 	bl	80021cc <MX_GPIO_Init>
  MX_I2C1_Init();
 8001fca:	f000 f8d1 	bl	8002170 <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */
  if (FRAME_DIM == 8){
  	frame = frame8x8;
 8001fce:	4b3e      	ldr	r3, [pc, #248]	@ (80020c8 <main+0x110>)
 8001fd0:	4a3e      	ldr	r2, [pc, #248]	@ (80020cc <main+0x114>)
 8001fd2:	601a      	str	r2, [r3, #0]
  }
  else if (FRAME_DIM == 16){
  	frame = frame16x16;
  }
  // Włącz DMA i Timer
  	RCC->AHBENR |= RCC_AHBENR_DMA1EN;
 8001fd4:	4b3e      	ldr	r3, [pc, #248]	@ (80020d0 <main+0x118>)
 8001fd6:	695b      	ldr	r3, [r3, #20]
 8001fd8:	4a3d      	ldr	r2, [pc, #244]	@ (80020d0 <main+0x118>)
 8001fda:	f043 0301 	orr.w	r3, r3, #1
 8001fde:	6153      	str	r3, [r2, #20]
  	RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8001fe0:	4b3b      	ldr	r3, [pc, #236]	@ (80020d0 <main+0x118>)
 8001fe2:	69db      	ldr	r3, [r3, #28]
 8001fe4:	4a3a      	ldr	r2, [pc, #232]	@ (80020d0 <main+0x118>)
 8001fe6:	f043 0301 	orr.w	r3, r3, #1
 8001fea:	61d3      	str	r3, [r2, #28]

  	// DMA1_Channel2 ← wyzwalany przez TIM2_UP
  	DMA1_Channel2->CCR &= ~DMA_CCR_EN;  // wyłącz DMA przed konfiguracją
 8001fec:	4b39      	ldr	r3, [pc, #228]	@ (80020d4 <main+0x11c>)
 8001fee:	681b      	ldr	r3, [r3, #0]
 8001ff0:	4a38      	ldr	r2, [pc, #224]	@ (80020d4 <main+0x11c>)
 8001ff2:	f023 0301 	bic.w	r3, r3, #1
 8001ff6:	6013      	str	r3, [r2, #0]

  	DMA1_Channel2->CPAR = (uint32_t)&GPIOA->ODR;
 8001ff8:	4b36      	ldr	r3, [pc, #216]	@ (80020d4 <main+0x11c>)
 8001ffa:	4a37      	ldr	r2, [pc, #220]	@ (80020d8 <main+0x120>)
 8001ffc:	609a      	str	r2, [r3, #8]
  	DMA1_Channel2->CMAR = (uint32_t)frame;
 8001ffe:	4b32      	ldr	r3, [pc, #200]	@ (80020c8 <main+0x110>)
 8002000:	681a      	ldr	r2, [r3, #0]
 8002002:	4b34      	ldr	r3, [pc, #208]	@ (80020d4 <main+0x11c>)
 8002004:	60da      	str	r2, [r3, #12]
  	DMA1_Channel2->CNDTR = FRAME_SIZE;
 8002006:	4b33      	ldr	r3, [pc, #204]	@ (80020d4 <main+0x11c>)
 8002008:	2240      	movs	r2, #64	@ 0x40
 800200a:	605a      	str	r2, [r3, #4]

  	DMA1_Channel2->CCR =
 800200c:	4b31      	ldr	r3, [pc, #196]	@ (80020d4 <main+0x11c>)
 800200e:	f44f 62b6 	mov.w	r2, #1456	@ 0x5b0
 8002012:	601a      	str	r2, [r3, #0]
  	    DMA_CCR_DIR  |         // Mem → Periph
  	    DMA_CCR_CIRC |         // Cyklicznie
  	    DMA_CCR_MSIZE_0 |      // MSIZE = 16-bit
  	    DMA_CCR_PSIZE_0;       // PSIZE = 16-bit

  	DMA1_Channel2->CCR |= DMA_CCR_EN;   // włącz DMA
 8002014:	4b2f      	ldr	r3, [pc, #188]	@ (80020d4 <main+0x11c>)
 8002016:	681b      	ldr	r3, [r3, #0]
 8002018:	4a2e      	ldr	r2, [pc, #184]	@ (80020d4 <main+0x11c>)
 800201a:	f043 0301 	orr.w	r3, r3, #1
 800201e:	6013      	str	r3, [r2, #0]

  	// Timer 2 – co 1 ms
  	TIM2->PSC = 72 - 1;  // (72MHz / 7200 = 10kHz)
 8002020:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8002024:	2247      	movs	r2, #71	@ 0x47
 8002026:	629a      	str	r2, [r3, #40]	@ 0x28
  	TIM2->ARR = 10 - 1;    // co 1 ms
 8002028:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800202c:	2209      	movs	r2, #9
 800202e:	62da      	str	r2, [r3, #44]	@ 0x2c
  	TIM2->DIER |= TIM_DIER_UDE; // update event triggers DMA
 8002030:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8002034:	68db      	ldr	r3, [r3, #12]
 8002036:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800203a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800203e:	60d3      	str	r3, [r2, #12]
  	TIM2->CR1 |= TIM_CR1_CEN;   // start
 8002040:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800204a:	f043 0301 	orr.w	r3, r3, #1
 800204e:	6013      	str	r3, [r2, #0]

  	init_particles_middle();
 8002050:	f7ff f80e 	bl	8001070 <init_particles_middle>
    // init mpu
  	MPU6050_Data mpu;
  	HAL_Delay(10);
 8002054:	200a      	movs	r0, #10
 8002056:	f000 fbc9 	bl	80027ec <HAL_Delay>
  	MPU6050_Init(&hi2c1);
 800205a:	4820      	ldr	r0, [pc, #128]	@ (80020dc <main+0x124>)
 800205c:	f000 f92a 	bl	80022b4 <MPU6050_Init>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  	while (1)
	{
		debug_info = 6;
 8002060:	4b1f      	ldr	r3, [pc, #124]	@ (80020e0 <main+0x128>)
 8002062:	2206      	movs	r2, #6
 8002064:	601a      	str	r2, [r3, #0]
		if (MPU6050_ReadData(&hi2c1, &mpu) == HAL_OK) {
 8002066:	f107 0308 	add.w	r3, r7, #8
 800206a:	4619      	mov	r1, r3
 800206c:	481b      	ldr	r0, [pc, #108]	@ (80020dc <main+0x124>)
 800206e:	f000 f93b 	bl	80022e8 <MPU6050_ReadData>
 8002072:	4603      	mov	r3, r0
 8002074:	2b00      	cmp	r3, #0
 8002076:	d113      	bne.n	80020a0 <main+0xe8>
			  Vec2 gravity;
			  gravity.x = -mpu.Accel_Y;
 8002078:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800207c:	425b      	negs	r3, r3
 800207e:	4618      	mov	r0, r3
 8002080:	f7fe fd3e 	bl	8000b00 <__aeabi_i2f>
 8002084:	4603      	mov	r3, r0
 8002086:	603b      	str	r3, [r7, #0]
				gravity.y = mpu.Accel_Z;
 8002088:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800208c:	4618      	mov	r0, r3
 800208e:	f7fe fd37 	bl	8000b00 <__aeabi_i2f>
 8002092:	4603      	mov	r3, r0
 8002094:	607b      	str	r3, [r7, #4]
			  set_gravity_direction(gravity);
 8002096:	463b      	mov	r3, r7
 8002098:	e893 0003 	ldmia.w	r3, {r0, r1}
 800209c:	f7ff fa76 	bl	800158c <set_gravity_direction>
		}

		debug_info = 1;
 80020a0:	4b0f      	ldr	r3, [pc, #60]	@ (80020e0 <main+0x128>)
 80020a2:	2201      	movs	r2, #1
 80020a4:	601a      	str	r2, [r3, #0]
		step_simulation();
 80020a6:	f7ff ff23 	bl	8001ef0 <step_simulation>
		debug_info = 2;
 80020aa:	4b0d      	ldr	r3, [pc, #52]	@ (80020e0 <main+0x128>)
 80020ac:	2202      	movs	r2, #2
 80020ae:	601a      	str	r2, [r3, #0]
		generate_output();
 80020b0:	f7fe ff7c 	bl	8000fac <generate_output>
		debug_info = 3;
 80020b4:	4b0a      	ldr	r3, [pc, #40]	@ (80020e0 <main+0x128>)
 80020b6:	2203      	movs	r2, #3
 80020b8:	601a      	str	r2, [r3, #0]
		DrawBufferDim();
 80020ba:	f7ff ff29 	bl	8001f10 <DrawBufferDim>
		debug_info = 4;
 80020be:	4b08      	ldr	r3, [pc, #32]	@ (80020e0 <main+0x128>)
 80020c0:	2204      	movs	r2, #4
 80020c2:	601a      	str	r2, [r3, #0]
		debug_info = 6;
 80020c4:	e7cc      	b.n	8002060 <main+0xa8>
 80020c6:	bf00      	nop
 80020c8:	200007fc 	.word	0x200007fc
 80020cc:	20000008 	.word	0x20000008
 80020d0:	40021000 	.word	0x40021000
 80020d4:	4002001c 	.word	0x4002001c
 80020d8:	4001080c 	.word	0x4001080c
 80020dc:	200007a8 	.word	0x200007a8
 80020e0:	20000800 	.word	0x20000800

080020e4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80020e4:	b580      	push	{r7, lr}
 80020e6:	b090      	sub	sp, #64	@ 0x40
 80020e8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80020ea:	f107 0318 	add.w	r3, r7, #24
 80020ee:	2228      	movs	r2, #40	@ 0x28
 80020f0:	2100      	movs	r1, #0
 80020f2:	4618      	mov	r0, r3
 80020f4:	f002 fbf7 	bl	80048e6 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80020f8:	1d3b      	adds	r3, r7, #4
 80020fa:	2200      	movs	r2, #0
 80020fc:	601a      	str	r2, [r3, #0]
 80020fe:	605a      	str	r2, [r3, #4]
 8002100:	609a      	str	r2, [r3, #8]
 8002102:	60da      	str	r2, [r3, #12]
 8002104:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8002106:	2301      	movs	r3, #1
 8002108:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800210a:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800210e:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 8002110:	2300      	movs	r3, #0
 8002112:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002114:	2301      	movs	r3, #1
 8002116:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002118:	2302      	movs	r3, #2
 800211a:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800211c:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8002120:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8002122:	f44f 1360 	mov.w	r3, #3670016	@ 0x380000
 8002126:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002128:	f107 0318 	add.w	r3, r7, #24
 800212c:	4618      	mov	r0, r3
 800212e:	f001 fe9b 	bl	8003e68 <HAL_RCC_OscConfig>
 8002132:	4603      	mov	r3, r0
 8002134:	2b00      	cmp	r3, #0
 8002136:	d001      	beq.n	800213c <SystemClock_Config+0x58>
  {
    Error_Handler();
 8002138:	f000 f8b6 	bl	80022a8 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800213c:	230f      	movs	r3, #15
 800213e:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002140:	2302      	movs	r3, #2
 8002142:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002144:	2300      	movs	r3, #0
 8002146:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8002148:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
 800214c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800214e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8002152:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8002154:	1d3b      	adds	r3, r7, #4
 8002156:	2102      	movs	r1, #2
 8002158:	4618      	mov	r0, r3
 800215a:	f002 f907 	bl	800436c <HAL_RCC_ClockConfig>
 800215e:	4603      	mov	r3, r0
 8002160:	2b00      	cmp	r3, #0
 8002162:	d001      	beq.n	8002168 <SystemClock_Config+0x84>
  {
    Error_Handler();
 8002164:	f000 f8a0 	bl	80022a8 <Error_Handler>
  }
}
 8002168:	bf00      	nop
 800216a:	3740      	adds	r7, #64	@ 0x40
 800216c:	46bd      	mov	sp, r7
 800216e:	bd80      	pop	{r7, pc}

08002170 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8002170:	b580      	push	{r7, lr}
 8002172:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8002174:	4b12      	ldr	r3, [pc, #72]	@ (80021c0 <MX_I2C1_Init+0x50>)
 8002176:	4a13      	ldr	r2, [pc, #76]	@ (80021c4 <MX_I2C1_Init+0x54>)
 8002178:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 800217a:	4b11      	ldr	r3, [pc, #68]	@ (80021c0 <MX_I2C1_Init+0x50>)
 800217c:	4a12      	ldr	r2, [pc, #72]	@ (80021c8 <MX_I2C1_Init+0x58>)
 800217e:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8002180:	4b0f      	ldr	r3, [pc, #60]	@ (80021c0 <MX_I2C1_Init+0x50>)
 8002182:	2200      	movs	r2, #0
 8002184:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8002186:	4b0e      	ldr	r3, [pc, #56]	@ (80021c0 <MX_I2C1_Init+0x50>)
 8002188:	2200      	movs	r2, #0
 800218a:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800218c:	4b0c      	ldr	r3, [pc, #48]	@ (80021c0 <MX_I2C1_Init+0x50>)
 800218e:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8002192:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002194:	4b0a      	ldr	r3, [pc, #40]	@ (80021c0 <MX_I2C1_Init+0x50>)
 8002196:	2200      	movs	r2, #0
 8002198:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 800219a:	4b09      	ldr	r3, [pc, #36]	@ (80021c0 <MX_I2C1_Init+0x50>)
 800219c:	2200      	movs	r2, #0
 800219e:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80021a0:	4b07      	ldr	r3, [pc, #28]	@ (80021c0 <MX_I2C1_Init+0x50>)
 80021a2:	2200      	movs	r2, #0
 80021a4:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80021a6:	4b06      	ldr	r3, [pc, #24]	@ (80021c0 <MX_I2C1_Init+0x50>)
 80021a8:	2200      	movs	r2, #0
 80021aa:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80021ac:	4804      	ldr	r0, [pc, #16]	@ (80021c0 <MX_I2C1_Init+0x50>)
 80021ae:	f000 fdb9 	bl	8002d24 <HAL_I2C_Init>
 80021b2:	4603      	mov	r3, r0
 80021b4:	2b00      	cmp	r3, #0
 80021b6:	d001      	beq.n	80021bc <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 80021b8:	f000 f876 	bl	80022a8 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80021bc:	bf00      	nop
 80021be:	bd80      	pop	{r7, pc}
 80021c0:	200007a8 	.word	0x200007a8
 80021c4:	40005400 	.word	0x40005400
 80021c8:	000186a0 	.word	0x000186a0

080021cc <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80021cc:	b580      	push	{r7, lr}
 80021ce:	b088      	sub	sp, #32
 80021d0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021d2:	f107 0310 	add.w	r3, r7, #16
 80021d6:	2200      	movs	r2, #0
 80021d8:	601a      	str	r2, [r3, #0]
 80021da:	605a      	str	r2, [r3, #4]
 80021dc:	609a      	str	r2, [r3, #8]
 80021de:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN MX_GPIO_Init_1 */
  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80021e0:	4b2e      	ldr	r3, [pc, #184]	@ (800229c <MX_GPIO_Init+0xd0>)
 80021e2:	699b      	ldr	r3, [r3, #24]
 80021e4:	4a2d      	ldr	r2, [pc, #180]	@ (800229c <MX_GPIO_Init+0xd0>)
 80021e6:	f043 0310 	orr.w	r3, r3, #16
 80021ea:	6193      	str	r3, [r2, #24]
 80021ec:	4b2b      	ldr	r3, [pc, #172]	@ (800229c <MX_GPIO_Init+0xd0>)
 80021ee:	699b      	ldr	r3, [r3, #24]
 80021f0:	f003 0310 	and.w	r3, r3, #16
 80021f4:	60fb      	str	r3, [r7, #12]
 80021f6:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80021f8:	4b28      	ldr	r3, [pc, #160]	@ (800229c <MX_GPIO_Init+0xd0>)
 80021fa:	699b      	ldr	r3, [r3, #24]
 80021fc:	4a27      	ldr	r2, [pc, #156]	@ (800229c <MX_GPIO_Init+0xd0>)
 80021fe:	f043 0320 	orr.w	r3, r3, #32
 8002202:	6193      	str	r3, [r2, #24]
 8002204:	4b25      	ldr	r3, [pc, #148]	@ (800229c <MX_GPIO_Init+0xd0>)
 8002206:	699b      	ldr	r3, [r3, #24]
 8002208:	f003 0320 	and.w	r3, r3, #32
 800220c:	60bb      	str	r3, [r7, #8]
 800220e:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002210:	4b22      	ldr	r3, [pc, #136]	@ (800229c <MX_GPIO_Init+0xd0>)
 8002212:	699b      	ldr	r3, [r3, #24]
 8002214:	4a21      	ldr	r2, [pc, #132]	@ (800229c <MX_GPIO_Init+0xd0>)
 8002216:	f043 0304 	orr.w	r3, r3, #4
 800221a:	6193      	str	r3, [r2, #24]
 800221c:	4b1f      	ldr	r3, [pc, #124]	@ (800229c <MX_GPIO_Init+0xd0>)
 800221e:	699b      	ldr	r3, [r3, #24]
 8002220:	f003 0304 	and.w	r3, r3, #4
 8002224:	607b      	str	r3, [r7, #4]
 8002226:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002228:	4b1c      	ldr	r3, [pc, #112]	@ (800229c <MX_GPIO_Init+0xd0>)
 800222a:	699b      	ldr	r3, [r3, #24]
 800222c:	4a1b      	ldr	r2, [pc, #108]	@ (800229c <MX_GPIO_Init+0xd0>)
 800222e:	f043 0308 	orr.w	r3, r3, #8
 8002232:	6193      	str	r3, [r2, #24]
 8002234:	4b19      	ldr	r3, [pc, #100]	@ (800229c <MX_GPIO_Init+0xd0>)
 8002236:	699b      	ldr	r3, [r3, #24]
 8002238:	f003 0308 	and.w	r3, r3, #8
 800223c:	603b      	str	r3, [r7, #0]
 800223e:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 8002240:	2200      	movs	r2, #0
 8002242:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002246:	4816      	ldr	r0, [pc, #88]	@ (80022a0 <MX_GPIO_Init+0xd4>)
 8002248:	f000 fd54 	bl	8002cf4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800224c:	2200      	movs	r2, #0
 800224e:	f240 31ff 	movw	r1, #1023	@ 0x3ff
 8002252:	4814      	ldr	r0, [pc, #80]	@ (80022a4 <MX_GPIO_Init+0xd8>)
 8002254:	f000 fd4e 	bl	8002cf4 <HAL_GPIO_WritePin>
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7
                          |GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8002258:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800225c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800225e:	2301      	movs	r3, #1
 8002260:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002262:	2300      	movs	r3, #0
 8002264:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002266:	2302      	movs	r3, #2
 8002268:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800226a:	f107 0310 	add.w	r3, r7, #16
 800226e:	4619      	mov	r1, r3
 8002270:	480b      	ldr	r0, [pc, #44]	@ (80022a0 <MX_GPIO_Init+0xd4>)
 8002272:	f000 fbc3 	bl	80029fc <HAL_GPIO_Init>

  /*Configure GPIO pins : PA0 PA1 PA2 PA3
                           PA4 PA5 PA6 PA7
                           PA8 PA9 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002276:	f240 33ff 	movw	r3, #1023	@ 0x3ff
 800227a:	613b      	str	r3, [r7, #16]
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7
                          |GPIO_PIN_8|GPIO_PIN_9;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800227c:	2301      	movs	r3, #1
 800227e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002280:	2300      	movs	r3, #0
 8002282:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002284:	2302      	movs	r3, #2
 8002286:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002288:	f107 0310 	add.w	r3, r7, #16
 800228c:	4619      	mov	r1, r3
 800228e:	4805      	ldr	r0, [pc, #20]	@ (80022a4 <MX_GPIO_Init+0xd8>)
 8002290:	f000 fbb4 	bl	80029fc <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */
  /* USER CODE END MX_GPIO_Init_2 */
}
 8002294:	bf00      	nop
 8002296:	3720      	adds	r7, #32
 8002298:	46bd      	mov	sp, r7
 800229a:	bd80      	pop	{r7, pc}
 800229c:	40021000 	.word	0x40021000
 80022a0:	40011000 	.word	0x40011000
 80022a4:	40010800 	.word	0x40010800

080022a8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80022a8:	b480      	push	{r7}
 80022aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* USER CODE END Error_Handler_Debug */
}
 80022ac:	bf00      	nop
 80022ae:	46bd      	mov	sp, r7
 80022b0:	bc80      	pop	{r7}
 80022b2:	4770      	bx	lr

080022b4 <MPU6050_Init>:
#include "mpu6050.h"

#define MPU6050_PWR_MGMT_1   0x6B
#define MPU6050_ACCEL_XOUT_H 0x3B

HAL_StatusTypeDef MPU6050_Init(I2C_HandleTypeDef *hi2c) {
 80022b4:	b580      	push	{r7, lr}
 80022b6:	b088      	sub	sp, #32
 80022b8:	af04      	add	r7, sp, #16
 80022ba:	6078      	str	r0, [r7, #4]
    uint8_t data = 0;
 80022bc:	2300      	movs	r3, #0
 80022be:	73fb      	strb	r3, [r7, #15]
    return HAL_I2C_Mem_Write(hi2c, MPU6050_I2C_ADDR, MPU6050_PWR_MGMT_1, 1, &data, 1, HAL_MAX_DELAY);
 80022c0:	f04f 33ff 	mov.w	r3, #4294967295
 80022c4:	9302      	str	r3, [sp, #8]
 80022c6:	2301      	movs	r3, #1
 80022c8:	9301      	str	r3, [sp, #4]
 80022ca:	f107 030f 	add.w	r3, r7, #15
 80022ce:	9300      	str	r3, [sp, #0]
 80022d0:	2301      	movs	r3, #1
 80022d2:	226b      	movs	r2, #107	@ 0x6b
 80022d4:	21d0      	movs	r1, #208	@ 0xd0
 80022d6:	6878      	ldr	r0, [r7, #4]
 80022d8:	f000 fe68 	bl	8002fac <HAL_I2C_Mem_Write>
 80022dc:	4603      	mov	r3, r0
}
 80022de:	4618      	mov	r0, r3
 80022e0:	3710      	adds	r7, #16
 80022e2:	46bd      	mov	sp, r7
 80022e4:	bd80      	pop	{r7, pc}
	...

080022e8 <MPU6050_ReadData>:
uint8_t raw[15];
HAL_StatusTypeDef MPU6050_ReadData(I2C_HandleTypeDef *hi2c, MPU6050_Data *data) {
 80022e8:	b580      	push	{r7, lr}
 80022ea:	b086      	sub	sp, #24
 80022ec:	af04      	add	r7, sp, #16
 80022ee:	6078      	str	r0, [r7, #4]
 80022f0:	6039      	str	r1, [r7, #0]

    debug_info = 60;
 80022f2:	4b3a      	ldr	r3, [pc, #232]	@ (80023dc <MPU6050_ReadData+0xf4>)
 80022f4:	223c      	movs	r2, #60	@ 0x3c
 80022f6:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_Mem_Read(hi2c, MPU6050_I2C_ADDR, MPU6050_ACCEL_XOUT_H, 1, raw, 14, HAL_MAX_DELAY) != HAL_OK) {
 80022f8:	f04f 33ff 	mov.w	r3, #4294967295
 80022fc:	9302      	str	r3, [sp, #8]
 80022fe:	230e      	movs	r3, #14
 8002300:	9301      	str	r3, [sp, #4]
 8002302:	4b37      	ldr	r3, [pc, #220]	@ (80023e0 <MPU6050_ReadData+0xf8>)
 8002304:	9300      	str	r3, [sp, #0]
 8002306:	2301      	movs	r3, #1
 8002308:	223b      	movs	r2, #59	@ 0x3b
 800230a:	21d0      	movs	r1, #208	@ 0xd0
 800230c:	6878      	ldr	r0, [r7, #4]
 800230e:	f000 ff47 	bl	80031a0 <HAL_I2C_Mem_Read>
 8002312:	4603      	mov	r3, r0
 8002314:	2b00      	cmp	r3, #0
 8002316:	d001      	beq.n	800231c <MPU6050_ReadData+0x34>
        return HAL_ERROR;
 8002318:	2301      	movs	r3, #1
 800231a:	e05a      	b.n	80023d2 <MPU6050_ReadData+0xea>
    }
    debug_info = 61;
 800231c:	4b2f      	ldr	r3, [pc, #188]	@ (80023dc <MPU6050_ReadData+0xf4>)
 800231e:	223d      	movs	r2, #61	@ 0x3d
 8002320:	601a      	str	r2, [r3, #0]
    data->Accel_X = (int16_t)(raw[0] << 8 | raw[1]);
 8002322:	4b2f      	ldr	r3, [pc, #188]	@ (80023e0 <MPU6050_ReadData+0xf8>)
 8002324:	781b      	ldrb	r3, [r3, #0]
 8002326:	b21b      	sxth	r3, r3
 8002328:	021b      	lsls	r3, r3, #8
 800232a:	b21a      	sxth	r2, r3
 800232c:	4b2c      	ldr	r3, [pc, #176]	@ (80023e0 <MPU6050_ReadData+0xf8>)
 800232e:	785b      	ldrb	r3, [r3, #1]
 8002330:	b21b      	sxth	r3, r3
 8002332:	4313      	orrs	r3, r2
 8002334:	b21a      	sxth	r2, r3
 8002336:	683b      	ldr	r3, [r7, #0]
 8002338:	801a      	strh	r2, [r3, #0]
    data->Accel_Y = (int16_t)(raw[2] << 8 | raw[3]);
 800233a:	4b29      	ldr	r3, [pc, #164]	@ (80023e0 <MPU6050_ReadData+0xf8>)
 800233c:	789b      	ldrb	r3, [r3, #2]
 800233e:	b21b      	sxth	r3, r3
 8002340:	021b      	lsls	r3, r3, #8
 8002342:	b21a      	sxth	r2, r3
 8002344:	4b26      	ldr	r3, [pc, #152]	@ (80023e0 <MPU6050_ReadData+0xf8>)
 8002346:	78db      	ldrb	r3, [r3, #3]
 8002348:	b21b      	sxth	r3, r3
 800234a:	4313      	orrs	r3, r2
 800234c:	b21a      	sxth	r2, r3
 800234e:	683b      	ldr	r3, [r7, #0]
 8002350:	805a      	strh	r2, [r3, #2]
    data->Accel_Z = (int16_t)(raw[4] << 8 | raw[5]);
 8002352:	4b23      	ldr	r3, [pc, #140]	@ (80023e0 <MPU6050_ReadData+0xf8>)
 8002354:	791b      	ldrb	r3, [r3, #4]
 8002356:	b21b      	sxth	r3, r3
 8002358:	021b      	lsls	r3, r3, #8
 800235a:	b21a      	sxth	r2, r3
 800235c:	4b20      	ldr	r3, [pc, #128]	@ (80023e0 <MPU6050_ReadData+0xf8>)
 800235e:	795b      	ldrb	r3, [r3, #5]
 8002360:	b21b      	sxth	r3, r3
 8002362:	4313      	orrs	r3, r2
 8002364:	b21a      	sxth	r2, r3
 8002366:	683b      	ldr	r3, [r7, #0]
 8002368:	809a      	strh	r2, [r3, #4]
    data->Temp    = (int16_t)(raw[6] << 8 | raw[7]);
 800236a:	4b1d      	ldr	r3, [pc, #116]	@ (80023e0 <MPU6050_ReadData+0xf8>)
 800236c:	799b      	ldrb	r3, [r3, #6]
 800236e:	b21b      	sxth	r3, r3
 8002370:	021b      	lsls	r3, r3, #8
 8002372:	b21a      	sxth	r2, r3
 8002374:	4b1a      	ldr	r3, [pc, #104]	@ (80023e0 <MPU6050_ReadData+0xf8>)
 8002376:	79db      	ldrb	r3, [r3, #7]
 8002378:	b21b      	sxth	r3, r3
 800237a:	4313      	orrs	r3, r2
 800237c:	b21a      	sxth	r2, r3
 800237e:	683b      	ldr	r3, [r7, #0]
 8002380:	819a      	strh	r2, [r3, #12]
    data->Gyro_X  = (int16_t)(raw[8] << 8 | raw[9]);
 8002382:	4b17      	ldr	r3, [pc, #92]	@ (80023e0 <MPU6050_ReadData+0xf8>)
 8002384:	7a1b      	ldrb	r3, [r3, #8]
 8002386:	b21b      	sxth	r3, r3
 8002388:	021b      	lsls	r3, r3, #8
 800238a:	b21a      	sxth	r2, r3
 800238c:	4b14      	ldr	r3, [pc, #80]	@ (80023e0 <MPU6050_ReadData+0xf8>)
 800238e:	7a5b      	ldrb	r3, [r3, #9]
 8002390:	b21b      	sxth	r3, r3
 8002392:	4313      	orrs	r3, r2
 8002394:	b21a      	sxth	r2, r3
 8002396:	683b      	ldr	r3, [r7, #0]
 8002398:	80da      	strh	r2, [r3, #6]
    data->Gyro_Y  = (int16_t)(raw[10] << 8 | raw[11]);
 800239a:	4b11      	ldr	r3, [pc, #68]	@ (80023e0 <MPU6050_ReadData+0xf8>)
 800239c:	7a9b      	ldrb	r3, [r3, #10]
 800239e:	b21b      	sxth	r3, r3
 80023a0:	021b      	lsls	r3, r3, #8
 80023a2:	b21a      	sxth	r2, r3
 80023a4:	4b0e      	ldr	r3, [pc, #56]	@ (80023e0 <MPU6050_ReadData+0xf8>)
 80023a6:	7adb      	ldrb	r3, [r3, #11]
 80023a8:	b21b      	sxth	r3, r3
 80023aa:	4313      	orrs	r3, r2
 80023ac:	b21a      	sxth	r2, r3
 80023ae:	683b      	ldr	r3, [r7, #0]
 80023b0:	811a      	strh	r2, [r3, #8]
    data->Gyro_Z  = (int16_t)(raw[12] << 8 | raw[13]);
 80023b2:	4b0b      	ldr	r3, [pc, #44]	@ (80023e0 <MPU6050_ReadData+0xf8>)
 80023b4:	7b1b      	ldrb	r3, [r3, #12]
 80023b6:	b21b      	sxth	r3, r3
 80023b8:	021b      	lsls	r3, r3, #8
 80023ba:	b21a      	sxth	r2, r3
 80023bc:	4b08      	ldr	r3, [pc, #32]	@ (80023e0 <MPU6050_ReadData+0xf8>)
 80023be:	7b5b      	ldrb	r3, [r3, #13]
 80023c0:	b21b      	sxth	r3, r3
 80023c2:	4313      	orrs	r3, r2
 80023c4:	b21a      	sxth	r2, r3
 80023c6:	683b      	ldr	r3, [r7, #0]
 80023c8:	815a      	strh	r2, [r3, #10]
    debug_info = 62;
 80023ca:	4b04      	ldr	r3, [pc, #16]	@ (80023dc <MPU6050_ReadData+0xf4>)
 80023cc:	223e      	movs	r2, #62	@ 0x3e
 80023ce:	601a      	str	r2, [r3, #0]
    return HAL_OK;
 80023d0:	2300      	movs	r3, #0
}
 80023d2:	4618      	mov	r0, r3
 80023d4:	3708      	adds	r7, #8
 80023d6:	46bd      	mov	sp, r7
 80023d8:	bd80      	pop	{r7, pc}
 80023da:	bf00      	nop
 80023dc:	20000800 	.word	0x20000800
 80023e0:	20000804 	.word	0x20000804

080023e4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80023e4:	b480      	push	{r7}
 80023e6:	b085      	sub	sp, #20
 80023e8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 80023ea:	4b15      	ldr	r3, [pc, #84]	@ (8002440 <HAL_MspInit+0x5c>)
 80023ec:	699b      	ldr	r3, [r3, #24]
 80023ee:	4a14      	ldr	r2, [pc, #80]	@ (8002440 <HAL_MspInit+0x5c>)
 80023f0:	f043 0301 	orr.w	r3, r3, #1
 80023f4:	6193      	str	r3, [r2, #24]
 80023f6:	4b12      	ldr	r3, [pc, #72]	@ (8002440 <HAL_MspInit+0x5c>)
 80023f8:	699b      	ldr	r3, [r3, #24]
 80023fa:	f003 0301 	and.w	r3, r3, #1
 80023fe:	60bb      	str	r3, [r7, #8]
 8002400:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002402:	4b0f      	ldr	r3, [pc, #60]	@ (8002440 <HAL_MspInit+0x5c>)
 8002404:	69db      	ldr	r3, [r3, #28]
 8002406:	4a0e      	ldr	r2, [pc, #56]	@ (8002440 <HAL_MspInit+0x5c>)
 8002408:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800240c:	61d3      	str	r3, [r2, #28]
 800240e:	4b0c      	ldr	r3, [pc, #48]	@ (8002440 <HAL_MspInit+0x5c>)
 8002410:	69db      	ldr	r3, [r3, #28]
 8002412:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002416:	607b      	str	r3, [r7, #4]
 8002418:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 800241a:	4b0a      	ldr	r3, [pc, #40]	@ (8002444 <HAL_MspInit+0x60>)
 800241c:	685b      	ldr	r3, [r3, #4]
 800241e:	60fb      	str	r3, [r7, #12]
 8002420:	68fb      	ldr	r3, [r7, #12]
 8002422:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8002426:	60fb      	str	r3, [r7, #12]
 8002428:	68fb      	ldr	r3, [r7, #12]
 800242a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800242e:	60fb      	str	r3, [r7, #12]
 8002430:	4a04      	ldr	r2, [pc, #16]	@ (8002444 <HAL_MspInit+0x60>)
 8002432:	68fb      	ldr	r3, [r7, #12]
 8002434:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002436:	bf00      	nop
 8002438:	3714      	adds	r7, #20
 800243a:	46bd      	mov	sp, r7
 800243c:	bc80      	pop	{r7}
 800243e:	4770      	bx	lr
 8002440:	40021000 	.word	0x40021000
 8002444:	40010000 	.word	0x40010000

08002448 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002448:	b580      	push	{r7, lr}
 800244a:	b088      	sub	sp, #32
 800244c:	af00      	add	r7, sp, #0
 800244e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002450:	f107 0310 	add.w	r3, r7, #16
 8002454:	2200      	movs	r2, #0
 8002456:	601a      	str	r2, [r3, #0]
 8002458:	605a      	str	r2, [r3, #4]
 800245a:	609a      	str	r2, [r3, #8]
 800245c:	60da      	str	r2, [r3, #12]
  if(hi2c->Instance==I2C1)
 800245e:	687b      	ldr	r3, [r7, #4]
 8002460:	681b      	ldr	r3, [r3, #0]
 8002462:	4a16      	ldr	r2, [pc, #88]	@ (80024bc <HAL_I2C_MspInit+0x74>)
 8002464:	4293      	cmp	r3, r2
 8002466:	d125      	bne.n	80024b4 <HAL_I2C_MspInit+0x6c>
  {
    /* USER CODE BEGIN I2C1_MspInit 0 */

    /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002468:	4b15      	ldr	r3, [pc, #84]	@ (80024c0 <HAL_I2C_MspInit+0x78>)
 800246a:	699b      	ldr	r3, [r3, #24]
 800246c:	4a14      	ldr	r2, [pc, #80]	@ (80024c0 <HAL_I2C_MspInit+0x78>)
 800246e:	f043 0308 	orr.w	r3, r3, #8
 8002472:	6193      	str	r3, [r2, #24]
 8002474:	4b12      	ldr	r3, [pc, #72]	@ (80024c0 <HAL_I2C_MspInit+0x78>)
 8002476:	699b      	ldr	r3, [r3, #24]
 8002478:	f003 0308 	and.w	r3, r3, #8
 800247c:	60fb      	str	r3, [r7, #12]
 800247e:	68fb      	ldr	r3, [r7, #12]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002480:	23c0      	movs	r3, #192	@ 0xc0
 8002482:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002484:	2312      	movs	r3, #18
 8002486:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002488:	2300      	movs	r3, #0
 800248a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800248c:	2303      	movs	r3, #3
 800248e:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002490:	f107 0310 	add.w	r3, r7, #16
 8002494:	4619      	mov	r1, r3
 8002496:	480b      	ldr	r0, [pc, #44]	@ (80024c4 <HAL_I2C_MspInit+0x7c>)
 8002498:	f000 fab0 	bl	80029fc <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800249c:	4b08      	ldr	r3, [pc, #32]	@ (80024c0 <HAL_I2C_MspInit+0x78>)
 800249e:	69db      	ldr	r3, [r3, #28]
 80024a0:	4a07      	ldr	r2, [pc, #28]	@ (80024c0 <HAL_I2C_MspInit+0x78>)
 80024a2:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80024a6:	61d3      	str	r3, [r2, #28]
 80024a8:	4b05      	ldr	r3, [pc, #20]	@ (80024c0 <HAL_I2C_MspInit+0x78>)
 80024aa:	69db      	ldr	r3, [r3, #28]
 80024ac:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80024b0:	60bb      	str	r3, [r7, #8]
 80024b2:	68bb      	ldr	r3, [r7, #8]

    /* USER CODE END I2C1_MspInit 1 */

  }

}
 80024b4:	bf00      	nop
 80024b6:	3720      	adds	r7, #32
 80024b8:	46bd      	mov	sp, r7
 80024ba:	bd80      	pop	{r7, pc}
 80024bc:	40005400 	.word	0x40005400
 80024c0:	40021000 	.word	0x40021000
 80024c4:	40010c00 	.word	0x40010c00

080024c8 <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
 80024c8:	b480      	push	{r7}
 80024ca:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80024cc:	f3bf 8f4f 	dsb	sy
}
 80024d0:	bf00      	nop
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 80024d2:	4b06      	ldr	r3, [pc, #24]	@ (80024ec <__NVIC_SystemReset+0x24>)
 80024d4:	68db      	ldr	r3, [r3, #12]
 80024d6:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 80024da:	4904      	ldr	r1, [pc, #16]	@ (80024ec <__NVIC_SystemReset+0x24>)
 80024dc:	4b04      	ldr	r3, [pc, #16]	@ (80024f0 <__NVIC_SystemReset+0x28>)
 80024de:	4313      	orrs	r3, r2
 80024e0:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 80024e2:	f3bf 8f4f 	dsb	sy
}
 80024e6:	bf00      	nop
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 80024e8:	bf00      	nop
 80024ea:	e7fd      	b.n	80024e8 <__NVIC_SystemReset+0x20>
 80024ec:	e000ed00 	.word	0xe000ed00
 80024f0:	05fa0004 	.word	0x05fa0004

080024f4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80024f4:	b480      	push	{r7}
 80024f6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80024f8:	bf00      	nop
 80024fa:	e7fd      	b.n	80024f8 <NMI_Handler+0x4>

080024fc <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80024fc:	b580      	push	{r7, lr}
 80024fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */
	NVIC_SystemReset();
 8002500:	f7ff ffe2 	bl	80024c8 <__NVIC_SystemReset>

08002504 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002504:	b480      	push	{r7}
 8002506:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002508:	bf00      	nop
 800250a:	e7fd      	b.n	8002508 <MemManage_Handler+0x4>

0800250c <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800250c:	b480      	push	{r7}
 800250e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002510:	bf00      	nop
 8002512:	e7fd      	b.n	8002510 <BusFault_Handler+0x4>

08002514 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002514:	b480      	push	{r7}
 8002516:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002518:	bf00      	nop
 800251a:	e7fd      	b.n	8002518 <UsageFault_Handler+0x4>

0800251c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800251c:	b480      	push	{r7}
 800251e:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002520:	bf00      	nop
 8002522:	46bd      	mov	sp, r7
 8002524:	bc80      	pop	{r7}
 8002526:	4770      	bx	lr

08002528 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002528:	b480      	push	{r7}
 800252a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800252c:	bf00      	nop
 800252e:	46bd      	mov	sp, r7
 8002530:	bc80      	pop	{r7}
 8002532:	4770      	bx	lr

08002534 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002534:	b480      	push	{r7}
 8002536:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002538:	bf00      	nop
 800253a:	46bd      	mov	sp, r7
 800253c:	bc80      	pop	{r7}
 800253e:	4770      	bx	lr

08002540 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002540:	b580      	push	{r7, lr}
 8002542:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002544:	f000 f936 	bl	80027b4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002548:	bf00      	nop
 800254a:	bd80      	pop	{r7, pc}

0800254c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800254c:	b480      	push	{r7}
 800254e:	af00      	add	r7, sp, #0
  return 1;
 8002550:	2301      	movs	r3, #1
}
 8002552:	4618      	mov	r0, r3
 8002554:	46bd      	mov	sp, r7
 8002556:	bc80      	pop	{r7}
 8002558:	4770      	bx	lr

0800255a <_kill>:

int _kill(int pid, int sig)
{
 800255a:	b580      	push	{r7, lr}
 800255c:	b082      	sub	sp, #8
 800255e:	af00      	add	r7, sp, #0
 8002560:	6078      	str	r0, [r7, #4]
 8002562:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002564:	f002 fa0e 	bl	8004984 <__errno>
 8002568:	4603      	mov	r3, r0
 800256a:	2216      	movs	r2, #22
 800256c:	601a      	str	r2, [r3, #0]
  return -1;
 800256e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002572:	4618      	mov	r0, r3
 8002574:	3708      	adds	r7, #8
 8002576:	46bd      	mov	sp, r7
 8002578:	bd80      	pop	{r7, pc}

0800257a <_exit>:

void _exit (int status)
{
 800257a:	b580      	push	{r7, lr}
 800257c:	b082      	sub	sp, #8
 800257e:	af00      	add	r7, sp, #0
 8002580:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002582:	f04f 31ff 	mov.w	r1, #4294967295
 8002586:	6878      	ldr	r0, [r7, #4]
 8002588:	f7ff ffe7 	bl	800255a <_kill>
  while (1) {}    /* Make sure we hang here */
 800258c:	bf00      	nop
 800258e:	e7fd      	b.n	800258c <_exit+0x12>

08002590 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002590:	b580      	push	{r7, lr}
 8002592:	b086      	sub	sp, #24
 8002594:	af00      	add	r7, sp, #0
 8002596:	60f8      	str	r0, [r7, #12]
 8002598:	60b9      	str	r1, [r7, #8]
 800259a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800259c:	2300      	movs	r3, #0
 800259e:	617b      	str	r3, [r7, #20]
 80025a0:	e00a      	b.n	80025b8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80025a2:	f3af 8000 	nop.w
 80025a6:	4601      	mov	r1, r0
 80025a8:	68bb      	ldr	r3, [r7, #8]
 80025aa:	1c5a      	adds	r2, r3, #1
 80025ac:	60ba      	str	r2, [r7, #8]
 80025ae:	b2ca      	uxtb	r2, r1
 80025b0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80025b2:	697b      	ldr	r3, [r7, #20]
 80025b4:	3301      	adds	r3, #1
 80025b6:	617b      	str	r3, [r7, #20]
 80025b8:	697a      	ldr	r2, [r7, #20]
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	429a      	cmp	r2, r3
 80025be:	dbf0      	blt.n	80025a2 <_read+0x12>
  }

  return len;
 80025c0:	687b      	ldr	r3, [r7, #4]
}
 80025c2:	4618      	mov	r0, r3
 80025c4:	3718      	adds	r7, #24
 80025c6:	46bd      	mov	sp, r7
 80025c8:	bd80      	pop	{r7, pc}

080025ca <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80025ca:	b580      	push	{r7, lr}
 80025cc:	b086      	sub	sp, #24
 80025ce:	af00      	add	r7, sp, #0
 80025d0:	60f8      	str	r0, [r7, #12]
 80025d2:	60b9      	str	r1, [r7, #8]
 80025d4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80025d6:	2300      	movs	r3, #0
 80025d8:	617b      	str	r3, [r7, #20]
 80025da:	e009      	b.n	80025f0 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80025dc:	68bb      	ldr	r3, [r7, #8]
 80025de:	1c5a      	adds	r2, r3, #1
 80025e0:	60ba      	str	r2, [r7, #8]
 80025e2:	781b      	ldrb	r3, [r3, #0]
 80025e4:	4618      	mov	r0, r3
 80025e6:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80025ea:	697b      	ldr	r3, [r7, #20]
 80025ec:	3301      	adds	r3, #1
 80025ee:	617b      	str	r3, [r7, #20]
 80025f0:	697a      	ldr	r2, [r7, #20]
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	429a      	cmp	r2, r3
 80025f6:	dbf1      	blt.n	80025dc <_write+0x12>
  }
  return len;
 80025f8:	687b      	ldr	r3, [r7, #4]
}
 80025fa:	4618      	mov	r0, r3
 80025fc:	3718      	adds	r7, #24
 80025fe:	46bd      	mov	sp, r7
 8002600:	bd80      	pop	{r7, pc}

08002602 <_close>:

int _close(int file)
{
 8002602:	b480      	push	{r7}
 8002604:	b083      	sub	sp, #12
 8002606:	af00      	add	r7, sp, #0
 8002608:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800260a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800260e:	4618      	mov	r0, r3
 8002610:	370c      	adds	r7, #12
 8002612:	46bd      	mov	sp, r7
 8002614:	bc80      	pop	{r7}
 8002616:	4770      	bx	lr

08002618 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002618:	b480      	push	{r7}
 800261a:	b083      	sub	sp, #12
 800261c:	af00      	add	r7, sp, #0
 800261e:	6078      	str	r0, [r7, #4]
 8002620:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002622:	683b      	ldr	r3, [r7, #0]
 8002624:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002628:	605a      	str	r2, [r3, #4]
  return 0;
 800262a:	2300      	movs	r3, #0
}
 800262c:	4618      	mov	r0, r3
 800262e:	370c      	adds	r7, #12
 8002630:	46bd      	mov	sp, r7
 8002632:	bc80      	pop	{r7}
 8002634:	4770      	bx	lr

08002636 <_isatty>:

int _isatty(int file)
{
 8002636:	b480      	push	{r7}
 8002638:	b083      	sub	sp, #12
 800263a:	af00      	add	r7, sp, #0
 800263c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800263e:	2301      	movs	r3, #1
}
 8002640:	4618      	mov	r0, r3
 8002642:	370c      	adds	r7, #12
 8002644:	46bd      	mov	sp, r7
 8002646:	bc80      	pop	{r7}
 8002648:	4770      	bx	lr

0800264a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800264a:	b480      	push	{r7}
 800264c:	b085      	sub	sp, #20
 800264e:	af00      	add	r7, sp, #0
 8002650:	60f8      	str	r0, [r7, #12]
 8002652:	60b9      	str	r1, [r7, #8]
 8002654:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002656:	2300      	movs	r3, #0
}
 8002658:	4618      	mov	r0, r3
 800265a:	3714      	adds	r7, #20
 800265c:	46bd      	mov	sp, r7
 800265e:	bc80      	pop	{r7}
 8002660:	4770      	bx	lr
	...

08002664 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002664:	b580      	push	{r7, lr}
 8002666:	b086      	sub	sp, #24
 8002668:	af00      	add	r7, sp, #0
 800266a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800266c:	4a14      	ldr	r2, [pc, #80]	@ (80026c0 <_sbrk+0x5c>)
 800266e:	4b15      	ldr	r3, [pc, #84]	@ (80026c4 <_sbrk+0x60>)
 8002670:	1ad3      	subs	r3, r2, r3
 8002672:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002674:	697b      	ldr	r3, [r7, #20]
 8002676:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002678:	4b13      	ldr	r3, [pc, #76]	@ (80026c8 <_sbrk+0x64>)
 800267a:	681b      	ldr	r3, [r3, #0]
 800267c:	2b00      	cmp	r3, #0
 800267e:	d102      	bne.n	8002686 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002680:	4b11      	ldr	r3, [pc, #68]	@ (80026c8 <_sbrk+0x64>)
 8002682:	4a12      	ldr	r2, [pc, #72]	@ (80026cc <_sbrk+0x68>)
 8002684:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002686:	4b10      	ldr	r3, [pc, #64]	@ (80026c8 <_sbrk+0x64>)
 8002688:	681a      	ldr	r2, [r3, #0]
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	4413      	add	r3, r2
 800268e:	693a      	ldr	r2, [r7, #16]
 8002690:	429a      	cmp	r2, r3
 8002692:	d207      	bcs.n	80026a4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002694:	f002 f976 	bl	8004984 <__errno>
 8002698:	4603      	mov	r3, r0
 800269a:	220c      	movs	r2, #12
 800269c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800269e:	f04f 33ff 	mov.w	r3, #4294967295
 80026a2:	e009      	b.n	80026b8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80026a4:	4b08      	ldr	r3, [pc, #32]	@ (80026c8 <_sbrk+0x64>)
 80026a6:	681b      	ldr	r3, [r3, #0]
 80026a8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80026aa:	4b07      	ldr	r3, [pc, #28]	@ (80026c8 <_sbrk+0x64>)
 80026ac:	681a      	ldr	r2, [r3, #0]
 80026ae:	687b      	ldr	r3, [r7, #4]
 80026b0:	4413      	add	r3, r2
 80026b2:	4a05      	ldr	r2, [pc, #20]	@ (80026c8 <_sbrk+0x64>)
 80026b4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80026b6:	68fb      	ldr	r3, [r7, #12]
}
 80026b8:	4618      	mov	r0, r3
 80026ba:	3718      	adds	r7, #24
 80026bc:	46bd      	mov	sp, r7
 80026be:	bd80      	pop	{r7, pc}
 80026c0:	20002800 	.word	0x20002800
 80026c4:	00000400 	.word	0x00000400
 80026c8:	20000814 	.word	0x20000814
 80026cc:	20000968 	.word	0x20000968

080026d0 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80026d0:	b480      	push	{r7}
 80026d2:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80026d4:	bf00      	nop
 80026d6:	46bd      	mov	sp, r7
 80026d8:	bc80      	pop	{r7}
 80026da:	4770      	bx	lr

080026dc <Reset_Handler>:
 80026dc:	f7ff fff8 	bl	80026d0 <SystemInit>
 80026e0:	480b      	ldr	r0, [pc, #44]	@ (8002710 <LoopFillZerobss+0xe>)
 80026e2:	490c      	ldr	r1, [pc, #48]	@ (8002714 <LoopFillZerobss+0x12>)
 80026e4:	4a0c      	ldr	r2, [pc, #48]	@ (8002718 <LoopFillZerobss+0x16>)
 80026e6:	2300      	movs	r3, #0
 80026e8:	e002      	b.n	80026f0 <LoopCopyDataInit>

080026ea <CopyDataInit>:
 80026ea:	58d4      	ldr	r4, [r2, r3]
 80026ec:	50c4      	str	r4, [r0, r3]
 80026ee:	3304      	adds	r3, #4

080026f0 <LoopCopyDataInit>:
 80026f0:	18c4      	adds	r4, r0, r3
 80026f2:	428c      	cmp	r4, r1
 80026f4:	d3f9      	bcc.n	80026ea <CopyDataInit>
 80026f6:	4a09      	ldr	r2, [pc, #36]	@ (800271c <LoopFillZerobss+0x1a>)
 80026f8:	4c09      	ldr	r4, [pc, #36]	@ (8002720 <LoopFillZerobss+0x1e>)
 80026fa:	2300      	movs	r3, #0
 80026fc:	e001      	b.n	8002702 <LoopFillZerobss>

080026fe <FillZerobss>:
 80026fe:	6013      	str	r3, [r2, #0]
 8002700:	3204      	adds	r2, #4

08002702 <LoopFillZerobss>:
 8002702:	42a2      	cmp	r2, r4
 8002704:	d3fb      	bcc.n	80026fe <FillZerobss>
 8002706:	f002 f943 	bl	8004990 <__libc_init_array>
 800270a:	f7ff fc55 	bl	8001fb8 <main>
 800270e:	4770      	bx	lr
 8002710:	20000000 	.word	0x20000000
 8002714:	200000f0 	.word	0x200000f0
 8002718:	08005870 	.word	0x08005870
 800271c:	200000f0 	.word	0x200000f0
 8002720:	20000968 	.word	0x20000968

08002724 <ADC1_2_IRQHandler>:
 8002724:	e7fe      	b.n	8002724 <ADC1_2_IRQHandler>
	...

08002728 <HAL_Init>:
 8002728:	b580      	push	{r7, lr}
 800272a:	af00      	add	r7, sp, #0
 800272c:	4b08      	ldr	r3, [pc, #32]	@ (8002750 <HAL_Init+0x28>)
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	4a07      	ldr	r2, [pc, #28]	@ (8002750 <HAL_Init+0x28>)
 8002732:	f043 0310 	orr.w	r3, r3, #16
 8002736:	6013      	str	r3, [r2, #0]
 8002738:	2003      	movs	r0, #3
 800273a:	f000 f92b 	bl	8002994 <HAL_NVIC_SetPriorityGrouping>
 800273e:	200f      	movs	r0, #15
 8002740:	f000 f808 	bl	8002754 <HAL_InitTick>
 8002744:	f7ff fe4e 	bl	80023e4 <HAL_MspInit>
 8002748:	2300      	movs	r3, #0
 800274a:	4618      	mov	r0, r3
 800274c:	bd80      	pop	{r7, pc}
 800274e:	bf00      	nop
 8002750:	40022000 	.word	0x40022000

08002754 <HAL_InitTick>:
 8002754:	b580      	push	{r7, lr}
 8002756:	b082      	sub	sp, #8
 8002758:	af00      	add	r7, sp, #0
 800275a:	6078      	str	r0, [r7, #4]
 800275c:	4b12      	ldr	r3, [pc, #72]	@ (80027a8 <HAL_InitTick+0x54>)
 800275e:	681a      	ldr	r2, [r3, #0]
 8002760:	4b12      	ldr	r3, [pc, #72]	@ (80027ac <HAL_InitTick+0x58>)
 8002762:	781b      	ldrb	r3, [r3, #0]
 8002764:	4619      	mov	r1, r3
 8002766:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800276a:	fbb3 f3f1 	udiv	r3, r3, r1
 800276e:	fbb2 f3f3 	udiv	r3, r2, r3
 8002772:	4618      	mov	r0, r3
 8002774:	f000 f935 	bl	80029e2 <HAL_SYSTICK_Config>
 8002778:	4603      	mov	r3, r0
 800277a:	2b00      	cmp	r3, #0
 800277c:	d001      	beq.n	8002782 <HAL_InitTick+0x2e>
 800277e:	2301      	movs	r3, #1
 8002780:	e00e      	b.n	80027a0 <HAL_InitTick+0x4c>
 8002782:	687b      	ldr	r3, [r7, #4]
 8002784:	2b0f      	cmp	r3, #15
 8002786:	d80a      	bhi.n	800279e <HAL_InitTick+0x4a>
 8002788:	2200      	movs	r2, #0
 800278a:	6879      	ldr	r1, [r7, #4]
 800278c:	f04f 30ff 	mov.w	r0, #4294967295
 8002790:	f000 f90b 	bl	80029aa <HAL_NVIC_SetPriority>
 8002794:	4a06      	ldr	r2, [pc, #24]	@ (80027b0 <HAL_InitTick+0x5c>)
 8002796:	687b      	ldr	r3, [r7, #4]
 8002798:	6013      	str	r3, [r2, #0]
 800279a:	2300      	movs	r3, #0
 800279c:	e000      	b.n	80027a0 <HAL_InitTick+0x4c>
 800279e:	2301      	movs	r3, #1
 80027a0:	4618      	mov	r0, r3
 80027a2:	3708      	adds	r7, #8
 80027a4:	46bd      	mov	sp, r7
 80027a6:	bd80      	pop	{r7, pc}
 80027a8:	20000088 	.word	0x20000088
 80027ac:	20000090 	.word	0x20000090
 80027b0:	2000008c 	.word	0x2000008c

080027b4 <HAL_IncTick>:
 80027b4:	b480      	push	{r7}
 80027b6:	af00      	add	r7, sp, #0
 80027b8:	4b05      	ldr	r3, [pc, #20]	@ (80027d0 <HAL_IncTick+0x1c>)
 80027ba:	781b      	ldrb	r3, [r3, #0]
 80027bc:	461a      	mov	r2, r3
 80027be:	4b05      	ldr	r3, [pc, #20]	@ (80027d4 <HAL_IncTick+0x20>)
 80027c0:	681b      	ldr	r3, [r3, #0]
 80027c2:	4413      	add	r3, r2
 80027c4:	4a03      	ldr	r2, [pc, #12]	@ (80027d4 <HAL_IncTick+0x20>)
 80027c6:	6013      	str	r3, [r2, #0]
 80027c8:	bf00      	nop
 80027ca:	46bd      	mov	sp, r7
 80027cc:	bc80      	pop	{r7}
 80027ce:	4770      	bx	lr
 80027d0:	20000090 	.word	0x20000090
 80027d4:	20000818 	.word	0x20000818

080027d8 <HAL_GetTick>:
 80027d8:	b480      	push	{r7}
 80027da:	af00      	add	r7, sp, #0
 80027dc:	4b02      	ldr	r3, [pc, #8]	@ (80027e8 <HAL_GetTick+0x10>)
 80027de:	681b      	ldr	r3, [r3, #0]
 80027e0:	4618      	mov	r0, r3
 80027e2:	46bd      	mov	sp, r7
 80027e4:	bc80      	pop	{r7}
 80027e6:	4770      	bx	lr
 80027e8:	20000818 	.word	0x20000818

080027ec <HAL_Delay>:
 80027ec:	b580      	push	{r7, lr}
 80027ee:	b084      	sub	sp, #16
 80027f0:	af00      	add	r7, sp, #0
 80027f2:	6078      	str	r0, [r7, #4]
 80027f4:	f7ff fff0 	bl	80027d8 <HAL_GetTick>
 80027f8:	60b8      	str	r0, [r7, #8]
 80027fa:	687b      	ldr	r3, [r7, #4]
 80027fc:	60fb      	str	r3, [r7, #12]
 80027fe:	68fb      	ldr	r3, [r7, #12]
 8002800:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002804:	d005      	beq.n	8002812 <HAL_Delay+0x26>
 8002806:	4b0a      	ldr	r3, [pc, #40]	@ (8002830 <HAL_Delay+0x44>)
 8002808:	781b      	ldrb	r3, [r3, #0]
 800280a:	461a      	mov	r2, r3
 800280c:	68fb      	ldr	r3, [r7, #12]
 800280e:	4413      	add	r3, r2
 8002810:	60fb      	str	r3, [r7, #12]
 8002812:	bf00      	nop
 8002814:	f7ff ffe0 	bl	80027d8 <HAL_GetTick>
 8002818:	4602      	mov	r2, r0
 800281a:	68bb      	ldr	r3, [r7, #8]
 800281c:	1ad3      	subs	r3, r2, r3
 800281e:	68fa      	ldr	r2, [r7, #12]
 8002820:	429a      	cmp	r2, r3
 8002822:	d8f7      	bhi.n	8002814 <HAL_Delay+0x28>
 8002824:	bf00      	nop
 8002826:	bf00      	nop
 8002828:	3710      	adds	r7, #16
 800282a:	46bd      	mov	sp, r7
 800282c:	bd80      	pop	{r7, pc}
 800282e:	bf00      	nop
 8002830:	20000090 	.word	0x20000090

08002834 <__NVIC_SetPriorityGrouping>:
 8002834:	b480      	push	{r7}
 8002836:	b085      	sub	sp, #20
 8002838:	af00      	add	r7, sp, #0
 800283a:	6078      	str	r0, [r7, #4]
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	f003 0307 	and.w	r3, r3, #7
 8002842:	60fb      	str	r3, [r7, #12]
 8002844:	4b0c      	ldr	r3, [pc, #48]	@ (8002878 <__NVIC_SetPriorityGrouping+0x44>)
 8002846:	68db      	ldr	r3, [r3, #12]
 8002848:	60bb      	str	r3, [r7, #8]
 800284a:	68ba      	ldr	r2, [r7, #8]
 800284c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002850:	4013      	ands	r3, r2
 8002852:	60bb      	str	r3, [r7, #8]
 8002854:	68fb      	ldr	r3, [r7, #12]
 8002856:	021a      	lsls	r2, r3, #8
 8002858:	68bb      	ldr	r3, [r7, #8]
 800285a:	4313      	orrs	r3, r2
 800285c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002860:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002864:	60bb      	str	r3, [r7, #8]
 8002866:	4a04      	ldr	r2, [pc, #16]	@ (8002878 <__NVIC_SetPriorityGrouping+0x44>)
 8002868:	68bb      	ldr	r3, [r7, #8]
 800286a:	60d3      	str	r3, [r2, #12]
 800286c:	bf00      	nop
 800286e:	3714      	adds	r7, #20
 8002870:	46bd      	mov	sp, r7
 8002872:	bc80      	pop	{r7}
 8002874:	4770      	bx	lr
 8002876:	bf00      	nop
 8002878:	e000ed00 	.word	0xe000ed00

0800287c <__NVIC_GetPriorityGrouping>:
 800287c:	b480      	push	{r7}
 800287e:	af00      	add	r7, sp, #0
 8002880:	4b04      	ldr	r3, [pc, #16]	@ (8002894 <__NVIC_GetPriorityGrouping+0x18>)
 8002882:	68db      	ldr	r3, [r3, #12]
 8002884:	0a1b      	lsrs	r3, r3, #8
 8002886:	f003 0307 	and.w	r3, r3, #7
 800288a:	4618      	mov	r0, r3
 800288c:	46bd      	mov	sp, r7
 800288e:	bc80      	pop	{r7}
 8002890:	4770      	bx	lr
 8002892:	bf00      	nop
 8002894:	e000ed00 	.word	0xe000ed00

08002898 <__NVIC_SetPriority>:
 8002898:	b480      	push	{r7}
 800289a:	b083      	sub	sp, #12
 800289c:	af00      	add	r7, sp, #0
 800289e:	4603      	mov	r3, r0
 80028a0:	6039      	str	r1, [r7, #0]
 80028a2:	71fb      	strb	r3, [r7, #7]
 80028a4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80028a8:	2b00      	cmp	r3, #0
 80028aa:	db0a      	blt.n	80028c2 <__NVIC_SetPriority+0x2a>
 80028ac:	683b      	ldr	r3, [r7, #0]
 80028ae:	b2da      	uxtb	r2, r3
 80028b0:	490c      	ldr	r1, [pc, #48]	@ (80028e4 <__NVIC_SetPriority+0x4c>)
 80028b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80028b6:	0112      	lsls	r2, r2, #4
 80028b8:	b2d2      	uxtb	r2, r2
 80028ba:	440b      	add	r3, r1
 80028bc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80028c0:	e00a      	b.n	80028d8 <__NVIC_SetPriority+0x40>
 80028c2:	683b      	ldr	r3, [r7, #0]
 80028c4:	b2da      	uxtb	r2, r3
 80028c6:	4908      	ldr	r1, [pc, #32]	@ (80028e8 <__NVIC_SetPriority+0x50>)
 80028c8:	79fb      	ldrb	r3, [r7, #7]
 80028ca:	f003 030f 	and.w	r3, r3, #15
 80028ce:	3b04      	subs	r3, #4
 80028d0:	0112      	lsls	r2, r2, #4
 80028d2:	b2d2      	uxtb	r2, r2
 80028d4:	440b      	add	r3, r1
 80028d6:	761a      	strb	r2, [r3, #24]
 80028d8:	bf00      	nop
 80028da:	370c      	adds	r7, #12
 80028dc:	46bd      	mov	sp, r7
 80028de:	bc80      	pop	{r7}
 80028e0:	4770      	bx	lr
 80028e2:	bf00      	nop
 80028e4:	e000e100 	.word	0xe000e100
 80028e8:	e000ed00 	.word	0xe000ed00

080028ec <NVIC_EncodePriority>:
 80028ec:	b480      	push	{r7}
 80028ee:	b089      	sub	sp, #36	@ 0x24
 80028f0:	af00      	add	r7, sp, #0
 80028f2:	60f8      	str	r0, [r7, #12]
 80028f4:	60b9      	str	r1, [r7, #8]
 80028f6:	607a      	str	r2, [r7, #4]
 80028f8:	68fb      	ldr	r3, [r7, #12]
 80028fa:	f003 0307 	and.w	r3, r3, #7
 80028fe:	61fb      	str	r3, [r7, #28]
 8002900:	69fb      	ldr	r3, [r7, #28]
 8002902:	f1c3 0307 	rsb	r3, r3, #7
 8002906:	2b04      	cmp	r3, #4
 8002908:	bf28      	it	cs
 800290a:	2304      	movcs	r3, #4
 800290c:	61bb      	str	r3, [r7, #24]
 800290e:	69fb      	ldr	r3, [r7, #28]
 8002910:	3304      	adds	r3, #4
 8002912:	2b06      	cmp	r3, #6
 8002914:	d902      	bls.n	800291c <NVIC_EncodePriority+0x30>
 8002916:	69fb      	ldr	r3, [r7, #28]
 8002918:	3b03      	subs	r3, #3
 800291a:	e000      	b.n	800291e <NVIC_EncodePriority+0x32>
 800291c:	2300      	movs	r3, #0
 800291e:	617b      	str	r3, [r7, #20]
 8002920:	f04f 32ff 	mov.w	r2, #4294967295
 8002924:	69bb      	ldr	r3, [r7, #24]
 8002926:	fa02 f303 	lsl.w	r3, r2, r3
 800292a:	43da      	mvns	r2, r3
 800292c:	68bb      	ldr	r3, [r7, #8]
 800292e:	401a      	ands	r2, r3
 8002930:	697b      	ldr	r3, [r7, #20]
 8002932:	409a      	lsls	r2, r3
 8002934:	f04f 31ff 	mov.w	r1, #4294967295
 8002938:	697b      	ldr	r3, [r7, #20]
 800293a:	fa01 f303 	lsl.w	r3, r1, r3
 800293e:	43d9      	mvns	r1, r3
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	400b      	ands	r3, r1
 8002944:	4313      	orrs	r3, r2
 8002946:	4618      	mov	r0, r3
 8002948:	3724      	adds	r7, #36	@ 0x24
 800294a:	46bd      	mov	sp, r7
 800294c:	bc80      	pop	{r7}
 800294e:	4770      	bx	lr

08002950 <SysTick_Config>:
 8002950:	b580      	push	{r7, lr}
 8002952:	b082      	sub	sp, #8
 8002954:	af00      	add	r7, sp, #0
 8002956:	6078      	str	r0, [r7, #4]
 8002958:	687b      	ldr	r3, [r7, #4]
 800295a:	3b01      	subs	r3, #1
 800295c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002960:	d301      	bcc.n	8002966 <SysTick_Config+0x16>
 8002962:	2301      	movs	r3, #1
 8002964:	e00f      	b.n	8002986 <SysTick_Config+0x36>
 8002966:	4a0a      	ldr	r2, [pc, #40]	@ (8002990 <SysTick_Config+0x40>)
 8002968:	687b      	ldr	r3, [r7, #4]
 800296a:	3b01      	subs	r3, #1
 800296c:	6053      	str	r3, [r2, #4]
 800296e:	210f      	movs	r1, #15
 8002970:	f04f 30ff 	mov.w	r0, #4294967295
 8002974:	f7ff ff90 	bl	8002898 <__NVIC_SetPriority>
 8002978:	4b05      	ldr	r3, [pc, #20]	@ (8002990 <SysTick_Config+0x40>)
 800297a:	2200      	movs	r2, #0
 800297c:	609a      	str	r2, [r3, #8]
 800297e:	4b04      	ldr	r3, [pc, #16]	@ (8002990 <SysTick_Config+0x40>)
 8002980:	2207      	movs	r2, #7
 8002982:	601a      	str	r2, [r3, #0]
 8002984:	2300      	movs	r3, #0
 8002986:	4618      	mov	r0, r3
 8002988:	3708      	adds	r7, #8
 800298a:	46bd      	mov	sp, r7
 800298c:	bd80      	pop	{r7, pc}
 800298e:	bf00      	nop
 8002990:	e000e010 	.word	0xe000e010

08002994 <HAL_NVIC_SetPriorityGrouping>:
 8002994:	b580      	push	{r7, lr}
 8002996:	b082      	sub	sp, #8
 8002998:	af00      	add	r7, sp, #0
 800299a:	6078      	str	r0, [r7, #4]
 800299c:	6878      	ldr	r0, [r7, #4]
 800299e:	f7ff ff49 	bl	8002834 <__NVIC_SetPriorityGrouping>
 80029a2:	bf00      	nop
 80029a4:	3708      	adds	r7, #8
 80029a6:	46bd      	mov	sp, r7
 80029a8:	bd80      	pop	{r7, pc}

080029aa <HAL_NVIC_SetPriority>:
 80029aa:	b580      	push	{r7, lr}
 80029ac:	b086      	sub	sp, #24
 80029ae:	af00      	add	r7, sp, #0
 80029b0:	4603      	mov	r3, r0
 80029b2:	60b9      	str	r1, [r7, #8]
 80029b4:	607a      	str	r2, [r7, #4]
 80029b6:	73fb      	strb	r3, [r7, #15]
 80029b8:	2300      	movs	r3, #0
 80029ba:	617b      	str	r3, [r7, #20]
 80029bc:	f7ff ff5e 	bl	800287c <__NVIC_GetPriorityGrouping>
 80029c0:	6178      	str	r0, [r7, #20]
 80029c2:	687a      	ldr	r2, [r7, #4]
 80029c4:	68b9      	ldr	r1, [r7, #8]
 80029c6:	6978      	ldr	r0, [r7, #20]
 80029c8:	f7ff ff90 	bl	80028ec <NVIC_EncodePriority>
 80029cc:	4602      	mov	r2, r0
 80029ce:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80029d2:	4611      	mov	r1, r2
 80029d4:	4618      	mov	r0, r3
 80029d6:	f7ff ff5f 	bl	8002898 <__NVIC_SetPriority>
 80029da:	bf00      	nop
 80029dc:	3718      	adds	r7, #24
 80029de:	46bd      	mov	sp, r7
 80029e0:	bd80      	pop	{r7, pc}

080029e2 <HAL_SYSTICK_Config>:
 80029e2:	b580      	push	{r7, lr}
 80029e4:	b082      	sub	sp, #8
 80029e6:	af00      	add	r7, sp, #0
 80029e8:	6078      	str	r0, [r7, #4]
 80029ea:	6878      	ldr	r0, [r7, #4]
 80029ec:	f7ff ffb0 	bl	8002950 <SysTick_Config>
 80029f0:	4603      	mov	r3, r0
 80029f2:	4618      	mov	r0, r3
 80029f4:	3708      	adds	r7, #8
 80029f6:	46bd      	mov	sp, r7
 80029f8:	bd80      	pop	{r7, pc}
	...

080029fc <HAL_GPIO_Init>:
 80029fc:	b480      	push	{r7}
 80029fe:	b08b      	sub	sp, #44	@ 0x2c
 8002a00:	af00      	add	r7, sp, #0
 8002a02:	6078      	str	r0, [r7, #4]
 8002a04:	6039      	str	r1, [r7, #0]
 8002a06:	2300      	movs	r3, #0
 8002a08:	627b      	str	r3, [r7, #36]	@ 0x24
 8002a0a:	2300      	movs	r3, #0
 8002a0c:	623b      	str	r3, [r7, #32]
 8002a0e:	e161      	b.n	8002cd4 <HAL_GPIO_Init+0x2d8>
 8002a10:	2201      	movs	r2, #1
 8002a12:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002a14:	fa02 f303 	lsl.w	r3, r2, r3
 8002a18:	61fb      	str	r3, [r7, #28]
 8002a1a:	683b      	ldr	r3, [r7, #0]
 8002a1c:	681b      	ldr	r3, [r3, #0]
 8002a1e:	69fa      	ldr	r2, [r7, #28]
 8002a20:	4013      	ands	r3, r2
 8002a22:	61bb      	str	r3, [r7, #24]
 8002a24:	69ba      	ldr	r2, [r7, #24]
 8002a26:	69fb      	ldr	r3, [r7, #28]
 8002a28:	429a      	cmp	r2, r3
 8002a2a:	f040 8150 	bne.w	8002cce <HAL_GPIO_Init+0x2d2>
 8002a2e:	683b      	ldr	r3, [r7, #0]
 8002a30:	685b      	ldr	r3, [r3, #4]
 8002a32:	4a97      	ldr	r2, [pc, #604]	@ (8002c90 <HAL_GPIO_Init+0x294>)
 8002a34:	4293      	cmp	r3, r2
 8002a36:	d05e      	beq.n	8002af6 <HAL_GPIO_Init+0xfa>
 8002a38:	4a95      	ldr	r2, [pc, #596]	@ (8002c90 <HAL_GPIO_Init+0x294>)
 8002a3a:	4293      	cmp	r3, r2
 8002a3c:	d875      	bhi.n	8002b2a <HAL_GPIO_Init+0x12e>
 8002a3e:	4a95      	ldr	r2, [pc, #596]	@ (8002c94 <HAL_GPIO_Init+0x298>)
 8002a40:	4293      	cmp	r3, r2
 8002a42:	d058      	beq.n	8002af6 <HAL_GPIO_Init+0xfa>
 8002a44:	4a93      	ldr	r2, [pc, #588]	@ (8002c94 <HAL_GPIO_Init+0x298>)
 8002a46:	4293      	cmp	r3, r2
 8002a48:	d86f      	bhi.n	8002b2a <HAL_GPIO_Init+0x12e>
 8002a4a:	4a93      	ldr	r2, [pc, #588]	@ (8002c98 <HAL_GPIO_Init+0x29c>)
 8002a4c:	4293      	cmp	r3, r2
 8002a4e:	d052      	beq.n	8002af6 <HAL_GPIO_Init+0xfa>
 8002a50:	4a91      	ldr	r2, [pc, #580]	@ (8002c98 <HAL_GPIO_Init+0x29c>)
 8002a52:	4293      	cmp	r3, r2
 8002a54:	d869      	bhi.n	8002b2a <HAL_GPIO_Init+0x12e>
 8002a56:	4a91      	ldr	r2, [pc, #580]	@ (8002c9c <HAL_GPIO_Init+0x2a0>)
 8002a58:	4293      	cmp	r3, r2
 8002a5a:	d04c      	beq.n	8002af6 <HAL_GPIO_Init+0xfa>
 8002a5c:	4a8f      	ldr	r2, [pc, #572]	@ (8002c9c <HAL_GPIO_Init+0x2a0>)
 8002a5e:	4293      	cmp	r3, r2
 8002a60:	d863      	bhi.n	8002b2a <HAL_GPIO_Init+0x12e>
 8002a62:	4a8f      	ldr	r2, [pc, #572]	@ (8002ca0 <HAL_GPIO_Init+0x2a4>)
 8002a64:	4293      	cmp	r3, r2
 8002a66:	d046      	beq.n	8002af6 <HAL_GPIO_Init+0xfa>
 8002a68:	4a8d      	ldr	r2, [pc, #564]	@ (8002ca0 <HAL_GPIO_Init+0x2a4>)
 8002a6a:	4293      	cmp	r3, r2
 8002a6c:	d85d      	bhi.n	8002b2a <HAL_GPIO_Init+0x12e>
 8002a6e:	2b12      	cmp	r3, #18
 8002a70:	d82a      	bhi.n	8002ac8 <HAL_GPIO_Init+0xcc>
 8002a72:	2b12      	cmp	r3, #18
 8002a74:	d859      	bhi.n	8002b2a <HAL_GPIO_Init+0x12e>
 8002a76:	a201      	add	r2, pc, #4	@ (adr r2, 8002a7c <HAL_GPIO_Init+0x80>)
 8002a78:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002a7c:	08002af7 	.word	0x08002af7
 8002a80:	08002ad1 	.word	0x08002ad1
 8002a84:	08002ae3 	.word	0x08002ae3
 8002a88:	08002b25 	.word	0x08002b25
 8002a8c:	08002b2b 	.word	0x08002b2b
 8002a90:	08002b2b 	.word	0x08002b2b
 8002a94:	08002b2b 	.word	0x08002b2b
 8002a98:	08002b2b 	.word	0x08002b2b
 8002a9c:	08002b2b 	.word	0x08002b2b
 8002aa0:	08002b2b 	.word	0x08002b2b
 8002aa4:	08002b2b 	.word	0x08002b2b
 8002aa8:	08002b2b 	.word	0x08002b2b
 8002aac:	08002b2b 	.word	0x08002b2b
 8002ab0:	08002b2b 	.word	0x08002b2b
 8002ab4:	08002b2b 	.word	0x08002b2b
 8002ab8:	08002b2b 	.word	0x08002b2b
 8002abc:	08002b2b 	.word	0x08002b2b
 8002ac0:	08002ad9 	.word	0x08002ad9
 8002ac4:	08002aed 	.word	0x08002aed
 8002ac8:	4a76      	ldr	r2, [pc, #472]	@ (8002ca4 <HAL_GPIO_Init+0x2a8>)
 8002aca:	4293      	cmp	r3, r2
 8002acc:	d013      	beq.n	8002af6 <HAL_GPIO_Init+0xfa>
 8002ace:	e02c      	b.n	8002b2a <HAL_GPIO_Init+0x12e>
 8002ad0:	683b      	ldr	r3, [r7, #0]
 8002ad2:	68db      	ldr	r3, [r3, #12]
 8002ad4:	623b      	str	r3, [r7, #32]
 8002ad6:	e029      	b.n	8002b2c <HAL_GPIO_Init+0x130>
 8002ad8:	683b      	ldr	r3, [r7, #0]
 8002ada:	68db      	ldr	r3, [r3, #12]
 8002adc:	3304      	adds	r3, #4
 8002ade:	623b      	str	r3, [r7, #32]
 8002ae0:	e024      	b.n	8002b2c <HAL_GPIO_Init+0x130>
 8002ae2:	683b      	ldr	r3, [r7, #0]
 8002ae4:	68db      	ldr	r3, [r3, #12]
 8002ae6:	3308      	adds	r3, #8
 8002ae8:	623b      	str	r3, [r7, #32]
 8002aea:	e01f      	b.n	8002b2c <HAL_GPIO_Init+0x130>
 8002aec:	683b      	ldr	r3, [r7, #0]
 8002aee:	68db      	ldr	r3, [r3, #12]
 8002af0:	330c      	adds	r3, #12
 8002af2:	623b      	str	r3, [r7, #32]
 8002af4:	e01a      	b.n	8002b2c <HAL_GPIO_Init+0x130>
 8002af6:	683b      	ldr	r3, [r7, #0]
 8002af8:	689b      	ldr	r3, [r3, #8]
 8002afa:	2b00      	cmp	r3, #0
 8002afc:	d102      	bne.n	8002b04 <HAL_GPIO_Init+0x108>
 8002afe:	2304      	movs	r3, #4
 8002b00:	623b      	str	r3, [r7, #32]
 8002b02:	e013      	b.n	8002b2c <HAL_GPIO_Init+0x130>
 8002b04:	683b      	ldr	r3, [r7, #0]
 8002b06:	689b      	ldr	r3, [r3, #8]
 8002b08:	2b01      	cmp	r3, #1
 8002b0a:	d105      	bne.n	8002b18 <HAL_GPIO_Init+0x11c>
 8002b0c:	2308      	movs	r3, #8
 8002b0e:	623b      	str	r3, [r7, #32]
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	69fa      	ldr	r2, [r7, #28]
 8002b14:	611a      	str	r2, [r3, #16]
 8002b16:	e009      	b.n	8002b2c <HAL_GPIO_Init+0x130>
 8002b18:	2308      	movs	r3, #8
 8002b1a:	623b      	str	r3, [r7, #32]
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	69fa      	ldr	r2, [r7, #28]
 8002b20:	615a      	str	r2, [r3, #20]
 8002b22:	e003      	b.n	8002b2c <HAL_GPIO_Init+0x130>
 8002b24:	2300      	movs	r3, #0
 8002b26:	623b      	str	r3, [r7, #32]
 8002b28:	e000      	b.n	8002b2c <HAL_GPIO_Init+0x130>
 8002b2a:	bf00      	nop
 8002b2c:	69bb      	ldr	r3, [r7, #24]
 8002b2e:	2bff      	cmp	r3, #255	@ 0xff
 8002b30:	d801      	bhi.n	8002b36 <HAL_GPIO_Init+0x13a>
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	e001      	b.n	8002b3a <HAL_GPIO_Init+0x13e>
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	3304      	adds	r3, #4
 8002b3a:	617b      	str	r3, [r7, #20]
 8002b3c:	69bb      	ldr	r3, [r7, #24]
 8002b3e:	2bff      	cmp	r3, #255	@ 0xff
 8002b40:	d802      	bhi.n	8002b48 <HAL_GPIO_Init+0x14c>
 8002b42:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002b44:	009b      	lsls	r3, r3, #2
 8002b46:	e002      	b.n	8002b4e <HAL_GPIO_Init+0x152>
 8002b48:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002b4a:	3b08      	subs	r3, #8
 8002b4c:	009b      	lsls	r3, r3, #2
 8002b4e:	613b      	str	r3, [r7, #16]
 8002b50:	697b      	ldr	r3, [r7, #20]
 8002b52:	681a      	ldr	r2, [r3, #0]
 8002b54:	210f      	movs	r1, #15
 8002b56:	693b      	ldr	r3, [r7, #16]
 8002b58:	fa01 f303 	lsl.w	r3, r1, r3
 8002b5c:	43db      	mvns	r3, r3
 8002b5e:	401a      	ands	r2, r3
 8002b60:	6a39      	ldr	r1, [r7, #32]
 8002b62:	693b      	ldr	r3, [r7, #16]
 8002b64:	fa01 f303 	lsl.w	r3, r1, r3
 8002b68:	431a      	orrs	r2, r3
 8002b6a:	697b      	ldr	r3, [r7, #20]
 8002b6c:	601a      	str	r2, [r3, #0]
 8002b6e:	683b      	ldr	r3, [r7, #0]
 8002b70:	685b      	ldr	r3, [r3, #4]
 8002b72:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002b76:	2b00      	cmp	r3, #0
 8002b78:	f000 80a9 	beq.w	8002cce <HAL_GPIO_Init+0x2d2>
 8002b7c:	4b4a      	ldr	r3, [pc, #296]	@ (8002ca8 <HAL_GPIO_Init+0x2ac>)
 8002b7e:	699b      	ldr	r3, [r3, #24]
 8002b80:	4a49      	ldr	r2, [pc, #292]	@ (8002ca8 <HAL_GPIO_Init+0x2ac>)
 8002b82:	f043 0301 	orr.w	r3, r3, #1
 8002b86:	6193      	str	r3, [r2, #24]
 8002b88:	4b47      	ldr	r3, [pc, #284]	@ (8002ca8 <HAL_GPIO_Init+0x2ac>)
 8002b8a:	699b      	ldr	r3, [r3, #24]
 8002b8c:	f003 0301 	and.w	r3, r3, #1
 8002b90:	60bb      	str	r3, [r7, #8]
 8002b92:	68bb      	ldr	r3, [r7, #8]
 8002b94:	4a45      	ldr	r2, [pc, #276]	@ (8002cac <HAL_GPIO_Init+0x2b0>)
 8002b96:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002b98:	089b      	lsrs	r3, r3, #2
 8002b9a:	3302      	adds	r3, #2
 8002b9c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002ba0:	60fb      	str	r3, [r7, #12]
 8002ba2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002ba4:	f003 0303 	and.w	r3, r3, #3
 8002ba8:	009b      	lsls	r3, r3, #2
 8002baa:	220f      	movs	r2, #15
 8002bac:	fa02 f303 	lsl.w	r3, r2, r3
 8002bb0:	43db      	mvns	r3, r3
 8002bb2:	68fa      	ldr	r2, [r7, #12]
 8002bb4:	4013      	ands	r3, r2
 8002bb6:	60fb      	str	r3, [r7, #12]
 8002bb8:	687b      	ldr	r3, [r7, #4]
 8002bba:	4a3d      	ldr	r2, [pc, #244]	@ (8002cb0 <HAL_GPIO_Init+0x2b4>)
 8002bbc:	4293      	cmp	r3, r2
 8002bbe:	d00d      	beq.n	8002bdc <HAL_GPIO_Init+0x1e0>
 8002bc0:	687b      	ldr	r3, [r7, #4]
 8002bc2:	4a3c      	ldr	r2, [pc, #240]	@ (8002cb4 <HAL_GPIO_Init+0x2b8>)
 8002bc4:	4293      	cmp	r3, r2
 8002bc6:	d007      	beq.n	8002bd8 <HAL_GPIO_Init+0x1dc>
 8002bc8:	687b      	ldr	r3, [r7, #4]
 8002bca:	4a3b      	ldr	r2, [pc, #236]	@ (8002cb8 <HAL_GPIO_Init+0x2bc>)
 8002bcc:	4293      	cmp	r3, r2
 8002bce:	d101      	bne.n	8002bd4 <HAL_GPIO_Init+0x1d8>
 8002bd0:	2302      	movs	r3, #2
 8002bd2:	e004      	b.n	8002bde <HAL_GPIO_Init+0x1e2>
 8002bd4:	2303      	movs	r3, #3
 8002bd6:	e002      	b.n	8002bde <HAL_GPIO_Init+0x1e2>
 8002bd8:	2301      	movs	r3, #1
 8002bda:	e000      	b.n	8002bde <HAL_GPIO_Init+0x1e2>
 8002bdc:	2300      	movs	r3, #0
 8002bde:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8002be0:	f002 0203 	and.w	r2, r2, #3
 8002be4:	0092      	lsls	r2, r2, #2
 8002be6:	4093      	lsls	r3, r2
 8002be8:	68fa      	ldr	r2, [r7, #12]
 8002bea:	4313      	orrs	r3, r2
 8002bec:	60fb      	str	r3, [r7, #12]
 8002bee:	492f      	ldr	r1, [pc, #188]	@ (8002cac <HAL_GPIO_Init+0x2b0>)
 8002bf0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002bf2:	089b      	lsrs	r3, r3, #2
 8002bf4:	3302      	adds	r3, #2
 8002bf6:	68fa      	ldr	r2, [r7, #12]
 8002bf8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002bfc:	683b      	ldr	r3, [r7, #0]
 8002bfe:	685b      	ldr	r3, [r3, #4]
 8002c00:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002c04:	2b00      	cmp	r3, #0
 8002c06:	d006      	beq.n	8002c16 <HAL_GPIO_Init+0x21a>
 8002c08:	4b2c      	ldr	r3, [pc, #176]	@ (8002cbc <HAL_GPIO_Init+0x2c0>)
 8002c0a:	689a      	ldr	r2, [r3, #8]
 8002c0c:	492b      	ldr	r1, [pc, #172]	@ (8002cbc <HAL_GPIO_Init+0x2c0>)
 8002c0e:	69bb      	ldr	r3, [r7, #24]
 8002c10:	4313      	orrs	r3, r2
 8002c12:	608b      	str	r3, [r1, #8]
 8002c14:	e006      	b.n	8002c24 <HAL_GPIO_Init+0x228>
 8002c16:	4b29      	ldr	r3, [pc, #164]	@ (8002cbc <HAL_GPIO_Init+0x2c0>)
 8002c18:	689a      	ldr	r2, [r3, #8]
 8002c1a:	69bb      	ldr	r3, [r7, #24]
 8002c1c:	43db      	mvns	r3, r3
 8002c1e:	4927      	ldr	r1, [pc, #156]	@ (8002cbc <HAL_GPIO_Init+0x2c0>)
 8002c20:	4013      	ands	r3, r2
 8002c22:	608b      	str	r3, [r1, #8]
 8002c24:	683b      	ldr	r3, [r7, #0]
 8002c26:	685b      	ldr	r3, [r3, #4]
 8002c28:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002c2c:	2b00      	cmp	r3, #0
 8002c2e:	d006      	beq.n	8002c3e <HAL_GPIO_Init+0x242>
 8002c30:	4b22      	ldr	r3, [pc, #136]	@ (8002cbc <HAL_GPIO_Init+0x2c0>)
 8002c32:	68da      	ldr	r2, [r3, #12]
 8002c34:	4921      	ldr	r1, [pc, #132]	@ (8002cbc <HAL_GPIO_Init+0x2c0>)
 8002c36:	69bb      	ldr	r3, [r7, #24]
 8002c38:	4313      	orrs	r3, r2
 8002c3a:	60cb      	str	r3, [r1, #12]
 8002c3c:	e006      	b.n	8002c4c <HAL_GPIO_Init+0x250>
 8002c3e:	4b1f      	ldr	r3, [pc, #124]	@ (8002cbc <HAL_GPIO_Init+0x2c0>)
 8002c40:	68da      	ldr	r2, [r3, #12]
 8002c42:	69bb      	ldr	r3, [r7, #24]
 8002c44:	43db      	mvns	r3, r3
 8002c46:	491d      	ldr	r1, [pc, #116]	@ (8002cbc <HAL_GPIO_Init+0x2c0>)
 8002c48:	4013      	ands	r3, r2
 8002c4a:	60cb      	str	r3, [r1, #12]
 8002c4c:	683b      	ldr	r3, [r7, #0]
 8002c4e:	685b      	ldr	r3, [r3, #4]
 8002c50:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002c54:	2b00      	cmp	r3, #0
 8002c56:	d006      	beq.n	8002c66 <HAL_GPIO_Init+0x26a>
 8002c58:	4b18      	ldr	r3, [pc, #96]	@ (8002cbc <HAL_GPIO_Init+0x2c0>)
 8002c5a:	685a      	ldr	r2, [r3, #4]
 8002c5c:	4917      	ldr	r1, [pc, #92]	@ (8002cbc <HAL_GPIO_Init+0x2c0>)
 8002c5e:	69bb      	ldr	r3, [r7, #24]
 8002c60:	4313      	orrs	r3, r2
 8002c62:	604b      	str	r3, [r1, #4]
 8002c64:	e006      	b.n	8002c74 <HAL_GPIO_Init+0x278>
 8002c66:	4b15      	ldr	r3, [pc, #84]	@ (8002cbc <HAL_GPIO_Init+0x2c0>)
 8002c68:	685a      	ldr	r2, [r3, #4]
 8002c6a:	69bb      	ldr	r3, [r7, #24]
 8002c6c:	43db      	mvns	r3, r3
 8002c6e:	4913      	ldr	r1, [pc, #76]	@ (8002cbc <HAL_GPIO_Init+0x2c0>)
 8002c70:	4013      	ands	r3, r2
 8002c72:	604b      	str	r3, [r1, #4]
 8002c74:	683b      	ldr	r3, [r7, #0]
 8002c76:	685b      	ldr	r3, [r3, #4]
 8002c78:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002c7c:	2b00      	cmp	r3, #0
 8002c7e:	d01f      	beq.n	8002cc0 <HAL_GPIO_Init+0x2c4>
 8002c80:	4b0e      	ldr	r3, [pc, #56]	@ (8002cbc <HAL_GPIO_Init+0x2c0>)
 8002c82:	681a      	ldr	r2, [r3, #0]
 8002c84:	490d      	ldr	r1, [pc, #52]	@ (8002cbc <HAL_GPIO_Init+0x2c0>)
 8002c86:	69bb      	ldr	r3, [r7, #24]
 8002c88:	4313      	orrs	r3, r2
 8002c8a:	600b      	str	r3, [r1, #0]
 8002c8c:	e01f      	b.n	8002cce <HAL_GPIO_Init+0x2d2>
 8002c8e:	bf00      	nop
 8002c90:	10320000 	.word	0x10320000
 8002c94:	10310000 	.word	0x10310000
 8002c98:	10220000 	.word	0x10220000
 8002c9c:	10210000 	.word	0x10210000
 8002ca0:	10120000 	.word	0x10120000
 8002ca4:	10110000 	.word	0x10110000
 8002ca8:	40021000 	.word	0x40021000
 8002cac:	40010000 	.word	0x40010000
 8002cb0:	40010800 	.word	0x40010800
 8002cb4:	40010c00 	.word	0x40010c00
 8002cb8:	40011000 	.word	0x40011000
 8002cbc:	40010400 	.word	0x40010400
 8002cc0:	4b0b      	ldr	r3, [pc, #44]	@ (8002cf0 <HAL_GPIO_Init+0x2f4>)
 8002cc2:	681a      	ldr	r2, [r3, #0]
 8002cc4:	69bb      	ldr	r3, [r7, #24]
 8002cc6:	43db      	mvns	r3, r3
 8002cc8:	4909      	ldr	r1, [pc, #36]	@ (8002cf0 <HAL_GPIO_Init+0x2f4>)
 8002cca:	4013      	ands	r3, r2
 8002ccc:	600b      	str	r3, [r1, #0]
 8002cce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002cd0:	3301      	adds	r3, #1
 8002cd2:	627b      	str	r3, [r7, #36]	@ 0x24
 8002cd4:	683b      	ldr	r3, [r7, #0]
 8002cd6:	681a      	ldr	r2, [r3, #0]
 8002cd8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002cda:	fa22 f303 	lsr.w	r3, r2, r3
 8002cde:	2b00      	cmp	r3, #0
 8002ce0:	f47f ae96 	bne.w	8002a10 <HAL_GPIO_Init+0x14>
 8002ce4:	bf00      	nop
 8002ce6:	bf00      	nop
 8002ce8:	372c      	adds	r7, #44	@ 0x2c
 8002cea:	46bd      	mov	sp, r7
 8002cec:	bc80      	pop	{r7}
 8002cee:	4770      	bx	lr
 8002cf0:	40010400 	.word	0x40010400

08002cf4 <HAL_GPIO_WritePin>:
 8002cf4:	b480      	push	{r7}
 8002cf6:	b083      	sub	sp, #12
 8002cf8:	af00      	add	r7, sp, #0
 8002cfa:	6078      	str	r0, [r7, #4]
 8002cfc:	460b      	mov	r3, r1
 8002cfe:	807b      	strh	r3, [r7, #2]
 8002d00:	4613      	mov	r3, r2
 8002d02:	707b      	strb	r3, [r7, #1]
 8002d04:	787b      	ldrb	r3, [r7, #1]
 8002d06:	2b00      	cmp	r3, #0
 8002d08:	d003      	beq.n	8002d12 <HAL_GPIO_WritePin+0x1e>
 8002d0a:	887a      	ldrh	r2, [r7, #2]
 8002d0c:	687b      	ldr	r3, [r7, #4]
 8002d0e:	611a      	str	r2, [r3, #16]
 8002d10:	e003      	b.n	8002d1a <HAL_GPIO_WritePin+0x26>
 8002d12:	887b      	ldrh	r3, [r7, #2]
 8002d14:	041a      	lsls	r2, r3, #16
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	611a      	str	r2, [r3, #16]
 8002d1a:	bf00      	nop
 8002d1c:	370c      	adds	r7, #12
 8002d1e:	46bd      	mov	sp, r7
 8002d20:	bc80      	pop	{r7}
 8002d22:	4770      	bx	lr

08002d24 <HAL_I2C_Init>:
 8002d24:	b580      	push	{r7, lr}
 8002d26:	b084      	sub	sp, #16
 8002d28:	af00      	add	r7, sp, #0
 8002d2a:	6078      	str	r0, [r7, #4]
 8002d2c:	687b      	ldr	r3, [r7, #4]
 8002d2e:	2b00      	cmp	r3, #0
 8002d30:	d101      	bne.n	8002d36 <HAL_I2C_Init+0x12>
 8002d32:	2301      	movs	r3, #1
 8002d34:	e12b      	b.n	8002f8e <HAL_I2C_Init+0x26a>
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002d3c:	b2db      	uxtb	r3, r3
 8002d3e:	2b00      	cmp	r3, #0
 8002d40:	d106      	bne.n	8002d50 <HAL_I2C_Init+0x2c>
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	2200      	movs	r2, #0
 8002d46:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002d4a:	6878      	ldr	r0, [r7, #4]
 8002d4c:	f7ff fb7c 	bl	8002448 <HAL_I2C_MspInit>
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	2224      	movs	r2, #36	@ 0x24
 8002d54:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002d58:	687b      	ldr	r3, [r7, #4]
 8002d5a:	681b      	ldr	r3, [r3, #0]
 8002d5c:	681a      	ldr	r2, [r3, #0]
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	681b      	ldr	r3, [r3, #0]
 8002d62:	f022 0201 	bic.w	r2, r2, #1
 8002d66:	601a      	str	r2, [r3, #0]
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	681b      	ldr	r3, [r3, #0]
 8002d6c:	681a      	ldr	r2, [r3, #0]
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	681b      	ldr	r3, [r3, #0]
 8002d72:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8002d76:	601a      	str	r2, [r3, #0]
 8002d78:	687b      	ldr	r3, [r7, #4]
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	681a      	ldr	r2, [r3, #0]
 8002d7e:	687b      	ldr	r3, [r7, #4]
 8002d80:	681b      	ldr	r3, [r3, #0]
 8002d82:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8002d86:	601a      	str	r2, [r3, #0]
 8002d88:	f001 fc38 	bl	80045fc <HAL_RCC_GetPCLK1Freq>
 8002d8c:	60f8      	str	r0, [r7, #12]
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	685b      	ldr	r3, [r3, #4]
 8002d92:	4a81      	ldr	r2, [pc, #516]	@ (8002f98 <HAL_I2C_Init+0x274>)
 8002d94:	4293      	cmp	r3, r2
 8002d96:	d807      	bhi.n	8002da8 <HAL_I2C_Init+0x84>
 8002d98:	68fb      	ldr	r3, [r7, #12]
 8002d9a:	4a80      	ldr	r2, [pc, #512]	@ (8002f9c <HAL_I2C_Init+0x278>)
 8002d9c:	4293      	cmp	r3, r2
 8002d9e:	bf94      	ite	ls
 8002da0:	2301      	movls	r3, #1
 8002da2:	2300      	movhi	r3, #0
 8002da4:	b2db      	uxtb	r3, r3
 8002da6:	e006      	b.n	8002db6 <HAL_I2C_Init+0x92>
 8002da8:	68fb      	ldr	r3, [r7, #12]
 8002daa:	4a7d      	ldr	r2, [pc, #500]	@ (8002fa0 <HAL_I2C_Init+0x27c>)
 8002dac:	4293      	cmp	r3, r2
 8002dae:	bf94      	ite	ls
 8002db0:	2301      	movls	r3, #1
 8002db2:	2300      	movhi	r3, #0
 8002db4:	b2db      	uxtb	r3, r3
 8002db6:	2b00      	cmp	r3, #0
 8002db8:	d001      	beq.n	8002dbe <HAL_I2C_Init+0x9a>
 8002dba:	2301      	movs	r3, #1
 8002dbc:	e0e7      	b.n	8002f8e <HAL_I2C_Init+0x26a>
 8002dbe:	68fb      	ldr	r3, [r7, #12]
 8002dc0:	4a78      	ldr	r2, [pc, #480]	@ (8002fa4 <HAL_I2C_Init+0x280>)
 8002dc2:	fba2 2303 	umull	r2, r3, r2, r3
 8002dc6:	0c9b      	lsrs	r3, r3, #18
 8002dc8:	60bb      	str	r3, [r7, #8]
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	685b      	ldr	r3, [r3, #4]
 8002dd0:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	681b      	ldr	r3, [r3, #0]
 8002dd8:	68ba      	ldr	r2, [r7, #8]
 8002dda:	430a      	orrs	r2, r1
 8002ddc:	605a      	str	r2, [r3, #4]
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	681b      	ldr	r3, [r3, #0]
 8002de2:	6a1b      	ldr	r3, [r3, #32]
 8002de4:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	685b      	ldr	r3, [r3, #4]
 8002dec:	4a6a      	ldr	r2, [pc, #424]	@ (8002f98 <HAL_I2C_Init+0x274>)
 8002dee:	4293      	cmp	r3, r2
 8002df0:	d802      	bhi.n	8002df8 <HAL_I2C_Init+0xd4>
 8002df2:	68bb      	ldr	r3, [r7, #8]
 8002df4:	3301      	adds	r3, #1
 8002df6:	e009      	b.n	8002e0c <HAL_I2C_Init+0xe8>
 8002df8:	68bb      	ldr	r3, [r7, #8]
 8002dfa:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8002dfe:	fb02 f303 	mul.w	r3, r2, r3
 8002e02:	4a69      	ldr	r2, [pc, #420]	@ (8002fa8 <HAL_I2C_Init+0x284>)
 8002e04:	fba2 2303 	umull	r2, r3, r2, r3
 8002e08:	099b      	lsrs	r3, r3, #6
 8002e0a:	3301      	adds	r3, #1
 8002e0c:	687a      	ldr	r2, [r7, #4]
 8002e0e:	6812      	ldr	r2, [r2, #0]
 8002e10:	430b      	orrs	r3, r1
 8002e12:	6213      	str	r3, [r2, #32]
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	681b      	ldr	r3, [r3, #0]
 8002e18:	69db      	ldr	r3, [r3, #28]
 8002e1a:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8002e1e:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	685b      	ldr	r3, [r3, #4]
 8002e26:	495c      	ldr	r1, [pc, #368]	@ (8002f98 <HAL_I2C_Init+0x274>)
 8002e28:	428b      	cmp	r3, r1
 8002e2a:	d819      	bhi.n	8002e60 <HAL_I2C_Init+0x13c>
 8002e2c:	68fb      	ldr	r3, [r7, #12]
 8002e2e:	1e59      	subs	r1, r3, #1
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	685b      	ldr	r3, [r3, #4]
 8002e34:	005b      	lsls	r3, r3, #1
 8002e36:	fbb1 f3f3 	udiv	r3, r1, r3
 8002e3a:	1c59      	adds	r1, r3, #1
 8002e3c:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8002e40:	400b      	ands	r3, r1
 8002e42:	2b00      	cmp	r3, #0
 8002e44:	d00a      	beq.n	8002e5c <HAL_I2C_Init+0x138>
 8002e46:	68fb      	ldr	r3, [r7, #12]
 8002e48:	1e59      	subs	r1, r3, #1
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	685b      	ldr	r3, [r3, #4]
 8002e4e:	005b      	lsls	r3, r3, #1
 8002e50:	fbb1 f3f3 	udiv	r3, r1, r3
 8002e54:	3301      	adds	r3, #1
 8002e56:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002e5a:	e051      	b.n	8002f00 <HAL_I2C_Init+0x1dc>
 8002e5c:	2304      	movs	r3, #4
 8002e5e:	e04f      	b.n	8002f00 <HAL_I2C_Init+0x1dc>
 8002e60:	687b      	ldr	r3, [r7, #4]
 8002e62:	689b      	ldr	r3, [r3, #8]
 8002e64:	2b00      	cmp	r3, #0
 8002e66:	d111      	bne.n	8002e8c <HAL_I2C_Init+0x168>
 8002e68:	68fb      	ldr	r3, [r7, #12]
 8002e6a:	1e58      	subs	r0, r3, #1
 8002e6c:	687b      	ldr	r3, [r7, #4]
 8002e6e:	6859      	ldr	r1, [r3, #4]
 8002e70:	460b      	mov	r3, r1
 8002e72:	005b      	lsls	r3, r3, #1
 8002e74:	440b      	add	r3, r1
 8002e76:	fbb0 f3f3 	udiv	r3, r0, r3
 8002e7a:	3301      	adds	r3, #1
 8002e7c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002e80:	2b00      	cmp	r3, #0
 8002e82:	bf0c      	ite	eq
 8002e84:	2301      	moveq	r3, #1
 8002e86:	2300      	movne	r3, #0
 8002e88:	b2db      	uxtb	r3, r3
 8002e8a:	e012      	b.n	8002eb2 <HAL_I2C_Init+0x18e>
 8002e8c:	68fb      	ldr	r3, [r7, #12]
 8002e8e:	1e58      	subs	r0, r3, #1
 8002e90:	687b      	ldr	r3, [r7, #4]
 8002e92:	6859      	ldr	r1, [r3, #4]
 8002e94:	460b      	mov	r3, r1
 8002e96:	009b      	lsls	r3, r3, #2
 8002e98:	440b      	add	r3, r1
 8002e9a:	0099      	lsls	r1, r3, #2
 8002e9c:	440b      	add	r3, r1
 8002e9e:	fbb0 f3f3 	udiv	r3, r0, r3
 8002ea2:	3301      	adds	r3, #1
 8002ea4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002ea8:	2b00      	cmp	r3, #0
 8002eaa:	bf0c      	ite	eq
 8002eac:	2301      	moveq	r3, #1
 8002eae:	2300      	movne	r3, #0
 8002eb0:	b2db      	uxtb	r3, r3
 8002eb2:	2b00      	cmp	r3, #0
 8002eb4:	d001      	beq.n	8002eba <HAL_I2C_Init+0x196>
 8002eb6:	2301      	movs	r3, #1
 8002eb8:	e022      	b.n	8002f00 <HAL_I2C_Init+0x1dc>
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	689b      	ldr	r3, [r3, #8]
 8002ebe:	2b00      	cmp	r3, #0
 8002ec0:	d10e      	bne.n	8002ee0 <HAL_I2C_Init+0x1bc>
 8002ec2:	68fb      	ldr	r3, [r7, #12]
 8002ec4:	1e58      	subs	r0, r3, #1
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	6859      	ldr	r1, [r3, #4]
 8002eca:	460b      	mov	r3, r1
 8002ecc:	005b      	lsls	r3, r3, #1
 8002ece:	440b      	add	r3, r1
 8002ed0:	fbb0 f3f3 	udiv	r3, r0, r3
 8002ed4:	3301      	adds	r3, #1
 8002ed6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002eda:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002ede:	e00f      	b.n	8002f00 <HAL_I2C_Init+0x1dc>
 8002ee0:	68fb      	ldr	r3, [r7, #12]
 8002ee2:	1e58      	subs	r0, r3, #1
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	6859      	ldr	r1, [r3, #4]
 8002ee8:	460b      	mov	r3, r1
 8002eea:	009b      	lsls	r3, r3, #2
 8002eec:	440b      	add	r3, r1
 8002eee:	0099      	lsls	r1, r3, #2
 8002ef0:	440b      	add	r3, r1
 8002ef2:	fbb0 f3f3 	udiv	r3, r0, r3
 8002ef6:	3301      	adds	r3, #1
 8002ef8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002efc:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8002f00:	6879      	ldr	r1, [r7, #4]
 8002f02:	6809      	ldr	r1, [r1, #0]
 8002f04:	4313      	orrs	r3, r2
 8002f06:	61cb      	str	r3, [r1, #28]
 8002f08:	687b      	ldr	r3, [r7, #4]
 8002f0a:	681b      	ldr	r3, [r3, #0]
 8002f0c:	681b      	ldr	r3, [r3, #0]
 8002f0e:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	69da      	ldr	r2, [r3, #28]
 8002f16:	687b      	ldr	r3, [r7, #4]
 8002f18:	6a1b      	ldr	r3, [r3, #32]
 8002f1a:	431a      	orrs	r2, r3
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	681b      	ldr	r3, [r3, #0]
 8002f20:	430a      	orrs	r2, r1
 8002f22:	601a      	str	r2, [r3, #0]
 8002f24:	687b      	ldr	r3, [r7, #4]
 8002f26:	681b      	ldr	r3, [r3, #0]
 8002f28:	689b      	ldr	r3, [r3, #8]
 8002f2a:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8002f2e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8002f32:	687a      	ldr	r2, [r7, #4]
 8002f34:	6911      	ldr	r1, [r2, #16]
 8002f36:	687a      	ldr	r2, [r7, #4]
 8002f38:	68d2      	ldr	r2, [r2, #12]
 8002f3a:	4311      	orrs	r1, r2
 8002f3c:	687a      	ldr	r2, [r7, #4]
 8002f3e:	6812      	ldr	r2, [r2, #0]
 8002f40:	430b      	orrs	r3, r1
 8002f42:	6093      	str	r3, [r2, #8]
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	68db      	ldr	r3, [r3, #12]
 8002f4a:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 8002f4e:	687b      	ldr	r3, [r7, #4]
 8002f50:	695a      	ldr	r2, [r3, #20]
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	699b      	ldr	r3, [r3, #24]
 8002f56:	431a      	orrs	r2, r3
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	681b      	ldr	r3, [r3, #0]
 8002f5c:	430a      	orrs	r2, r1
 8002f5e:	60da      	str	r2, [r3, #12]
 8002f60:	687b      	ldr	r3, [r7, #4]
 8002f62:	681b      	ldr	r3, [r3, #0]
 8002f64:	681a      	ldr	r2, [r3, #0]
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	681b      	ldr	r3, [r3, #0]
 8002f6a:	f042 0201 	orr.w	r2, r2, #1
 8002f6e:	601a      	str	r2, [r3, #0]
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	2200      	movs	r2, #0
 8002f74:	641a      	str	r2, [r3, #64]	@ 0x40
 8002f76:	687b      	ldr	r3, [r7, #4]
 8002f78:	2220      	movs	r2, #32
 8002f7a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	2200      	movs	r2, #0
 8002f82:	631a      	str	r2, [r3, #48]	@ 0x30
 8002f84:	687b      	ldr	r3, [r7, #4]
 8002f86:	2200      	movs	r2, #0
 8002f88:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002f8c:	2300      	movs	r3, #0
 8002f8e:	4618      	mov	r0, r3
 8002f90:	3710      	adds	r7, #16
 8002f92:	46bd      	mov	sp, r7
 8002f94:	bd80      	pop	{r7, pc}
 8002f96:	bf00      	nop
 8002f98:	000186a0 	.word	0x000186a0
 8002f9c:	001e847f 	.word	0x001e847f
 8002fa0:	003d08ff 	.word	0x003d08ff
 8002fa4:	431bde83 	.word	0x431bde83
 8002fa8:	10624dd3 	.word	0x10624dd3

08002fac <HAL_I2C_Mem_Write>:
 8002fac:	b580      	push	{r7, lr}
 8002fae:	b088      	sub	sp, #32
 8002fb0:	af02      	add	r7, sp, #8
 8002fb2:	60f8      	str	r0, [r7, #12]
 8002fb4:	4608      	mov	r0, r1
 8002fb6:	4611      	mov	r1, r2
 8002fb8:	461a      	mov	r2, r3
 8002fba:	4603      	mov	r3, r0
 8002fbc:	817b      	strh	r3, [r7, #10]
 8002fbe:	460b      	mov	r3, r1
 8002fc0:	813b      	strh	r3, [r7, #8]
 8002fc2:	4613      	mov	r3, r2
 8002fc4:	80fb      	strh	r3, [r7, #6]
 8002fc6:	f7ff fc07 	bl	80027d8 <HAL_GetTick>
 8002fca:	6178      	str	r0, [r7, #20]
 8002fcc:	68fb      	ldr	r3, [r7, #12]
 8002fce:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002fd2:	b2db      	uxtb	r3, r3
 8002fd4:	2b20      	cmp	r3, #32
 8002fd6:	f040 80d9 	bne.w	800318c <HAL_I2C_Mem_Write+0x1e0>
 8002fda:	697b      	ldr	r3, [r7, #20]
 8002fdc:	9300      	str	r3, [sp, #0]
 8002fde:	2319      	movs	r3, #25
 8002fe0:	2201      	movs	r2, #1
 8002fe2:	496d      	ldr	r1, [pc, #436]	@ (8003198 <HAL_I2C_Mem_Write+0x1ec>)
 8002fe4:	68f8      	ldr	r0, [r7, #12]
 8002fe6:	f000 fd09 	bl	80039fc <I2C_WaitOnFlagUntilTimeout>
 8002fea:	4603      	mov	r3, r0
 8002fec:	2b00      	cmp	r3, #0
 8002fee:	d001      	beq.n	8002ff4 <HAL_I2C_Mem_Write+0x48>
 8002ff0:	2302      	movs	r3, #2
 8002ff2:	e0cc      	b.n	800318e <HAL_I2C_Mem_Write+0x1e2>
 8002ff4:	68fb      	ldr	r3, [r7, #12]
 8002ff6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002ffa:	2b01      	cmp	r3, #1
 8002ffc:	d101      	bne.n	8003002 <HAL_I2C_Mem_Write+0x56>
 8002ffe:	2302      	movs	r3, #2
 8003000:	e0c5      	b.n	800318e <HAL_I2C_Mem_Write+0x1e2>
 8003002:	68fb      	ldr	r3, [r7, #12]
 8003004:	2201      	movs	r2, #1
 8003006:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800300a:	68fb      	ldr	r3, [r7, #12]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	681b      	ldr	r3, [r3, #0]
 8003010:	f003 0301 	and.w	r3, r3, #1
 8003014:	2b01      	cmp	r3, #1
 8003016:	d007      	beq.n	8003028 <HAL_I2C_Mem_Write+0x7c>
 8003018:	68fb      	ldr	r3, [r7, #12]
 800301a:	681b      	ldr	r3, [r3, #0]
 800301c:	681a      	ldr	r2, [r3, #0]
 800301e:	68fb      	ldr	r3, [r7, #12]
 8003020:	681b      	ldr	r3, [r3, #0]
 8003022:	f042 0201 	orr.w	r2, r2, #1
 8003026:	601a      	str	r2, [r3, #0]
 8003028:	68fb      	ldr	r3, [r7, #12]
 800302a:	681b      	ldr	r3, [r3, #0]
 800302c:	681a      	ldr	r2, [r3, #0]
 800302e:	68fb      	ldr	r3, [r7, #12]
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003036:	601a      	str	r2, [r3, #0]
 8003038:	68fb      	ldr	r3, [r7, #12]
 800303a:	2221      	movs	r2, #33	@ 0x21
 800303c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003040:	68fb      	ldr	r3, [r7, #12]
 8003042:	2240      	movs	r2, #64	@ 0x40
 8003044:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003048:	68fb      	ldr	r3, [r7, #12]
 800304a:	2200      	movs	r2, #0
 800304c:	641a      	str	r2, [r3, #64]	@ 0x40
 800304e:	68fb      	ldr	r3, [r7, #12]
 8003050:	6a3a      	ldr	r2, [r7, #32]
 8003052:	625a      	str	r2, [r3, #36]	@ 0x24
 8003054:	68fb      	ldr	r3, [r7, #12]
 8003056:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8003058:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800305a:	68fb      	ldr	r3, [r7, #12]
 800305c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800305e:	b29a      	uxth	r2, r3
 8003060:	68fb      	ldr	r3, [r7, #12]
 8003062:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003064:	68fb      	ldr	r3, [r7, #12]
 8003066:	4a4d      	ldr	r2, [pc, #308]	@ (800319c <HAL_I2C_Mem_Write+0x1f0>)
 8003068:	62da      	str	r2, [r3, #44]	@ 0x2c
 800306a:	88f8      	ldrh	r0, [r7, #6]
 800306c:	893a      	ldrh	r2, [r7, #8]
 800306e:	8979      	ldrh	r1, [r7, #10]
 8003070:	697b      	ldr	r3, [r7, #20]
 8003072:	9301      	str	r3, [sp, #4]
 8003074:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003076:	9300      	str	r3, [sp, #0]
 8003078:	4603      	mov	r3, r0
 800307a:	68f8      	ldr	r0, [r7, #12]
 800307c:	f000 fb40 	bl	8003700 <I2C_RequestMemoryWrite>
 8003080:	4603      	mov	r3, r0
 8003082:	2b00      	cmp	r3, #0
 8003084:	d052      	beq.n	800312c <HAL_I2C_Mem_Write+0x180>
 8003086:	2301      	movs	r3, #1
 8003088:	e081      	b.n	800318e <HAL_I2C_Mem_Write+0x1e2>
 800308a:	697a      	ldr	r2, [r7, #20]
 800308c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800308e:	68f8      	ldr	r0, [r7, #12]
 8003090:	f000 fdce 	bl	8003c30 <I2C_WaitOnTXEFlagUntilTimeout>
 8003094:	4603      	mov	r3, r0
 8003096:	2b00      	cmp	r3, #0
 8003098:	d00d      	beq.n	80030b6 <HAL_I2C_Mem_Write+0x10a>
 800309a:	68fb      	ldr	r3, [r7, #12]
 800309c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800309e:	2b04      	cmp	r3, #4
 80030a0:	d107      	bne.n	80030b2 <HAL_I2C_Mem_Write+0x106>
 80030a2:	68fb      	ldr	r3, [r7, #12]
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	681a      	ldr	r2, [r3, #0]
 80030a8:	68fb      	ldr	r3, [r7, #12]
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80030b0:	601a      	str	r2, [r3, #0]
 80030b2:	2301      	movs	r3, #1
 80030b4:	e06b      	b.n	800318e <HAL_I2C_Mem_Write+0x1e2>
 80030b6:	68fb      	ldr	r3, [r7, #12]
 80030b8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80030ba:	781a      	ldrb	r2, [r3, #0]
 80030bc:	68fb      	ldr	r3, [r7, #12]
 80030be:	681b      	ldr	r3, [r3, #0]
 80030c0:	611a      	str	r2, [r3, #16]
 80030c2:	68fb      	ldr	r3, [r7, #12]
 80030c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80030c6:	1c5a      	adds	r2, r3, #1
 80030c8:	68fb      	ldr	r3, [r7, #12]
 80030ca:	625a      	str	r2, [r3, #36]	@ 0x24
 80030cc:	68fb      	ldr	r3, [r7, #12]
 80030ce:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80030d0:	3b01      	subs	r3, #1
 80030d2:	b29a      	uxth	r2, r3
 80030d4:	68fb      	ldr	r3, [r7, #12]
 80030d6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80030d8:	68fb      	ldr	r3, [r7, #12]
 80030da:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80030dc:	b29b      	uxth	r3, r3
 80030de:	3b01      	subs	r3, #1
 80030e0:	b29a      	uxth	r2, r3
 80030e2:	68fb      	ldr	r3, [r7, #12]
 80030e4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80030e6:	68fb      	ldr	r3, [r7, #12]
 80030e8:	681b      	ldr	r3, [r3, #0]
 80030ea:	695b      	ldr	r3, [r3, #20]
 80030ec:	f003 0304 	and.w	r3, r3, #4
 80030f0:	2b04      	cmp	r3, #4
 80030f2:	d11b      	bne.n	800312c <HAL_I2C_Mem_Write+0x180>
 80030f4:	68fb      	ldr	r3, [r7, #12]
 80030f6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80030f8:	2b00      	cmp	r3, #0
 80030fa:	d017      	beq.n	800312c <HAL_I2C_Mem_Write+0x180>
 80030fc:	68fb      	ldr	r3, [r7, #12]
 80030fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003100:	781a      	ldrb	r2, [r3, #0]
 8003102:	68fb      	ldr	r3, [r7, #12]
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	611a      	str	r2, [r3, #16]
 8003108:	68fb      	ldr	r3, [r7, #12]
 800310a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800310c:	1c5a      	adds	r2, r3, #1
 800310e:	68fb      	ldr	r3, [r7, #12]
 8003110:	625a      	str	r2, [r3, #36]	@ 0x24
 8003112:	68fb      	ldr	r3, [r7, #12]
 8003114:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003116:	3b01      	subs	r3, #1
 8003118:	b29a      	uxth	r2, r3
 800311a:	68fb      	ldr	r3, [r7, #12]
 800311c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800311e:	68fb      	ldr	r3, [r7, #12]
 8003120:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003122:	b29b      	uxth	r3, r3
 8003124:	3b01      	subs	r3, #1
 8003126:	b29a      	uxth	r2, r3
 8003128:	68fb      	ldr	r3, [r7, #12]
 800312a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800312c:	68fb      	ldr	r3, [r7, #12]
 800312e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003130:	2b00      	cmp	r3, #0
 8003132:	d1aa      	bne.n	800308a <HAL_I2C_Mem_Write+0xde>
 8003134:	697a      	ldr	r2, [r7, #20]
 8003136:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003138:	68f8      	ldr	r0, [r7, #12]
 800313a:	f000 fdc1 	bl	8003cc0 <I2C_WaitOnBTFFlagUntilTimeout>
 800313e:	4603      	mov	r3, r0
 8003140:	2b00      	cmp	r3, #0
 8003142:	d00d      	beq.n	8003160 <HAL_I2C_Mem_Write+0x1b4>
 8003144:	68fb      	ldr	r3, [r7, #12]
 8003146:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003148:	2b04      	cmp	r3, #4
 800314a:	d107      	bne.n	800315c <HAL_I2C_Mem_Write+0x1b0>
 800314c:	68fb      	ldr	r3, [r7, #12]
 800314e:	681b      	ldr	r3, [r3, #0]
 8003150:	681a      	ldr	r2, [r3, #0]
 8003152:	68fb      	ldr	r3, [r7, #12]
 8003154:	681b      	ldr	r3, [r3, #0]
 8003156:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800315a:	601a      	str	r2, [r3, #0]
 800315c:	2301      	movs	r3, #1
 800315e:	e016      	b.n	800318e <HAL_I2C_Mem_Write+0x1e2>
 8003160:	68fb      	ldr	r3, [r7, #12]
 8003162:	681b      	ldr	r3, [r3, #0]
 8003164:	681a      	ldr	r2, [r3, #0]
 8003166:	68fb      	ldr	r3, [r7, #12]
 8003168:	681b      	ldr	r3, [r3, #0]
 800316a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800316e:	601a      	str	r2, [r3, #0]
 8003170:	68fb      	ldr	r3, [r7, #12]
 8003172:	2220      	movs	r2, #32
 8003174:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003178:	68fb      	ldr	r3, [r7, #12]
 800317a:	2200      	movs	r2, #0
 800317c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003180:	68fb      	ldr	r3, [r7, #12]
 8003182:	2200      	movs	r2, #0
 8003184:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003188:	2300      	movs	r3, #0
 800318a:	e000      	b.n	800318e <HAL_I2C_Mem_Write+0x1e2>
 800318c:	2302      	movs	r3, #2
 800318e:	4618      	mov	r0, r3
 8003190:	3718      	adds	r7, #24
 8003192:	46bd      	mov	sp, r7
 8003194:	bd80      	pop	{r7, pc}
 8003196:	bf00      	nop
 8003198:	00100002 	.word	0x00100002
 800319c:	ffff0000 	.word	0xffff0000

080031a0 <HAL_I2C_Mem_Read>:
 80031a0:	b580      	push	{r7, lr}
 80031a2:	b08c      	sub	sp, #48	@ 0x30
 80031a4:	af02      	add	r7, sp, #8
 80031a6:	60f8      	str	r0, [r7, #12]
 80031a8:	4608      	mov	r0, r1
 80031aa:	4611      	mov	r1, r2
 80031ac:	461a      	mov	r2, r3
 80031ae:	4603      	mov	r3, r0
 80031b0:	817b      	strh	r3, [r7, #10]
 80031b2:	460b      	mov	r3, r1
 80031b4:	813b      	strh	r3, [r7, #8]
 80031b6:	4613      	mov	r3, r2
 80031b8:	80fb      	strh	r3, [r7, #6]
 80031ba:	4b8a      	ldr	r3, [pc, #552]	@ (80033e4 <HAL_I2C_Mem_Read+0x244>)
 80031bc:	f240 2259 	movw	r2, #601	@ 0x259
 80031c0:	601a      	str	r2, [r3, #0]
 80031c2:	2300      	movs	r3, #0
 80031c4:	623b      	str	r3, [r7, #32]
 80031c6:	f7ff fb07 	bl	80027d8 <HAL_GetTick>
 80031ca:	6278      	str	r0, [r7, #36]	@ 0x24
 80031cc:	4b85      	ldr	r3, [pc, #532]	@ (80033e4 <HAL_I2C_Mem_Read+0x244>)
 80031ce:	f241 727b 	movw	r2, #6011	@ 0x177b
 80031d2:	601a      	str	r2, [r3, #0]
 80031d4:	4b83      	ldr	r3, [pc, #524]	@ (80033e4 <HAL_I2C_Mem_Read+0x244>)
 80031d6:	f241 727c 	movw	r2, #6012	@ 0x177c
 80031da:	601a      	str	r2, [r3, #0]
 80031dc:	68fb      	ldr	r3, [r7, #12]
 80031de:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80031e2:	b2db      	uxtb	r3, r3
 80031e4:	2b20      	cmp	r3, #32
 80031e6:	f040 8283 	bne.w	80036f0 <HAL_I2C_Mem_Read+0x550>
 80031ea:	4b7e      	ldr	r3, [pc, #504]	@ (80033e4 <HAL_I2C_Mem_Read+0x244>)
 80031ec:	f241 727d 	movw	r2, #6013	@ 0x177d
 80031f0:	601a      	str	r2, [r3, #0]
 80031f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80031f4:	9300      	str	r3, [sp, #0]
 80031f6:	2319      	movs	r3, #25
 80031f8:	2201      	movs	r2, #1
 80031fa:	497b      	ldr	r1, [pc, #492]	@ (80033e8 <HAL_I2C_Mem_Read+0x248>)
 80031fc:	68f8      	ldr	r0, [r7, #12]
 80031fe:	f000 fbfd 	bl	80039fc <I2C_WaitOnFlagUntilTimeout>
 8003202:	4603      	mov	r3, r0
 8003204:	2b00      	cmp	r3, #0
 8003206:	d001      	beq.n	800320c <HAL_I2C_Mem_Read+0x6c>
 8003208:	2302      	movs	r3, #2
 800320a:	e272      	b.n	80036f2 <HAL_I2C_Mem_Read+0x552>
 800320c:	4b75      	ldr	r3, [pc, #468]	@ (80033e4 <HAL_I2C_Mem_Read+0x244>)
 800320e:	f241 727e 	movw	r2, #6014	@ 0x177e
 8003212:	601a      	str	r2, [r3, #0]
 8003214:	68fb      	ldr	r3, [r7, #12]
 8003216:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800321a:	2b01      	cmp	r3, #1
 800321c:	d101      	bne.n	8003222 <HAL_I2C_Mem_Read+0x82>
 800321e:	2302      	movs	r3, #2
 8003220:	e267      	b.n	80036f2 <HAL_I2C_Mem_Read+0x552>
 8003222:	68fb      	ldr	r3, [r7, #12]
 8003224:	2201      	movs	r2, #1
 8003226:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800322a:	4b6e      	ldr	r3, [pc, #440]	@ (80033e4 <HAL_I2C_Mem_Read+0x244>)
 800322c:	f241 727f 	movw	r2, #6015	@ 0x177f
 8003230:	601a      	str	r2, [r3, #0]
 8003232:	68fb      	ldr	r3, [r7, #12]
 8003234:	681b      	ldr	r3, [r3, #0]
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	f003 0301 	and.w	r3, r3, #1
 800323c:	2b01      	cmp	r3, #1
 800323e:	d007      	beq.n	8003250 <HAL_I2C_Mem_Read+0xb0>
 8003240:	68fb      	ldr	r3, [r7, #12]
 8003242:	681b      	ldr	r3, [r3, #0]
 8003244:	681a      	ldr	r2, [r3, #0]
 8003246:	68fb      	ldr	r3, [r7, #12]
 8003248:	681b      	ldr	r3, [r3, #0]
 800324a:	f042 0201 	orr.w	r2, r2, #1
 800324e:	601a      	str	r2, [r3, #0]
 8003250:	4b64      	ldr	r3, [pc, #400]	@ (80033e4 <HAL_I2C_Mem_Read+0x244>)
 8003252:	f44f 52bc 	mov.w	r2, #6016	@ 0x1780
 8003256:	601a      	str	r2, [r3, #0]
 8003258:	68fb      	ldr	r3, [r7, #12]
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	681a      	ldr	r2, [r3, #0]
 800325e:	68fb      	ldr	r3, [r7, #12]
 8003260:	681b      	ldr	r3, [r3, #0]
 8003262:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003266:	601a      	str	r2, [r3, #0]
 8003268:	4b5e      	ldr	r3, [pc, #376]	@ (80033e4 <HAL_I2C_Mem_Read+0x244>)
 800326a:	f241 7281 	movw	r2, #6017	@ 0x1781
 800326e:	601a      	str	r2, [r3, #0]
 8003270:	68fb      	ldr	r3, [r7, #12]
 8003272:	2222      	movs	r2, #34	@ 0x22
 8003274:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003278:	68fb      	ldr	r3, [r7, #12]
 800327a:	2240      	movs	r2, #64	@ 0x40
 800327c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003280:	68fb      	ldr	r3, [r7, #12]
 8003282:	2200      	movs	r2, #0
 8003284:	641a      	str	r2, [r3, #64]	@ 0x40
 8003286:	4b57      	ldr	r3, [pc, #348]	@ (80033e4 <HAL_I2C_Mem_Read+0x244>)
 8003288:	f241 7282 	movw	r2, #6018	@ 0x1782
 800328c:	601a      	str	r2, [r3, #0]
 800328e:	68fb      	ldr	r3, [r7, #12]
 8003290:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8003292:	625a      	str	r2, [r3, #36]	@ 0x24
 8003294:	68fb      	ldr	r3, [r7, #12]
 8003296:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 8003298:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800329a:	68fb      	ldr	r3, [r7, #12]
 800329c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800329e:	b29a      	uxth	r2, r3
 80032a0:	68fb      	ldr	r3, [r7, #12]
 80032a2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80032a4:	68fb      	ldr	r3, [r7, #12]
 80032a6:	4a51      	ldr	r2, [pc, #324]	@ (80033ec <HAL_I2C_Mem_Read+0x24c>)
 80032a8:	62da      	str	r2, [r3, #44]	@ 0x2c
 80032aa:	4b4e      	ldr	r3, [pc, #312]	@ (80033e4 <HAL_I2C_Mem_Read+0x244>)
 80032ac:	f240 225a 	movw	r2, #602	@ 0x25a
 80032b0:	601a      	str	r2, [r3, #0]
 80032b2:	88f8      	ldrh	r0, [r7, #6]
 80032b4:	893a      	ldrh	r2, [r7, #8]
 80032b6:	8979      	ldrh	r1, [r7, #10]
 80032b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80032ba:	9301      	str	r3, [sp, #4]
 80032bc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80032be:	9300      	str	r3, [sp, #0]
 80032c0:	4603      	mov	r3, r0
 80032c2:	68f8      	ldr	r0, [r7, #12]
 80032c4:	f000 fab2 	bl	800382c <I2C_RequestMemoryRead>
 80032c8:	4603      	mov	r3, r0
 80032ca:	2b00      	cmp	r3, #0
 80032cc:	d001      	beq.n	80032d2 <HAL_I2C_Mem_Read+0x132>
 80032ce:	2301      	movs	r3, #1
 80032d0:	e20f      	b.n	80036f2 <HAL_I2C_Mem_Read+0x552>
 80032d2:	68fb      	ldr	r3, [r7, #12]
 80032d4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80032d6:	2b00      	cmp	r3, #0
 80032d8:	d113      	bne.n	8003302 <HAL_I2C_Mem_Read+0x162>
 80032da:	2300      	movs	r3, #0
 80032dc:	61fb      	str	r3, [r7, #28]
 80032de:	68fb      	ldr	r3, [r7, #12]
 80032e0:	681b      	ldr	r3, [r3, #0]
 80032e2:	695b      	ldr	r3, [r3, #20]
 80032e4:	61fb      	str	r3, [r7, #28]
 80032e6:	68fb      	ldr	r3, [r7, #12]
 80032e8:	681b      	ldr	r3, [r3, #0]
 80032ea:	699b      	ldr	r3, [r3, #24]
 80032ec:	61fb      	str	r3, [r7, #28]
 80032ee:	69fb      	ldr	r3, [r7, #28]
 80032f0:	68fb      	ldr	r3, [r7, #12]
 80032f2:	681b      	ldr	r3, [r3, #0]
 80032f4:	681a      	ldr	r2, [r3, #0]
 80032f6:	68fb      	ldr	r3, [r7, #12]
 80032f8:	681b      	ldr	r3, [r3, #0]
 80032fa:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80032fe:	601a      	str	r2, [r3, #0]
 8003300:	e058      	b.n	80033b4 <HAL_I2C_Mem_Read+0x214>
 8003302:	68fb      	ldr	r3, [r7, #12]
 8003304:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003306:	2b01      	cmp	r3, #1
 8003308:	d11e      	bne.n	8003348 <HAL_I2C_Mem_Read+0x1a8>
 800330a:	68fb      	ldr	r3, [r7, #12]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	681a      	ldr	r2, [r3, #0]
 8003310:	68fb      	ldr	r3, [r7, #12]
 8003312:	681b      	ldr	r3, [r3, #0]
 8003314:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003318:	601a      	str	r2, [r3, #0]
 800331a:	b672      	cpsid	i
 800331c:	bf00      	nop
 800331e:	2300      	movs	r3, #0
 8003320:	61bb      	str	r3, [r7, #24]
 8003322:	68fb      	ldr	r3, [r7, #12]
 8003324:	681b      	ldr	r3, [r3, #0]
 8003326:	695b      	ldr	r3, [r3, #20]
 8003328:	61bb      	str	r3, [r7, #24]
 800332a:	68fb      	ldr	r3, [r7, #12]
 800332c:	681b      	ldr	r3, [r3, #0]
 800332e:	699b      	ldr	r3, [r3, #24]
 8003330:	61bb      	str	r3, [r7, #24]
 8003332:	69bb      	ldr	r3, [r7, #24]
 8003334:	68fb      	ldr	r3, [r7, #12]
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	681a      	ldr	r2, [r3, #0]
 800333a:	68fb      	ldr	r3, [r7, #12]
 800333c:	681b      	ldr	r3, [r3, #0]
 800333e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003342:	601a      	str	r2, [r3, #0]
 8003344:	b662      	cpsie	i
 8003346:	e035      	b.n	80033b4 <HAL_I2C_Mem_Read+0x214>
 8003348:	68fb      	ldr	r3, [r7, #12]
 800334a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800334c:	2b02      	cmp	r3, #2
 800334e:	d11e      	bne.n	800338e <HAL_I2C_Mem_Read+0x1ee>
 8003350:	68fb      	ldr	r3, [r7, #12]
 8003352:	681b      	ldr	r3, [r3, #0]
 8003354:	681a      	ldr	r2, [r3, #0]
 8003356:	68fb      	ldr	r3, [r7, #12]
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800335e:	601a      	str	r2, [r3, #0]
 8003360:	b672      	cpsid	i
 8003362:	bf00      	nop
 8003364:	2300      	movs	r3, #0
 8003366:	617b      	str	r3, [r7, #20]
 8003368:	68fb      	ldr	r3, [r7, #12]
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	695b      	ldr	r3, [r3, #20]
 800336e:	617b      	str	r3, [r7, #20]
 8003370:	68fb      	ldr	r3, [r7, #12]
 8003372:	681b      	ldr	r3, [r3, #0]
 8003374:	699b      	ldr	r3, [r3, #24]
 8003376:	617b      	str	r3, [r7, #20]
 8003378:	697b      	ldr	r3, [r7, #20]
 800337a:	68fb      	ldr	r3, [r7, #12]
 800337c:	681b      	ldr	r3, [r3, #0]
 800337e:	681a      	ldr	r2, [r3, #0]
 8003380:	68fb      	ldr	r3, [r7, #12]
 8003382:	681b      	ldr	r3, [r3, #0]
 8003384:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003388:	601a      	str	r2, [r3, #0]
 800338a:	b662      	cpsie	i
 800338c:	e012      	b.n	80033b4 <HAL_I2C_Mem_Read+0x214>
 800338e:	68fb      	ldr	r3, [r7, #12]
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	681a      	ldr	r2, [r3, #0]
 8003394:	68fb      	ldr	r3, [r7, #12]
 8003396:	681b      	ldr	r3, [r3, #0]
 8003398:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800339c:	601a      	str	r2, [r3, #0]
 800339e:	2300      	movs	r3, #0
 80033a0:	613b      	str	r3, [r7, #16]
 80033a2:	68fb      	ldr	r3, [r7, #12]
 80033a4:	681b      	ldr	r3, [r3, #0]
 80033a6:	695b      	ldr	r3, [r3, #20]
 80033a8:	613b      	str	r3, [r7, #16]
 80033aa:	68fb      	ldr	r3, [r7, #12]
 80033ac:	681b      	ldr	r3, [r3, #0]
 80033ae:	699b      	ldr	r3, [r3, #24]
 80033b0:	613b      	str	r3, [r7, #16]
 80033b2:	693b      	ldr	r3, [r7, #16]
 80033b4:	4b0b      	ldr	r3, [pc, #44]	@ (80033e4 <HAL_I2C_Mem_Read+0x244>)
 80033b6:	f240 225b 	movw	r2, #603	@ 0x25b
 80033ba:	601a      	str	r2, [r3, #0]
 80033bc:	e181      	b.n	80036c2 <HAL_I2C_Mem_Read+0x522>
 80033be:	68fb      	ldr	r3, [r7, #12]
 80033c0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80033c2:	2b03      	cmp	r3, #3
 80033c4:	f200 8122 	bhi.w	800360c <HAL_I2C_Mem_Read+0x46c>
 80033c8:	68fb      	ldr	r3, [r7, #12]
 80033ca:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80033cc:	2b01      	cmp	r3, #1
 80033ce:	d129      	bne.n	8003424 <HAL_I2C_Mem_Read+0x284>
 80033d0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80033d2:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 80033d4:	68f8      	ldr	r0, [r7, #12]
 80033d6:	f000 fcbb 	bl	8003d50 <I2C_WaitOnRXNEFlagUntilTimeout>
 80033da:	4603      	mov	r3, r0
 80033dc:	2b00      	cmp	r3, #0
 80033de:	d007      	beq.n	80033f0 <HAL_I2C_Mem_Read+0x250>
 80033e0:	2301      	movs	r3, #1
 80033e2:	e186      	b.n	80036f2 <HAL_I2C_Mem_Read+0x552>
 80033e4:	20000800 	.word	0x20000800
 80033e8:	00100002 	.word	0x00100002
 80033ec:	ffff0000 	.word	0xffff0000
 80033f0:	68fb      	ldr	r3, [r7, #12]
 80033f2:	681b      	ldr	r3, [r3, #0]
 80033f4:	691a      	ldr	r2, [r3, #16]
 80033f6:	68fb      	ldr	r3, [r7, #12]
 80033f8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80033fa:	b2d2      	uxtb	r2, r2
 80033fc:	701a      	strb	r2, [r3, #0]
 80033fe:	68fb      	ldr	r3, [r7, #12]
 8003400:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003402:	1c5a      	adds	r2, r3, #1
 8003404:	68fb      	ldr	r3, [r7, #12]
 8003406:	625a      	str	r2, [r3, #36]	@ 0x24
 8003408:	68fb      	ldr	r3, [r7, #12]
 800340a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800340c:	3b01      	subs	r3, #1
 800340e:	b29a      	uxth	r2, r3
 8003410:	68fb      	ldr	r3, [r7, #12]
 8003412:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003414:	68fb      	ldr	r3, [r7, #12]
 8003416:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003418:	b29b      	uxth	r3, r3
 800341a:	3b01      	subs	r3, #1
 800341c:	b29a      	uxth	r2, r3
 800341e:	68fb      	ldr	r3, [r7, #12]
 8003420:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003422:	e14e      	b.n	80036c2 <HAL_I2C_Mem_Read+0x522>
 8003424:	68fb      	ldr	r3, [r7, #12]
 8003426:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003428:	2b02      	cmp	r3, #2
 800342a:	d14b      	bne.n	80034c4 <HAL_I2C_Mem_Read+0x324>
 800342c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800342e:	9300      	str	r3, [sp, #0]
 8003430:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003432:	2200      	movs	r2, #0
 8003434:	497c      	ldr	r1, [pc, #496]	@ (8003628 <HAL_I2C_Mem_Read+0x488>)
 8003436:	68f8      	ldr	r0, [r7, #12]
 8003438:	f000 fae0 	bl	80039fc <I2C_WaitOnFlagUntilTimeout>
 800343c:	4603      	mov	r3, r0
 800343e:	2b00      	cmp	r3, #0
 8003440:	d001      	beq.n	8003446 <HAL_I2C_Mem_Read+0x2a6>
 8003442:	2301      	movs	r3, #1
 8003444:	e155      	b.n	80036f2 <HAL_I2C_Mem_Read+0x552>
 8003446:	b672      	cpsid	i
 8003448:	bf00      	nop
 800344a:	68fb      	ldr	r3, [r7, #12]
 800344c:	681b      	ldr	r3, [r3, #0]
 800344e:	681a      	ldr	r2, [r3, #0]
 8003450:	68fb      	ldr	r3, [r7, #12]
 8003452:	681b      	ldr	r3, [r3, #0]
 8003454:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003458:	601a      	str	r2, [r3, #0]
 800345a:	68fb      	ldr	r3, [r7, #12]
 800345c:	681b      	ldr	r3, [r3, #0]
 800345e:	691a      	ldr	r2, [r3, #16]
 8003460:	68fb      	ldr	r3, [r7, #12]
 8003462:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003464:	b2d2      	uxtb	r2, r2
 8003466:	701a      	strb	r2, [r3, #0]
 8003468:	68fb      	ldr	r3, [r7, #12]
 800346a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800346c:	1c5a      	adds	r2, r3, #1
 800346e:	68fb      	ldr	r3, [r7, #12]
 8003470:	625a      	str	r2, [r3, #36]	@ 0x24
 8003472:	68fb      	ldr	r3, [r7, #12]
 8003474:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003476:	3b01      	subs	r3, #1
 8003478:	b29a      	uxth	r2, r3
 800347a:	68fb      	ldr	r3, [r7, #12]
 800347c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800347e:	68fb      	ldr	r3, [r7, #12]
 8003480:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003482:	b29b      	uxth	r3, r3
 8003484:	3b01      	subs	r3, #1
 8003486:	b29a      	uxth	r2, r3
 8003488:	68fb      	ldr	r3, [r7, #12]
 800348a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800348c:	b662      	cpsie	i
 800348e:	bf00      	nop
 8003490:	68fb      	ldr	r3, [r7, #12]
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	691a      	ldr	r2, [r3, #16]
 8003496:	68fb      	ldr	r3, [r7, #12]
 8003498:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800349a:	b2d2      	uxtb	r2, r2
 800349c:	701a      	strb	r2, [r3, #0]
 800349e:	68fb      	ldr	r3, [r7, #12]
 80034a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034a2:	1c5a      	adds	r2, r3, #1
 80034a4:	68fb      	ldr	r3, [r7, #12]
 80034a6:	625a      	str	r2, [r3, #36]	@ 0x24
 80034a8:	68fb      	ldr	r3, [r7, #12]
 80034aa:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80034ac:	3b01      	subs	r3, #1
 80034ae:	b29a      	uxth	r2, r3
 80034b0:	68fb      	ldr	r3, [r7, #12]
 80034b2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80034b4:	68fb      	ldr	r3, [r7, #12]
 80034b6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80034b8:	b29b      	uxth	r3, r3
 80034ba:	3b01      	subs	r3, #1
 80034bc:	b29a      	uxth	r2, r3
 80034be:	68fb      	ldr	r3, [r7, #12]
 80034c0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80034c2:	e0fe      	b.n	80036c2 <HAL_I2C_Mem_Read+0x522>
 80034c4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80034c6:	9300      	str	r3, [sp, #0]
 80034c8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80034ca:	2200      	movs	r2, #0
 80034cc:	4956      	ldr	r1, [pc, #344]	@ (8003628 <HAL_I2C_Mem_Read+0x488>)
 80034ce:	68f8      	ldr	r0, [r7, #12]
 80034d0:	f000 fa94 	bl	80039fc <I2C_WaitOnFlagUntilTimeout>
 80034d4:	4603      	mov	r3, r0
 80034d6:	2b00      	cmp	r3, #0
 80034d8:	d001      	beq.n	80034de <HAL_I2C_Mem_Read+0x33e>
 80034da:	2301      	movs	r3, #1
 80034dc:	e109      	b.n	80036f2 <HAL_I2C_Mem_Read+0x552>
 80034de:	68fb      	ldr	r3, [r7, #12]
 80034e0:	681b      	ldr	r3, [r3, #0]
 80034e2:	681a      	ldr	r2, [r3, #0]
 80034e4:	68fb      	ldr	r3, [r7, #12]
 80034e6:	681b      	ldr	r3, [r3, #0]
 80034e8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80034ec:	601a      	str	r2, [r3, #0]
 80034ee:	b672      	cpsid	i
 80034f0:	bf00      	nop
 80034f2:	68fb      	ldr	r3, [r7, #12]
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	691a      	ldr	r2, [r3, #16]
 80034f8:	68fb      	ldr	r3, [r7, #12]
 80034fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034fc:	b2d2      	uxtb	r2, r2
 80034fe:	701a      	strb	r2, [r3, #0]
 8003500:	68fb      	ldr	r3, [r7, #12]
 8003502:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003504:	1c5a      	adds	r2, r3, #1
 8003506:	68fb      	ldr	r3, [r7, #12]
 8003508:	625a      	str	r2, [r3, #36]	@ 0x24
 800350a:	68fb      	ldr	r3, [r7, #12]
 800350c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800350e:	3b01      	subs	r3, #1
 8003510:	b29a      	uxth	r2, r3
 8003512:	68fb      	ldr	r3, [r7, #12]
 8003514:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003516:	68fb      	ldr	r3, [r7, #12]
 8003518:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800351a:	b29b      	uxth	r3, r3
 800351c:	3b01      	subs	r3, #1
 800351e:	b29a      	uxth	r2, r3
 8003520:	68fb      	ldr	r3, [r7, #12]
 8003522:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003524:	4b41      	ldr	r3, [pc, #260]	@ (800362c <HAL_I2C_Mem_Read+0x48c>)
 8003526:	681b      	ldr	r3, [r3, #0]
 8003528:	08db      	lsrs	r3, r3, #3
 800352a:	4a41      	ldr	r2, [pc, #260]	@ (8003630 <HAL_I2C_Mem_Read+0x490>)
 800352c:	fba2 2303 	umull	r2, r3, r2, r3
 8003530:	0a1a      	lsrs	r2, r3, #8
 8003532:	4613      	mov	r3, r2
 8003534:	009b      	lsls	r3, r3, #2
 8003536:	4413      	add	r3, r2
 8003538:	00da      	lsls	r2, r3, #3
 800353a:	1ad3      	subs	r3, r2, r3
 800353c:	623b      	str	r3, [r7, #32]
 800353e:	6a3b      	ldr	r3, [r7, #32]
 8003540:	3b01      	subs	r3, #1
 8003542:	623b      	str	r3, [r7, #32]
 8003544:	6a3b      	ldr	r3, [r7, #32]
 8003546:	2b00      	cmp	r3, #0
 8003548:	d118      	bne.n	800357c <HAL_I2C_Mem_Read+0x3dc>
 800354a:	68fb      	ldr	r3, [r7, #12]
 800354c:	2200      	movs	r2, #0
 800354e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003550:	68fb      	ldr	r3, [r7, #12]
 8003552:	2220      	movs	r2, #32
 8003554:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003558:	68fb      	ldr	r3, [r7, #12]
 800355a:	2200      	movs	r2, #0
 800355c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003560:	68fb      	ldr	r3, [r7, #12]
 8003562:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003564:	f043 0220 	orr.w	r2, r3, #32
 8003568:	68fb      	ldr	r3, [r7, #12]
 800356a:	641a      	str	r2, [r3, #64]	@ 0x40
 800356c:	b662      	cpsie	i
 800356e:	bf00      	nop
 8003570:	68fb      	ldr	r3, [r7, #12]
 8003572:	2200      	movs	r2, #0
 8003574:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003578:	2301      	movs	r3, #1
 800357a:	e0ba      	b.n	80036f2 <HAL_I2C_Mem_Read+0x552>
 800357c:	68fb      	ldr	r3, [r7, #12]
 800357e:	681b      	ldr	r3, [r3, #0]
 8003580:	695b      	ldr	r3, [r3, #20]
 8003582:	f003 0304 	and.w	r3, r3, #4
 8003586:	2b04      	cmp	r3, #4
 8003588:	d1d9      	bne.n	800353e <HAL_I2C_Mem_Read+0x39e>
 800358a:	4b2a      	ldr	r3, [pc, #168]	@ (8003634 <HAL_I2C_Mem_Read+0x494>)
 800358c:	f44f 7217 	mov.w	r2, #604	@ 0x25c
 8003590:	601a      	str	r2, [r3, #0]
 8003592:	68fb      	ldr	r3, [r7, #12]
 8003594:	681b      	ldr	r3, [r3, #0]
 8003596:	681a      	ldr	r2, [r3, #0]
 8003598:	68fb      	ldr	r3, [r7, #12]
 800359a:	681b      	ldr	r3, [r3, #0]
 800359c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80035a0:	601a      	str	r2, [r3, #0]
 80035a2:	68fb      	ldr	r3, [r7, #12]
 80035a4:	681b      	ldr	r3, [r3, #0]
 80035a6:	691a      	ldr	r2, [r3, #16]
 80035a8:	68fb      	ldr	r3, [r7, #12]
 80035aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035ac:	b2d2      	uxtb	r2, r2
 80035ae:	701a      	strb	r2, [r3, #0]
 80035b0:	68fb      	ldr	r3, [r7, #12]
 80035b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035b4:	1c5a      	adds	r2, r3, #1
 80035b6:	68fb      	ldr	r3, [r7, #12]
 80035b8:	625a      	str	r2, [r3, #36]	@ 0x24
 80035ba:	68fb      	ldr	r3, [r7, #12]
 80035bc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80035be:	3b01      	subs	r3, #1
 80035c0:	b29a      	uxth	r2, r3
 80035c2:	68fb      	ldr	r3, [r7, #12]
 80035c4:	851a      	strh	r2, [r3, #40]	@ 0x28
 80035c6:	68fb      	ldr	r3, [r7, #12]
 80035c8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80035ca:	b29b      	uxth	r3, r3
 80035cc:	3b01      	subs	r3, #1
 80035ce:	b29a      	uxth	r2, r3
 80035d0:	68fb      	ldr	r3, [r7, #12]
 80035d2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80035d4:	b662      	cpsie	i
 80035d6:	bf00      	nop
 80035d8:	68fb      	ldr	r3, [r7, #12]
 80035da:	681b      	ldr	r3, [r3, #0]
 80035dc:	691a      	ldr	r2, [r3, #16]
 80035de:	68fb      	ldr	r3, [r7, #12]
 80035e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035e2:	b2d2      	uxtb	r2, r2
 80035e4:	701a      	strb	r2, [r3, #0]
 80035e6:	68fb      	ldr	r3, [r7, #12]
 80035e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035ea:	1c5a      	adds	r2, r3, #1
 80035ec:	68fb      	ldr	r3, [r7, #12]
 80035ee:	625a      	str	r2, [r3, #36]	@ 0x24
 80035f0:	68fb      	ldr	r3, [r7, #12]
 80035f2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80035f4:	3b01      	subs	r3, #1
 80035f6:	b29a      	uxth	r2, r3
 80035f8:	68fb      	ldr	r3, [r7, #12]
 80035fa:	851a      	strh	r2, [r3, #40]	@ 0x28
 80035fc:	68fb      	ldr	r3, [r7, #12]
 80035fe:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003600:	b29b      	uxth	r3, r3
 8003602:	3b01      	subs	r3, #1
 8003604:	b29a      	uxth	r2, r3
 8003606:	68fb      	ldr	r3, [r7, #12]
 8003608:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800360a:	e05a      	b.n	80036c2 <HAL_I2C_Mem_Read+0x522>
 800360c:	4b09      	ldr	r3, [pc, #36]	@ (8003634 <HAL_I2C_Mem_Read+0x494>)
 800360e:	f240 225d 	movw	r2, #605	@ 0x25d
 8003612:	601a      	str	r2, [r3, #0]
 8003614:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003616:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8003618:	68f8      	ldr	r0, [r7, #12]
 800361a:	f000 fb99 	bl	8003d50 <I2C_WaitOnRXNEFlagUntilTimeout>
 800361e:	4603      	mov	r3, r0
 8003620:	2b00      	cmp	r3, #0
 8003622:	d009      	beq.n	8003638 <HAL_I2C_Mem_Read+0x498>
 8003624:	2301      	movs	r3, #1
 8003626:	e064      	b.n	80036f2 <HAL_I2C_Mem_Read+0x552>
 8003628:	00010004 	.word	0x00010004
 800362c:	20000088 	.word	0x20000088
 8003630:	14f8b589 	.word	0x14f8b589
 8003634:	20000800 	.word	0x20000800
 8003638:	68fb      	ldr	r3, [r7, #12]
 800363a:	681b      	ldr	r3, [r3, #0]
 800363c:	691a      	ldr	r2, [r3, #16]
 800363e:	68fb      	ldr	r3, [r7, #12]
 8003640:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003642:	b2d2      	uxtb	r2, r2
 8003644:	701a      	strb	r2, [r3, #0]
 8003646:	68fb      	ldr	r3, [r7, #12]
 8003648:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800364a:	1c5a      	adds	r2, r3, #1
 800364c:	68fb      	ldr	r3, [r7, #12]
 800364e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003650:	68fb      	ldr	r3, [r7, #12]
 8003652:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003654:	3b01      	subs	r3, #1
 8003656:	b29a      	uxth	r2, r3
 8003658:	68fb      	ldr	r3, [r7, #12]
 800365a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800365c:	68fb      	ldr	r3, [r7, #12]
 800365e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003660:	b29b      	uxth	r3, r3
 8003662:	3b01      	subs	r3, #1
 8003664:	b29a      	uxth	r2, r3
 8003666:	68fb      	ldr	r3, [r7, #12]
 8003668:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800366a:	68fb      	ldr	r3, [r7, #12]
 800366c:	681b      	ldr	r3, [r3, #0]
 800366e:	695b      	ldr	r3, [r3, #20]
 8003670:	f003 0304 	and.w	r3, r3, #4
 8003674:	2b04      	cmp	r3, #4
 8003676:	d124      	bne.n	80036c2 <HAL_I2C_Mem_Read+0x522>
 8003678:	68fb      	ldr	r3, [r7, #12]
 800367a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800367c:	2b03      	cmp	r3, #3
 800367e:	d107      	bne.n	8003690 <HAL_I2C_Mem_Read+0x4f0>
 8003680:	68fb      	ldr	r3, [r7, #12]
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	681a      	ldr	r2, [r3, #0]
 8003686:	68fb      	ldr	r3, [r7, #12]
 8003688:	681b      	ldr	r3, [r3, #0]
 800368a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800368e:	601a      	str	r2, [r3, #0]
 8003690:	68fb      	ldr	r3, [r7, #12]
 8003692:	681b      	ldr	r3, [r3, #0]
 8003694:	691a      	ldr	r2, [r3, #16]
 8003696:	68fb      	ldr	r3, [r7, #12]
 8003698:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800369a:	b2d2      	uxtb	r2, r2
 800369c:	701a      	strb	r2, [r3, #0]
 800369e:	68fb      	ldr	r3, [r7, #12]
 80036a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036a2:	1c5a      	adds	r2, r3, #1
 80036a4:	68fb      	ldr	r3, [r7, #12]
 80036a6:	625a      	str	r2, [r3, #36]	@ 0x24
 80036a8:	68fb      	ldr	r3, [r7, #12]
 80036aa:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80036ac:	3b01      	subs	r3, #1
 80036ae:	b29a      	uxth	r2, r3
 80036b0:	68fb      	ldr	r3, [r7, #12]
 80036b2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80036b4:	68fb      	ldr	r3, [r7, #12]
 80036b6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80036b8:	b29b      	uxth	r3, r3
 80036ba:	3b01      	subs	r3, #1
 80036bc:	b29a      	uxth	r2, r3
 80036be:	68fb      	ldr	r3, [r7, #12]
 80036c0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80036c2:	68fb      	ldr	r3, [r7, #12]
 80036c4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80036c6:	2b00      	cmp	r3, #0
 80036c8:	f47f ae79 	bne.w	80033be <HAL_I2C_Mem_Read+0x21e>
 80036cc:	4b0b      	ldr	r3, [pc, #44]	@ (80036fc <HAL_I2C_Mem_Read+0x55c>)
 80036ce:	f240 225e 	movw	r2, #606	@ 0x25e
 80036d2:	601a      	str	r2, [r3, #0]
 80036d4:	68fb      	ldr	r3, [r7, #12]
 80036d6:	2220      	movs	r2, #32
 80036d8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80036dc:	68fb      	ldr	r3, [r7, #12]
 80036de:	2200      	movs	r2, #0
 80036e0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80036e4:	68fb      	ldr	r3, [r7, #12]
 80036e6:	2200      	movs	r2, #0
 80036e8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80036ec:	2300      	movs	r3, #0
 80036ee:	e000      	b.n	80036f2 <HAL_I2C_Mem_Read+0x552>
 80036f0:	2302      	movs	r3, #2
 80036f2:	4618      	mov	r0, r3
 80036f4:	3728      	adds	r7, #40	@ 0x28
 80036f6:	46bd      	mov	sp, r7
 80036f8:	bd80      	pop	{r7, pc}
 80036fa:	bf00      	nop
 80036fc:	20000800 	.word	0x20000800

08003700 <I2C_RequestMemoryWrite>:
 8003700:	b580      	push	{r7, lr}
 8003702:	b088      	sub	sp, #32
 8003704:	af02      	add	r7, sp, #8
 8003706:	60f8      	str	r0, [r7, #12]
 8003708:	4608      	mov	r0, r1
 800370a:	4611      	mov	r1, r2
 800370c:	461a      	mov	r2, r3
 800370e:	4603      	mov	r3, r0
 8003710:	817b      	strh	r3, [r7, #10]
 8003712:	460b      	mov	r3, r1
 8003714:	813b      	strh	r3, [r7, #8]
 8003716:	4613      	mov	r3, r2
 8003718:	80fb      	strh	r3, [r7, #6]
 800371a:	68fb      	ldr	r3, [r7, #12]
 800371c:	681b      	ldr	r3, [r3, #0]
 800371e:	681a      	ldr	r2, [r3, #0]
 8003720:	68fb      	ldr	r3, [r7, #12]
 8003722:	681b      	ldr	r3, [r3, #0]
 8003724:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003728:	601a      	str	r2, [r3, #0]
 800372a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800372c:	9300      	str	r3, [sp, #0]
 800372e:	6a3b      	ldr	r3, [r7, #32]
 8003730:	2200      	movs	r2, #0
 8003732:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003736:	68f8      	ldr	r0, [r7, #12]
 8003738:	f000 f960 	bl	80039fc <I2C_WaitOnFlagUntilTimeout>
 800373c:	4603      	mov	r3, r0
 800373e:	2b00      	cmp	r3, #0
 8003740:	d00d      	beq.n	800375e <I2C_RequestMemoryWrite+0x5e>
 8003742:	68fb      	ldr	r3, [r7, #12]
 8003744:	681b      	ldr	r3, [r3, #0]
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800374c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003750:	d103      	bne.n	800375a <I2C_RequestMemoryWrite+0x5a>
 8003752:	68fb      	ldr	r3, [r7, #12]
 8003754:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003758:	641a      	str	r2, [r3, #64]	@ 0x40
 800375a:	2303      	movs	r3, #3
 800375c:	e05f      	b.n	800381e <I2C_RequestMemoryWrite+0x11e>
 800375e:	897b      	ldrh	r3, [r7, #10]
 8003760:	b2db      	uxtb	r3, r3
 8003762:	461a      	mov	r2, r3
 8003764:	68fb      	ldr	r3, [r7, #12]
 8003766:	681b      	ldr	r3, [r3, #0]
 8003768:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 800376c:	611a      	str	r2, [r3, #16]
 800376e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003770:	6a3a      	ldr	r2, [r7, #32]
 8003772:	492d      	ldr	r1, [pc, #180]	@ (8003828 <I2C_RequestMemoryWrite+0x128>)
 8003774:	68f8      	ldr	r0, [r7, #12]
 8003776:	f000 f9bb 	bl	8003af0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800377a:	4603      	mov	r3, r0
 800377c:	2b00      	cmp	r3, #0
 800377e:	d001      	beq.n	8003784 <I2C_RequestMemoryWrite+0x84>
 8003780:	2301      	movs	r3, #1
 8003782:	e04c      	b.n	800381e <I2C_RequestMemoryWrite+0x11e>
 8003784:	2300      	movs	r3, #0
 8003786:	617b      	str	r3, [r7, #20]
 8003788:	68fb      	ldr	r3, [r7, #12]
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	695b      	ldr	r3, [r3, #20]
 800378e:	617b      	str	r3, [r7, #20]
 8003790:	68fb      	ldr	r3, [r7, #12]
 8003792:	681b      	ldr	r3, [r3, #0]
 8003794:	699b      	ldr	r3, [r3, #24]
 8003796:	617b      	str	r3, [r7, #20]
 8003798:	697b      	ldr	r3, [r7, #20]
 800379a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800379c:	6a39      	ldr	r1, [r7, #32]
 800379e:	68f8      	ldr	r0, [r7, #12]
 80037a0:	f000 fa46 	bl	8003c30 <I2C_WaitOnTXEFlagUntilTimeout>
 80037a4:	4603      	mov	r3, r0
 80037a6:	2b00      	cmp	r3, #0
 80037a8:	d00d      	beq.n	80037c6 <I2C_RequestMemoryWrite+0xc6>
 80037aa:	68fb      	ldr	r3, [r7, #12]
 80037ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80037ae:	2b04      	cmp	r3, #4
 80037b0:	d107      	bne.n	80037c2 <I2C_RequestMemoryWrite+0xc2>
 80037b2:	68fb      	ldr	r3, [r7, #12]
 80037b4:	681b      	ldr	r3, [r3, #0]
 80037b6:	681a      	ldr	r2, [r3, #0]
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	681b      	ldr	r3, [r3, #0]
 80037bc:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80037c0:	601a      	str	r2, [r3, #0]
 80037c2:	2301      	movs	r3, #1
 80037c4:	e02b      	b.n	800381e <I2C_RequestMemoryWrite+0x11e>
 80037c6:	88fb      	ldrh	r3, [r7, #6]
 80037c8:	2b01      	cmp	r3, #1
 80037ca:	d105      	bne.n	80037d8 <I2C_RequestMemoryWrite+0xd8>
 80037cc:	893b      	ldrh	r3, [r7, #8]
 80037ce:	b2da      	uxtb	r2, r3
 80037d0:	68fb      	ldr	r3, [r7, #12]
 80037d2:	681b      	ldr	r3, [r3, #0]
 80037d4:	611a      	str	r2, [r3, #16]
 80037d6:	e021      	b.n	800381c <I2C_RequestMemoryWrite+0x11c>
 80037d8:	893b      	ldrh	r3, [r7, #8]
 80037da:	0a1b      	lsrs	r3, r3, #8
 80037dc:	b29b      	uxth	r3, r3
 80037de:	b2da      	uxtb	r2, r3
 80037e0:	68fb      	ldr	r3, [r7, #12]
 80037e2:	681b      	ldr	r3, [r3, #0]
 80037e4:	611a      	str	r2, [r3, #16]
 80037e6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80037e8:	6a39      	ldr	r1, [r7, #32]
 80037ea:	68f8      	ldr	r0, [r7, #12]
 80037ec:	f000 fa20 	bl	8003c30 <I2C_WaitOnTXEFlagUntilTimeout>
 80037f0:	4603      	mov	r3, r0
 80037f2:	2b00      	cmp	r3, #0
 80037f4:	d00d      	beq.n	8003812 <I2C_RequestMemoryWrite+0x112>
 80037f6:	68fb      	ldr	r3, [r7, #12]
 80037f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80037fa:	2b04      	cmp	r3, #4
 80037fc:	d107      	bne.n	800380e <I2C_RequestMemoryWrite+0x10e>
 80037fe:	68fb      	ldr	r3, [r7, #12]
 8003800:	681b      	ldr	r3, [r3, #0]
 8003802:	681a      	ldr	r2, [r3, #0]
 8003804:	68fb      	ldr	r3, [r7, #12]
 8003806:	681b      	ldr	r3, [r3, #0]
 8003808:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800380c:	601a      	str	r2, [r3, #0]
 800380e:	2301      	movs	r3, #1
 8003810:	e005      	b.n	800381e <I2C_RequestMemoryWrite+0x11e>
 8003812:	893b      	ldrh	r3, [r7, #8]
 8003814:	b2da      	uxtb	r2, r3
 8003816:	68fb      	ldr	r3, [r7, #12]
 8003818:	681b      	ldr	r3, [r3, #0]
 800381a:	611a      	str	r2, [r3, #16]
 800381c:	2300      	movs	r3, #0
 800381e:	4618      	mov	r0, r3
 8003820:	3718      	adds	r7, #24
 8003822:	46bd      	mov	sp, r7
 8003824:	bd80      	pop	{r7, pc}
 8003826:	bf00      	nop
 8003828:	00010002 	.word	0x00010002

0800382c <I2C_RequestMemoryRead>:
 800382c:	b580      	push	{r7, lr}
 800382e:	b088      	sub	sp, #32
 8003830:	af02      	add	r7, sp, #8
 8003832:	60f8      	str	r0, [r7, #12]
 8003834:	4608      	mov	r0, r1
 8003836:	4611      	mov	r1, r2
 8003838:	461a      	mov	r2, r3
 800383a:	4603      	mov	r3, r0
 800383c:	817b      	strh	r3, [r7, #10]
 800383e:	460b      	mov	r3, r1
 8003840:	813b      	strh	r3, [r7, #8]
 8003842:	4613      	mov	r3, r2
 8003844:	80fb      	strh	r3, [r7, #6]
 8003846:	68fb      	ldr	r3, [r7, #12]
 8003848:	681b      	ldr	r3, [r3, #0]
 800384a:	681a      	ldr	r2, [r3, #0]
 800384c:	68fb      	ldr	r3, [r7, #12]
 800384e:	681b      	ldr	r3, [r3, #0]
 8003850:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003854:	601a      	str	r2, [r3, #0]
 8003856:	68fb      	ldr	r3, [r7, #12]
 8003858:	681b      	ldr	r3, [r3, #0]
 800385a:	681a      	ldr	r2, [r3, #0]
 800385c:	68fb      	ldr	r3, [r7, #12]
 800385e:	681b      	ldr	r3, [r3, #0]
 8003860:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003864:	601a      	str	r2, [r3, #0]
 8003866:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003868:	9300      	str	r3, [sp, #0]
 800386a:	6a3b      	ldr	r3, [r7, #32]
 800386c:	2200      	movs	r2, #0
 800386e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003872:	68f8      	ldr	r0, [r7, #12]
 8003874:	f000 f8c2 	bl	80039fc <I2C_WaitOnFlagUntilTimeout>
 8003878:	4603      	mov	r3, r0
 800387a:	2b00      	cmp	r3, #0
 800387c:	d00d      	beq.n	800389a <I2C_RequestMemoryRead+0x6e>
 800387e:	68fb      	ldr	r3, [r7, #12]
 8003880:	681b      	ldr	r3, [r3, #0]
 8003882:	681b      	ldr	r3, [r3, #0]
 8003884:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003888:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800388c:	d103      	bne.n	8003896 <I2C_RequestMemoryRead+0x6a>
 800388e:	68fb      	ldr	r3, [r7, #12]
 8003890:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003894:	641a      	str	r2, [r3, #64]	@ 0x40
 8003896:	2303      	movs	r3, #3
 8003898:	e0aa      	b.n	80039f0 <I2C_RequestMemoryRead+0x1c4>
 800389a:	897b      	ldrh	r3, [r7, #10]
 800389c:	b2db      	uxtb	r3, r3
 800389e:	461a      	mov	r2, r3
 80038a0:	68fb      	ldr	r3, [r7, #12]
 80038a2:	681b      	ldr	r3, [r3, #0]
 80038a4:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 80038a8:	611a      	str	r2, [r3, #16]
 80038aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80038ac:	6a3a      	ldr	r2, [r7, #32]
 80038ae:	4952      	ldr	r1, [pc, #328]	@ (80039f8 <I2C_RequestMemoryRead+0x1cc>)
 80038b0:	68f8      	ldr	r0, [r7, #12]
 80038b2:	f000 f91d 	bl	8003af0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80038b6:	4603      	mov	r3, r0
 80038b8:	2b00      	cmp	r3, #0
 80038ba:	d001      	beq.n	80038c0 <I2C_RequestMemoryRead+0x94>
 80038bc:	2301      	movs	r3, #1
 80038be:	e097      	b.n	80039f0 <I2C_RequestMemoryRead+0x1c4>
 80038c0:	2300      	movs	r3, #0
 80038c2:	617b      	str	r3, [r7, #20]
 80038c4:	68fb      	ldr	r3, [r7, #12]
 80038c6:	681b      	ldr	r3, [r3, #0]
 80038c8:	695b      	ldr	r3, [r3, #20]
 80038ca:	617b      	str	r3, [r7, #20]
 80038cc:	68fb      	ldr	r3, [r7, #12]
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	699b      	ldr	r3, [r3, #24]
 80038d2:	617b      	str	r3, [r7, #20]
 80038d4:	697b      	ldr	r3, [r7, #20]
 80038d6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80038d8:	6a39      	ldr	r1, [r7, #32]
 80038da:	68f8      	ldr	r0, [r7, #12]
 80038dc:	f000 f9a8 	bl	8003c30 <I2C_WaitOnTXEFlagUntilTimeout>
 80038e0:	4603      	mov	r3, r0
 80038e2:	2b00      	cmp	r3, #0
 80038e4:	d00d      	beq.n	8003902 <I2C_RequestMemoryRead+0xd6>
 80038e6:	68fb      	ldr	r3, [r7, #12]
 80038e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80038ea:	2b04      	cmp	r3, #4
 80038ec:	d107      	bne.n	80038fe <I2C_RequestMemoryRead+0xd2>
 80038ee:	68fb      	ldr	r3, [r7, #12]
 80038f0:	681b      	ldr	r3, [r3, #0]
 80038f2:	681a      	ldr	r2, [r3, #0]
 80038f4:	68fb      	ldr	r3, [r7, #12]
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80038fc:	601a      	str	r2, [r3, #0]
 80038fe:	2301      	movs	r3, #1
 8003900:	e076      	b.n	80039f0 <I2C_RequestMemoryRead+0x1c4>
 8003902:	88fb      	ldrh	r3, [r7, #6]
 8003904:	2b01      	cmp	r3, #1
 8003906:	d105      	bne.n	8003914 <I2C_RequestMemoryRead+0xe8>
 8003908:	893b      	ldrh	r3, [r7, #8]
 800390a:	b2da      	uxtb	r2, r3
 800390c:	68fb      	ldr	r3, [r7, #12]
 800390e:	681b      	ldr	r3, [r3, #0]
 8003910:	611a      	str	r2, [r3, #16]
 8003912:	e021      	b.n	8003958 <I2C_RequestMemoryRead+0x12c>
 8003914:	893b      	ldrh	r3, [r7, #8]
 8003916:	0a1b      	lsrs	r3, r3, #8
 8003918:	b29b      	uxth	r3, r3
 800391a:	b2da      	uxtb	r2, r3
 800391c:	68fb      	ldr	r3, [r7, #12]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	611a      	str	r2, [r3, #16]
 8003922:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003924:	6a39      	ldr	r1, [r7, #32]
 8003926:	68f8      	ldr	r0, [r7, #12]
 8003928:	f000 f982 	bl	8003c30 <I2C_WaitOnTXEFlagUntilTimeout>
 800392c:	4603      	mov	r3, r0
 800392e:	2b00      	cmp	r3, #0
 8003930:	d00d      	beq.n	800394e <I2C_RequestMemoryRead+0x122>
 8003932:	68fb      	ldr	r3, [r7, #12]
 8003934:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003936:	2b04      	cmp	r3, #4
 8003938:	d107      	bne.n	800394a <I2C_RequestMemoryRead+0x11e>
 800393a:	68fb      	ldr	r3, [r7, #12]
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	681a      	ldr	r2, [r3, #0]
 8003940:	68fb      	ldr	r3, [r7, #12]
 8003942:	681b      	ldr	r3, [r3, #0]
 8003944:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003948:	601a      	str	r2, [r3, #0]
 800394a:	2301      	movs	r3, #1
 800394c:	e050      	b.n	80039f0 <I2C_RequestMemoryRead+0x1c4>
 800394e:	893b      	ldrh	r3, [r7, #8]
 8003950:	b2da      	uxtb	r2, r3
 8003952:	68fb      	ldr	r3, [r7, #12]
 8003954:	681b      	ldr	r3, [r3, #0]
 8003956:	611a      	str	r2, [r3, #16]
 8003958:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800395a:	6a39      	ldr	r1, [r7, #32]
 800395c:	68f8      	ldr	r0, [r7, #12]
 800395e:	f000 f967 	bl	8003c30 <I2C_WaitOnTXEFlagUntilTimeout>
 8003962:	4603      	mov	r3, r0
 8003964:	2b00      	cmp	r3, #0
 8003966:	d00d      	beq.n	8003984 <I2C_RequestMemoryRead+0x158>
 8003968:	68fb      	ldr	r3, [r7, #12]
 800396a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800396c:	2b04      	cmp	r3, #4
 800396e:	d107      	bne.n	8003980 <I2C_RequestMemoryRead+0x154>
 8003970:	68fb      	ldr	r3, [r7, #12]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	681a      	ldr	r2, [r3, #0]
 8003976:	68fb      	ldr	r3, [r7, #12]
 8003978:	681b      	ldr	r3, [r3, #0]
 800397a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800397e:	601a      	str	r2, [r3, #0]
 8003980:	2301      	movs	r3, #1
 8003982:	e035      	b.n	80039f0 <I2C_RequestMemoryRead+0x1c4>
 8003984:	68fb      	ldr	r3, [r7, #12]
 8003986:	681b      	ldr	r3, [r3, #0]
 8003988:	681a      	ldr	r2, [r3, #0]
 800398a:	68fb      	ldr	r3, [r7, #12]
 800398c:	681b      	ldr	r3, [r3, #0]
 800398e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003992:	601a      	str	r2, [r3, #0]
 8003994:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003996:	9300      	str	r3, [sp, #0]
 8003998:	6a3b      	ldr	r3, [r7, #32]
 800399a:	2200      	movs	r2, #0
 800399c:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80039a0:	68f8      	ldr	r0, [r7, #12]
 80039a2:	f000 f82b 	bl	80039fc <I2C_WaitOnFlagUntilTimeout>
 80039a6:	4603      	mov	r3, r0
 80039a8:	2b00      	cmp	r3, #0
 80039aa:	d00d      	beq.n	80039c8 <I2C_RequestMemoryRead+0x19c>
 80039ac:	68fb      	ldr	r3, [r7, #12]
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	681b      	ldr	r3, [r3, #0]
 80039b2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80039b6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80039ba:	d103      	bne.n	80039c4 <I2C_RequestMemoryRead+0x198>
 80039bc:	68fb      	ldr	r3, [r7, #12]
 80039be:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80039c2:	641a      	str	r2, [r3, #64]	@ 0x40
 80039c4:	2303      	movs	r3, #3
 80039c6:	e013      	b.n	80039f0 <I2C_RequestMemoryRead+0x1c4>
 80039c8:	897b      	ldrh	r3, [r7, #10]
 80039ca:	b2db      	uxtb	r3, r3
 80039cc:	f043 0301 	orr.w	r3, r3, #1
 80039d0:	b2da      	uxtb	r2, r3
 80039d2:	68fb      	ldr	r3, [r7, #12]
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	611a      	str	r2, [r3, #16]
 80039d8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80039da:	6a3a      	ldr	r2, [r7, #32]
 80039dc:	4906      	ldr	r1, [pc, #24]	@ (80039f8 <I2C_RequestMemoryRead+0x1cc>)
 80039de:	68f8      	ldr	r0, [r7, #12]
 80039e0:	f000 f886 	bl	8003af0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80039e4:	4603      	mov	r3, r0
 80039e6:	2b00      	cmp	r3, #0
 80039e8:	d001      	beq.n	80039ee <I2C_RequestMemoryRead+0x1c2>
 80039ea:	2301      	movs	r3, #1
 80039ec:	e000      	b.n	80039f0 <I2C_RequestMemoryRead+0x1c4>
 80039ee:	2300      	movs	r3, #0
 80039f0:	4618      	mov	r0, r3
 80039f2:	3718      	adds	r7, #24
 80039f4:	46bd      	mov	sp, r7
 80039f6:	bd80      	pop	{r7, pc}
 80039f8:	00010002 	.word	0x00010002

080039fc <I2C_WaitOnFlagUntilTimeout>:
 80039fc:	b580      	push	{r7, lr}
 80039fe:	b084      	sub	sp, #16
 8003a00:	af00      	add	r7, sp, #0
 8003a02:	60f8      	str	r0, [r7, #12]
 8003a04:	60b9      	str	r1, [r7, #8]
 8003a06:	603b      	str	r3, [r7, #0]
 8003a08:	4613      	mov	r3, r2
 8003a0a:	71fb      	strb	r3, [r7, #7]
 8003a0c:	e048      	b.n	8003aa0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003a0e:	683b      	ldr	r3, [r7, #0]
 8003a10:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003a14:	d044      	beq.n	8003aa0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003a16:	f7fe fedf 	bl	80027d8 <HAL_GetTick>
 8003a1a:	4602      	mov	r2, r0
 8003a1c:	69bb      	ldr	r3, [r7, #24]
 8003a1e:	1ad3      	subs	r3, r2, r3
 8003a20:	683a      	ldr	r2, [r7, #0]
 8003a22:	429a      	cmp	r2, r3
 8003a24:	d302      	bcc.n	8003a2c <I2C_WaitOnFlagUntilTimeout+0x30>
 8003a26:	683b      	ldr	r3, [r7, #0]
 8003a28:	2b00      	cmp	r3, #0
 8003a2a:	d139      	bne.n	8003aa0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003a2c:	68bb      	ldr	r3, [r7, #8]
 8003a2e:	0c1b      	lsrs	r3, r3, #16
 8003a30:	b2db      	uxtb	r3, r3
 8003a32:	2b01      	cmp	r3, #1
 8003a34:	d10d      	bne.n	8003a52 <I2C_WaitOnFlagUntilTimeout+0x56>
 8003a36:	68fb      	ldr	r3, [r7, #12]
 8003a38:	681b      	ldr	r3, [r3, #0]
 8003a3a:	695b      	ldr	r3, [r3, #20]
 8003a3c:	43da      	mvns	r2, r3
 8003a3e:	68bb      	ldr	r3, [r7, #8]
 8003a40:	4013      	ands	r3, r2
 8003a42:	b29b      	uxth	r3, r3
 8003a44:	2b00      	cmp	r3, #0
 8003a46:	bf0c      	ite	eq
 8003a48:	2301      	moveq	r3, #1
 8003a4a:	2300      	movne	r3, #0
 8003a4c:	b2db      	uxtb	r3, r3
 8003a4e:	461a      	mov	r2, r3
 8003a50:	e00c      	b.n	8003a6c <I2C_WaitOnFlagUntilTimeout+0x70>
 8003a52:	68fb      	ldr	r3, [r7, #12]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	699b      	ldr	r3, [r3, #24]
 8003a58:	43da      	mvns	r2, r3
 8003a5a:	68bb      	ldr	r3, [r7, #8]
 8003a5c:	4013      	ands	r3, r2
 8003a5e:	b29b      	uxth	r3, r3
 8003a60:	2b00      	cmp	r3, #0
 8003a62:	bf0c      	ite	eq
 8003a64:	2301      	moveq	r3, #1
 8003a66:	2300      	movne	r3, #0
 8003a68:	b2db      	uxtb	r3, r3
 8003a6a:	461a      	mov	r2, r3
 8003a6c:	79fb      	ldrb	r3, [r7, #7]
 8003a6e:	429a      	cmp	r2, r3
 8003a70:	d116      	bne.n	8003aa0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003a72:	68fb      	ldr	r3, [r7, #12]
 8003a74:	2200      	movs	r2, #0
 8003a76:	631a      	str	r2, [r3, #48]	@ 0x30
 8003a78:	68fb      	ldr	r3, [r7, #12]
 8003a7a:	2220      	movs	r2, #32
 8003a7c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003a80:	68fb      	ldr	r3, [r7, #12]
 8003a82:	2200      	movs	r2, #0
 8003a84:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003a88:	68fb      	ldr	r3, [r7, #12]
 8003a8a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a8c:	f043 0220 	orr.w	r2, r3, #32
 8003a90:	68fb      	ldr	r3, [r7, #12]
 8003a92:	641a      	str	r2, [r3, #64]	@ 0x40
 8003a94:	68fb      	ldr	r3, [r7, #12]
 8003a96:	2200      	movs	r2, #0
 8003a98:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003a9c:	2301      	movs	r3, #1
 8003a9e:	e023      	b.n	8003ae8 <I2C_WaitOnFlagUntilTimeout+0xec>
 8003aa0:	68bb      	ldr	r3, [r7, #8]
 8003aa2:	0c1b      	lsrs	r3, r3, #16
 8003aa4:	b2db      	uxtb	r3, r3
 8003aa6:	2b01      	cmp	r3, #1
 8003aa8:	d10d      	bne.n	8003ac6 <I2C_WaitOnFlagUntilTimeout+0xca>
 8003aaa:	68fb      	ldr	r3, [r7, #12]
 8003aac:	681b      	ldr	r3, [r3, #0]
 8003aae:	695b      	ldr	r3, [r3, #20]
 8003ab0:	43da      	mvns	r2, r3
 8003ab2:	68bb      	ldr	r3, [r7, #8]
 8003ab4:	4013      	ands	r3, r2
 8003ab6:	b29b      	uxth	r3, r3
 8003ab8:	2b00      	cmp	r3, #0
 8003aba:	bf0c      	ite	eq
 8003abc:	2301      	moveq	r3, #1
 8003abe:	2300      	movne	r3, #0
 8003ac0:	b2db      	uxtb	r3, r3
 8003ac2:	461a      	mov	r2, r3
 8003ac4:	e00c      	b.n	8003ae0 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8003ac6:	68fb      	ldr	r3, [r7, #12]
 8003ac8:	681b      	ldr	r3, [r3, #0]
 8003aca:	699b      	ldr	r3, [r3, #24]
 8003acc:	43da      	mvns	r2, r3
 8003ace:	68bb      	ldr	r3, [r7, #8]
 8003ad0:	4013      	ands	r3, r2
 8003ad2:	b29b      	uxth	r3, r3
 8003ad4:	2b00      	cmp	r3, #0
 8003ad6:	bf0c      	ite	eq
 8003ad8:	2301      	moveq	r3, #1
 8003ada:	2300      	movne	r3, #0
 8003adc:	b2db      	uxtb	r3, r3
 8003ade:	461a      	mov	r2, r3
 8003ae0:	79fb      	ldrb	r3, [r7, #7]
 8003ae2:	429a      	cmp	r2, r3
 8003ae4:	d093      	beq.n	8003a0e <I2C_WaitOnFlagUntilTimeout+0x12>
 8003ae6:	2300      	movs	r3, #0
 8003ae8:	4618      	mov	r0, r3
 8003aea:	3710      	adds	r7, #16
 8003aec:	46bd      	mov	sp, r7
 8003aee:	bd80      	pop	{r7, pc}

08003af0 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8003af0:	b580      	push	{r7, lr}
 8003af2:	b084      	sub	sp, #16
 8003af4:	af00      	add	r7, sp, #0
 8003af6:	60f8      	str	r0, [r7, #12]
 8003af8:	60b9      	str	r1, [r7, #8]
 8003afa:	607a      	str	r2, [r7, #4]
 8003afc:	603b      	str	r3, [r7, #0]
 8003afe:	e071      	b.n	8003be4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003b00:	68fb      	ldr	r3, [r7, #12]
 8003b02:	681b      	ldr	r3, [r3, #0]
 8003b04:	695b      	ldr	r3, [r3, #20]
 8003b06:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003b0a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003b0e:	d123      	bne.n	8003b58 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8003b10:	68fb      	ldr	r3, [r7, #12]
 8003b12:	681b      	ldr	r3, [r3, #0]
 8003b14:	681a      	ldr	r2, [r3, #0]
 8003b16:	68fb      	ldr	r3, [r7, #12]
 8003b18:	681b      	ldr	r3, [r3, #0]
 8003b1a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003b1e:	601a      	str	r2, [r3, #0]
 8003b20:	68fb      	ldr	r3, [r7, #12]
 8003b22:	681b      	ldr	r3, [r3, #0]
 8003b24:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8003b28:	615a      	str	r2, [r3, #20]
 8003b2a:	68fb      	ldr	r3, [r7, #12]
 8003b2c:	2200      	movs	r2, #0
 8003b2e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003b30:	68fb      	ldr	r3, [r7, #12]
 8003b32:	2220      	movs	r2, #32
 8003b34:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003b38:	68fb      	ldr	r3, [r7, #12]
 8003b3a:	2200      	movs	r2, #0
 8003b3c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003b40:	68fb      	ldr	r3, [r7, #12]
 8003b42:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b44:	f043 0204 	orr.w	r2, r3, #4
 8003b48:	68fb      	ldr	r3, [r7, #12]
 8003b4a:	641a      	str	r2, [r3, #64]	@ 0x40
 8003b4c:	68fb      	ldr	r3, [r7, #12]
 8003b4e:	2200      	movs	r2, #0
 8003b50:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003b54:	2301      	movs	r3, #1
 8003b56:	e067      	b.n	8003c28 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003b58:	687b      	ldr	r3, [r7, #4]
 8003b5a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003b5e:	d041      	beq.n	8003be4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003b60:	f7fe fe3a 	bl	80027d8 <HAL_GetTick>
 8003b64:	4602      	mov	r2, r0
 8003b66:	683b      	ldr	r3, [r7, #0]
 8003b68:	1ad3      	subs	r3, r2, r3
 8003b6a:	687a      	ldr	r2, [r7, #4]
 8003b6c:	429a      	cmp	r2, r3
 8003b6e:	d302      	bcc.n	8003b76 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	2b00      	cmp	r3, #0
 8003b74:	d136      	bne.n	8003be4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003b76:	68bb      	ldr	r3, [r7, #8]
 8003b78:	0c1b      	lsrs	r3, r3, #16
 8003b7a:	b2db      	uxtb	r3, r3
 8003b7c:	2b01      	cmp	r3, #1
 8003b7e:	d10c      	bne.n	8003b9a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8003b80:	68fb      	ldr	r3, [r7, #12]
 8003b82:	681b      	ldr	r3, [r3, #0]
 8003b84:	695b      	ldr	r3, [r3, #20]
 8003b86:	43da      	mvns	r2, r3
 8003b88:	68bb      	ldr	r3, [r7, #8]
 8003b8a:	4013      	ands	r3, r2
 8003b8c:	b29b      	uxth	r3, r3
 8003b8e:	2b00      	cmp	r3, #0
 8003b90:	bf14      	ite	ne
 8003b92:	2301      	movne	r3, #1
 8003b94:	2300      	moveq	r3, #0
 8003b96:	b2db      	uxtb	r3, r3
 8003b98:	e00b      	b.n	8003bb2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8003b9a:	68fb      	ldr	r3, [r7, #12]
 8003b9c:	681b      	ldr	r3, [r3, #0]
 8003b9e:	699b      	ldr	r3, [r3, #24]
 8003ba0:	43da      	mvns	r2, r3
 8003ba2:	68bb      	ldr	r3, [r7, #8]
 8003ba4:	4013      	ands	r3, r2
 8003ba6:	b29b      	uxth	r3, r3
 8003ba8:	2b00      	cmp	r3, #0
 8003baa:	bf14      	ite	ne
 8003bac:	2301      	movne	r3, #1
 8003bae:	2300      	moveq	r3, #0
 8003bb0:	b2db      	uxtb	r3, r3
 8003bb2:	2b00      	cmp	r3, #0
 8003bb4:	d016      	beq.n	8003be4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003bb6:	68fb      	ldr	r3, [r7, #12]
 8003bb8:	2200      	movs	r2, #0
 8003bba:	631a      	str	r2, [r3, #48]	@ 0x30
 8003bbc:	68fb      	ldr	r3, [r7, #12]
 8003bbe:	2220      	movs	r2, #32
 8003bc0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003bc4:	68fb      	ldr	r3, [r7, #12]
 8003bc6:	2200      	movs	r2, #0
 8003bc8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003bcc:	68fb      	ldr	r3, [r7, #12]
 8003bce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003bd0:	f043 0220 	orr.w	r2, r3, #32
 8003bd4:	68fb      	ldr	r3, [r7, #12]
 8003bd6:	641a      	str	r2, [r3, #64]	@ 0x40
 8003bd8:	68fb      	ldr	r3, [r7, #12]
 8003bda:	2200      	movs	r2, #0
 8003bdc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003be0:	2301      	movs	r3, #1
 8003be2:	e021      	b.n	8003c28 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003be4:	68bb      	ldr	r3, [r7, #8]
 8003be6:	0c1b      	lsrs	r3, r3, #16
 8003be8:	b2db      	uxtb	r3, r3
 8003bea:	2b01      	cmp	r3, #1
 8003bec:	d10c      	bne.n	8003c08 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8003bee:	68fb      	ldr	r3, [r7, #12]
 8003bf0:	681b      	ldr	r3, [r3, #0]
 8003bf2:	695b      	ldr	r3, [r3, #20]
 8003bf4:	43da      	mvns	r2, r3
 8003bf6:	68bb      	ldr	r3, [r7, #8]
 8003bf8:	4013      	ands	r3, r2
 8003bfa:	b29b      	uxth	r3, r3
 8003bfc:	2b00      	cmp	r3, #0
 8003bfe:	bf14      	ite	ne
 8003c00:	2301      	movne	r3, #1
 8003c02:	2300      	moveq	r3, #0
 8003c04:	b2db      	uxtb	r3, r3
 8003c06:	e00b      	b.n	8003c20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8003c08:	68fb      	ldr	r3, [r7, #12]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	699b      	ldr	r3, [r3, #24]
 8003c0e:	43da      	mvns	r2, r3
 8003c10:	68bb      	ldr	r3, [r7, #8]
 8003c12:	4013      	ands	r3, r2
 8003c14:	b29b      	uxth	r3, r3
 8003c16:	2b00      	cmp	r3, #0
 8003c18:	bf14      	ite	ne
 8003c1a:	2301      	movne	r3, #1
 8003c1c:	2300      	moveq	r3, #0
 8003c1e:	b2db      	uxtb	r3, r3
 8003c20:	2b00      	cmp	r3, #0
 8003c22:	f47f af6d 	bne.w	8003b00 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8003c26:	2300      	movs	r3, #0
 8003c28:	4618      	mov	r0, r3
 8003c2a:	3710      	adds	r7, #16
 8003c2c:	46bd      	mov	sp, r7
 8003c2e:	bd80      	pop	{r7, pc}

08003c30 <I2C_WaitOnTXEFlagUntilTimeout>:
 8003c30:	b580      	push	{r7, lr}
 8003c32:	b084      	sub	sp, #16
 8003c34:	af00      	add	r7, sp, #0
 8003c36:	60f8      	str	r0, [r7, #12]
 8003c38:	60b9      	str	r1, [r7, #8]
 8003c3a:	607a      	str	r2, [r7, #4]
 8003c3c:	e034      	b.n	8003ca8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003c3e:	68f8      	ldr	r0, [r7, #12]
 8003c40:	f000 f8e3 	bl	8003e0a <I2C_IsAcknowledgeFailed>
 8003c44:	4603      	mov	r3, r0
 8003c46:	2b00      	cmp	r3, #0
 8003c48:	d001      	beq.n	8003c4e <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8003c4a:	2301      	movs	r3, #1
 8003c4c:	e034      	b.n	8003cb8 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003c4e:	68bb      	ldr	r3, [r7, #8]
 8003c50:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003c54:	d028      	beq.n	8003ca8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003c56:	f7fe fdbf 	bl	80027d8 <HAL_GetTick>
 8003c5a:	4602      	mov	r2, r0
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	1ad3      	subs	r3, r2, r3
 8003c60:	68ba      	ldr	r2, [r7, #8]
 8003c62:	429a      	cmp	r2, r3
 8003c64:	d302      	bcc.n	8003c6c <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8003c66:	68bb      	ldr	r3, [r7, #8]
 8003c68:	2b00      	cmp	r3, #0
 8003c6a:	d11d      	bne.n	8003ca8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003c6c:	68fb      	ldr	r3, [r7, #12]
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	695b      	ldr	r3, [r3, #20]
 8003c72:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003c76:	2b80      	cmp	r3, #128	@ 0x80
 8003c78:	d016      	beq.n	8003ca8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003c7a:	68fb      	ldr	r3, [r7, #12]
 8003c7c:	2200      	movs	r2, #0
 8003c7e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003c80:	68fb      	ldr	r3, [r7, #12]
 8003c82:	2220      	movs	r2, #32
 8003c84:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003c88:	68fb      	ldr	r3, [r7, #12]
 8003c8a:	2200      	movs	r2, #0
 8003c8c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003c90:	68fb      	ldr	r3, [r7, #12]
 8003c92:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c94:	f043 0220 	orr.w	r2, r3, #32
 8003c98:	68fb      	ldr	r3, [r7, #12]
 8003c9a:	641a      	str	r2, [r3, #64]	@ 0x40
 8003c9c:	68fb      	ldr	r3, [r7, #12]
 8003c9e:	2200      	movs	r2, #0
 8003ca0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003ca4:	2301      	movs	r3, #1
 8003ca6:	e007      	b.n	8003cb8 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003ca8:	68fb      	ldr	r3, [r7, #12]
 8003caa:	681b      	ldr	r3, [r3, #0]
 8003cac:	695b      	ldr	r3, [r3, #20]
 8003cae:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003cb2:	2b80      	cmp	r3, #128	@ 0x80
 8003cb4:	d1c3      	bne.n	8003c3e <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8003cb6:	2300      	movs	r3, #0
 8003cb8:	4618      	mov	r0, r3
 8003cba:	3710      	adds	r7, #16
 8003cbc:	46bd      	mov	sp, r7
 8003cbe:	bd80      	pop	{r7, pc}

08003cc0 <I2C_WaitOnBTFFlagUntilTimeout>:
 8003cc0:	b580      	push	{r7, lr}
 8003cc2:	b084      	sub	sp, #16
 8003cc4:	af00      	add	r7, sp, #0
 8003cc6:	60f8      	str	r0, [r7, #12]
 8003cc8:	60b9      	str	r1, [r7, #8]
 8003cca:	607a      	str	r2, [r7, #4]
 8003ccc:	e034      	b.n	8003d38 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003cce:	68f8      	ldr	r0, [r7, #12]
 8003cd0:	f000 f89b 	bl	8003e0a <I2C_IsAcknowledgeFailed>
 8003cd4:	4603      	mov	r3, r0
 8003cd6:	2b00      	cmp	r3, #0
 8003cd8:	d001      	beq.n	8003cde <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8003cda:	2301      	movs	r3, #1
 8003cdc:	e034      	b.n	8003d48 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8003cde:	68bb      	ldr	r3, [r7, #8]
 8003ce0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003ce4:	d028      	beq.n	8003d38 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003ce6:	f7fe fd77 	bl	80027d8 <HAL_GetTick>
 8003cea:	4602      	mov	r2, r0
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	1ad3      	subs	r3, r2, r3
 8003cf0:	68ba      	ldr	r2, [r7, #8]
 8003cf2:	429a      	cmp	r2, r3
 8003cf4:	d302      	bcc.n	8003cfc <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8003cf6:	68bb      	ldr	r3, [r7, #8]
 8003cf8:	2b00      	cmp	r3, #0
 8003cfa:	d11d      	bne.n	8003d38 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003cfc:	68fb      	ldr	r3, [r7, #12]
 8003cfe:	681b      	ldr	r3, [r3, #0]
 8003d00:	695b      	ldr	r3, [r3, #20]
 8003d02:	f003 0304 	and.w	r3, r3, #4
 8003d06:	2b04      	cmp	r3, #4
 8003d08:	d016      	beq.n	8003d38 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003d0a:	68fb      	ldr	r3, [r7, #12]
 8003d0c:	2200      	movs	r2, #0
 8003d0e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003d10:	68fb      	ldr	r3, [r7, #12]
 8003d12:	2220      	movs	r2, #32
 8003d14:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003d18:	68fb      	ldr	r3, [r7, #12]
 8003d1a:	2200      	movs	r2, #0
 8003d1c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003d20:	68fb      	ldr	r3, [r7, #12]
 8003d22:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003d24:	f043 0220 	orr.w	r2, r3, #32
 8003d28:	68fb      	ldr	r3, [r7, #12]
 8003d2a:	641a      	str	r2, [r3, #64]	@ 0x40
 8003d2c:	68fb      	ldr	r3, [r7, #12]
 8003d2e:	2200      	movs	r2, #0
 8003d30:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003d34:	2301      	movs	r3, #1
 8003d36:	e007      	b.n	8003d48 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8003d38:	68fb      	ldr	r3, [r7, #12]
 8003d3a:	681b      	ldr	r3, [r3, #0]
 8003d3c:	695b      	ldr	r3, [r3, #20]
 8003d3e:	f003 0304 	and.w	r3, r3, #4
 8003d42:	2b04      	cmp	r3, #4
 8003d44:	d1c3      	bne.n	8003cce <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8003d46:	2300      	movs	r3, #0
 8003d48:	4618      	mov	r0, r3
 8003d4a:	3710      	adds	r7, #16
 8003d4c:	46bd      	mov	sp, r7
 8003d4e:	bd80      	pop	{r7, pc}

08003d50 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8003d50:	b580      	push	{r7, lr}
 8003d52:	b084      	sub	sp, #16
 8003d54:	af00      	add	r7, sp, #0
 8003d56:	60f8      	str	r0, [r7, #12]
 8003d58:	60b9      	str	r1, [r7, #8]
 8003d5a:	607a      	str	r2, [r7, #4]
 8003d5c:	e049      	b.n	8003df2 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003d5e:	68fb      	ldr	r3, [r7, #12]
 8003d60:	681b      	ldr	r3, [r3, #0]
 8003d62:	695b      	ldr	r3, [r3, #20]
 8003d64:	f003 0310 	and.w	r3, r3, #16
 8003d68:	2b10      	cmp	r3, #16
 8003d6a:	d119      	bne.n	8003da0 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8003d6c:	68fb      	ldr	r3, [r7, #12]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	f06f 0210 	mvn.w	r2, #16
 8003d74:	615a      	str	r2, [r3, #20]
 8003d76:	68fb      	ldr	r3, [r7, #12]
 8003d78:	2200      	movs	r2, #0
 8003d7a:	631a      	str	r2, [r3, #48]	@ 0x30
 8003d7c:	68fb      	ldr	r3, [r7, #12]
 8003d7e:	2220      	movs	r2, #32
 8003d80:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003d84:	68fb      	ldr	r3, [r7, #12]
 8003d86:	2200      	movs	r2, #0
 8003d88:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003d8c:	68fb      	ldr	r3, [r7, #12]
 8003d8e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8003d90:	68fb      	ldr	r3, [r7, #12]
 8003d92:	641a      	str	r2, [r3, #64]	@ 0x40
 8003d94:	68fb      	ldr	r3, [r7, #12]
 8003d96:	2200      	movs	r2, #0
 8003d98:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003d9c:	2301      	movs	r3, #1
 8003d9e:	e030      	b.n	8003e02 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8003da0:	f7fe fd1a 	bl	80027d8 <HAL_GetTick>
 8003da4:	4602      	mov	r2, r0
 8003da6:	687b      	ldr	r3, [r7, #4]
 8003da8:	1ad3      	subs	r3, r2, r3
 8003daa:	68ba      	ldr	r2, [r7, #8]
 8003dac:	429a      	cmp	r2, r3
 8003dae:	d302      	bcc.n	8003db6 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8003db0:	68bb      	ldr	r3, [r7, #8]
 8003db2:	2b00      	cmp	r3, #0
 8003db4:	d11d      	bne.n	8003df2 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003db6:	68fb      	ldr	r3, [r7, #12]
 8003db8:	681b      	ldr	r3, [r3, #0]
 8003dba:	695b      	ldr	r3, [r3, #20]
 8003dbc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003dc0:	2b40      	cmp	r3, #64	@ 0x40
 8003dc2:	d016      	beq.n	8003df2 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003dc4:	68fb      	ldr	r3, [r7, #12]
 8003dc6:	2200      	movs	r2, #0
 8003dc8:	631a      	str	r2, [r3, #48]	@ 0x30
 8003dca:	68fb      	ldr	r3, [r7, #12]
 8003dcc:	2220      	movs	r2, #32
 8003dce:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003dd2:	68fb      	ldr	r3, [r7, #12]
 8003dd4:	2200      	movs	r2, #0
 8003dd6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003dda:	68fb      	ldr	r3, [r7, #12]
 8003ddc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003dde:	f043 0220 	orr.w	r2, r3, #32
 8003de2:	68fb      	ldr	r3, [r7, #12]
 8003de4:	641a      	str	r2, [r3, #64]	@ 0x40
 8003de6:	68fb      	ldr	r3, [r7, #12]
 8003de8:	2200      	movs	r2, #0
 8003dea:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003dee:	2301      	movs	r3, #1
 8003df0:	e007      	b.n	8003e02 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8003df2:	68fb      	ldr	r3, [r7, #12]
 8003df4:	681b      	ldr	r3, [r3, #0]
 8003df6:	695b      	ldr	r3, [r3, #20]
 8003df8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003dfc:	2b40      	cmp	r3, #64	@ 0x40
 8003dfe:	d1ae      	bne.n	8003d5e <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8003e00:	2300      	movs	r3, #0
 8003e02:	4618      	mov	r0, r3
 8003e04:	3710      	adds	r7, #16
 8003e06:	46bd      	mov	sp, r7
 8003e08:	bd80      	pop	{r7, pc}

08003e0a <I2C_IsAcknowledgeFailed>:
 8003e0a:	b480      	push	{r7}
 8003e0c:	b083      	sub	sp, #12
 8003e0e:	af00      	add	r7, sp, #0
 8003e10:	6078      	str	r0, [r7, #4]
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	681b      	ldr	r3, [r3, #0]
 8003e16:	695b      	ldr	r3, [r3, #20]
 8003e18:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003e1c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003e20:	d11b      	bne.n	8003e5a <I2C_IsAcknowledgeFailed+0x50>
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	681b      	ldr	r3, [r3, #0]
 8003e26:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8003e2a:	615a      	str	r2, [r3, #20]
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	2200      	movs	r2, #0
 8003e30:	631a      	str	r2, [r3, #48]	@ 0x30
 8003e32:	687b      	ldr	r3, [r7, #4]
 8003e34:	2220      	movs	r2, #32
 8003e36:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	2200      	movs	r2, #0
 8003e3e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003e46:	f043 0204 	orr.w	r2, r3, #4
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	641a      	str	r2, [r3, #64]	@ 0x40
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	2200      	movs	r2, #0
 8003e52:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003e56:	2301      	movs	r3, #1
 8003e58:	e000      	b.n	8003e5c <I2C_IsAcknowledgeFailed+0x52>
 8003e5a:	2300      	movs	r3, #0
 8003e5c:	4618      	mov	r0, r3
 8003e5e:	370c      	adds	r7, #12
 8003e60:	46bd      	mov	sp, r7
 8003e62:	bc80      	pop	{r7}
 8003e64:	4770      	bx	lr
	...

08003e68 <HAL_RCC_OscConfig>:
 8003e68:	b580      	push	{r7, lr}
 8003e6a:	b086      	sub	sp, #24
 8003e6c:	af00      	add	r7, sp, #0
 8003e6e:	6078      	str	r0, [r7, #4]
 8003e70:	687b      	ldr	r3, [r7, #4]
 8003e72:	2b00      	cmp	r3, #0
 8003e74:	d101      	bne.n	8003e7a <HAL_RCC_OscConfig+0x12>
 8003e76:	2301      	movs	r3, #1
 8003e78:	e272      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 8003e7a:	687b      	ldr	r3, [r7, #4]
 8003e7c:	681b      	ldr	r3, [r3, #0]
 8003e7e:	f003 0301 	and.w	r3, r3, #1
 8003e82:	2b00      	cmp	r3, #0
 8003e84:	f000 8087 	beq.w	8003f96 <HAL_RCC_OscConfig+0x12e>
 8003e88:	4b92      	ldr	r3, [pc, #584]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003e8a:	685b      	ldr	r3, [r3, #4]
 8003e8c:	f003 030c 	and.w	r3, r3, #12
 8003e90:	2b04      	cmp	r3, #4
 8003e92:	d00c      	beq.n	8003eae <HAL_RCC_OscConfig+0x46>
 8003e94:	4b8f      	ldr	r3, [pc, #572]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003e96:	685b      	ldr	r3, [r3, #4]
 8003e98:	f003 030c 	and.w	r3, r3, #12
 8003e9c:	2b08      	cmp	r3, #8
 8003e9e:	d112      	bne.n	8003ec6 <HAL_RCC_OscConfig+0x5e>
 8003ea0:	4b8c      	ldr	r3, [pc, #560]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003ea2:	685b      	ldr	r3, [r3, #4]
 8003ea4:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003ea8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003eac:	d10b      	bne.n	8003ec6 <HAL_RCC_OscConfig+0x5e>
 8003eae:	4b89      	ldr	r3, [pc, #548]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003eb0:	681b      	ldr	r3, [r3, #0]
 8003eb2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003eb6:	2b00      	cmp	r3, #0
 8003eb8:	d06c      	beq.n	8003f94 <HAL_RCC_OscConfig+0x12c>
 8003eba:	687b      	ldr	r3, [r7, #4]
 8003ebc:	685b      	ldr	r3, [r3, #4]
 8003ebe:	2b00      	cmp	r3, #0
 8003ec0:	d168      	bne.n	8003f94 <HAL_RCC_OscConfig+0x12c>
 8003ec2:	2301      	movs	r3, #1
 8003ec4:	e24c      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	685b      	ldr	r3, [r3, #4]
 8003eca:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003ece:	d106      	bne.n	8003ede <HAL_RCC_OscConfig+0x76>
 8003ed0:	4b80      	ldr	r3, [pc, #512]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	4a7f      	ldr	r2, [pc, #508]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003ed6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003eda:	6013      	str	r3, [r2, #0]
 8003edc:	e02e      	b.n	8003f3c <HAL_RCC_OscConfig+0xd4>
 8003ede:	687b      	ldr	r3, [r7, #4]
 8003ee0:	685b      	ldr	r3, [r3, #4]
 8003ee2:	2b00      	cmp	r3, #0
 8003ee4:	d10c      	bne.n	8003f00 <HAL_RCC_OscConfig+0x98>
 8003ee6:	4b7b      	ldr	r3, [pc, #492]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003ee8:	681b      	ldr	r3, [r3, #0]
 8003eea:	4a7a      	ldr	r2, [pc, #488]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003eec:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003ef0:	6013      	str	r3, [r2, #0]
 8003ef2:	4b78      	ldr	r3, [pc, #480]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003ef4:	681b      	ldr	r3, [r3, #0]
 8003ef6:	4a77      	ldr	r2, [pc, #476]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003ef8:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003efc:	6013      	str	r3, [r2, #0]
 8003efe:	e01d      	b.n	8003f3c <HAL_RCC_OscConfig+0xd4>
 8003f00:	687b      	ldr	r3, [r7, #4]
 8003f02:	685b      	ldr	r3, [r3, #4]
 8003f04:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003f08:	d10c      	bne.n	8003f24 <HAL_RCC_OscConfig+0xbc>
 8003f0a:	4b72      	ldr	r3, [pc, #456]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003f0c:	681b      	ldr	r3, [r3, #0]
 8003f0e:	4a71      	ldr	r2, [pc, #452]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003f10:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003f14:	6013      	str	r3, [r2, #0]
 8003f16:	4b6f      	ldr	r3, [pc, #444]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003f18:	681b      	ldr	r3, [r3, #0]
 8003f1a:	4a6e      	ldr	r2, [pc, #440]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003f1c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003f20:	6013      	str	r3, [r2, #0]
 8003f22:	e00b      	b.n	8003f3c <HAL_RCC_OscConfig+0xd4>
 8003f24:	4b6b      	ldr	r3, [pc, #428]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003f26:	681b      	ldr	r3, [r3, #0]
 8003f28:	4a6a      	ldr	r2, [pc, #424]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003f2a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003f2e:	6013      	str	r3, [r2, #0]
 8003f30:	4b68      	ldr	r3, [pc, #416]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003f32:	681b      	ldr	r3, [r3, #0]
 8003f34:	4a67      	ldr	r2, [pc, #412]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003f36:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003f3a:	6013      	str	r3, [r2, #0]
 8003f3c:	687b      	ldr	r3, [r7, #4]
 8003f3e:	685b      	ldr	r3, [r3, #4]
 8003f40:	2b00      	cmp	r3, #0
 8003f42:	d013      	beq.n	8003f6c <HAL_RCC_OscConfig+0x104>
 8003f44:	f7fe fc48 	bl	80027d8 <HAL_GetTick>
 8003f48:	6138      	str	r0, [r7, #16]
 8003f4a:	e008      	b.n	8003f5e <HAL_RCC_OscConfig+0xf6>
 8003f4c:	f7fe fc44 	bl	80027d8 <HAL_GetTick>
 8003f50:	4602      	mov	r2, r0
 8003f52:	693b      	ldr	r3, [r7, #16]
 8003f54:	1ad3      	subs	r3, r2, r3
 8003f56:	2b64      	cmp	r3, #100	@ 0x64
 8003f58:	d901      	bls.n	8003f5e <HAL_RCC_OscConfig+0xf6>
 8003f5a:	2303      	movs	r3, #3
 8003f5c:	e200      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 8003f5e:	4b5d      	ldr	r3, [pc, #372]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003f60:	681b      	ldr	r3, [r3, #0]
 8003f62:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003f66:	2b00      	cmp	r3, #0
 8003f68:	d0f0      	beq.n	8003f4c <HAL_RCC_OscConfig+0xe4>
 8003f6a:	e014      	b.n	8003f96 <HAL_RCC_OscConfig+0x12e>
 8003f6c:	f7fe fc34 	bl	80027d8 <HAL_GetTick>
 8003f70:	6138      	str	r0, [r7, #16]
 8003f72:	e008      	b.n	8003f86 <HAL_RCC_OscConfig+0x11e>
 8003f74:	f7fe fc30 	bl	80027d8 <HAL_GetTick>
 8003f78:	4602      	mov	r2, r0
 8003f7a:	693b      	ldr	r3, [r7, #16]
 8003f7c:	1ad3      	subs	r3, r2, r3
 8003f7e:	2b64      	cmp	r3, #100	@ 0x64
 8003f80:	d901      	bls.n	8003f86 <HAL_RCC_OscConfig+0x11e>
 8003f82:	2303      	movs	r3, #3
 8003f84:	e1ec      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 8003f86:	4b53      	ldr	r3, [pc, #332]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003f88:	681b      	ldr	r3, [r3, #0]
 8003f8a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003f8e:	2b00      	cmp	r3, #0
 8003f90:	d1f0      	bne.n	8003f74 <HAL_RCC_OscConfig+0x10c>
 8003f92:	e000      	b.n	8003f96 <HAL_RCC_OscConfig+0x12e>
 8003f94:	bf00      	nop
 8003f96:	687b      	ldr	r3, [r7, #4]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	f003 0302 	and.w	r3, r3, #2
 8003f9e:	2b00      	cmp	r3, #0
 8003fa0:	d063      	beq.n	800406a <HAL_RCC_OscConfig+0x202>
 8003fa2:	4b4c      	ldr	r3, [pc, #304]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003fa4:	685b      	ldr	r3, [r3, #4]
 8003fa6:	f003 030c 	and.w	r3, r3, #12
 8003faa:	2b00      	cmp	r3, #0
 8003fac:	d00b      	beq.n	8003fc6 <HAL_RCC_OscConfig+0x15e>
 8003fae:	4b49      	ldr	r3, [pc, #292]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003fb0:	685b      	ldr	r3, [r3, #4]
 8003fb2:	f003 030c 	and.w	r3, r3, #12
 8003fb6:	2b08      	cmp	r3, #8
 8003fb8:	d11c      	bne.n	8003ff4 <HAL_RCC_OscConfig+0x18c>
 8003fba:	4b46      	ldr	r3, [pc, #280]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003fbc:	685b      	ldr	r3, [r3, #4]
 8003fbe:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003fc2:	2b00      	cmp	r3, #0
 8003fc4:	d116      	bne.n	8003ff4 <HAL_RCC_OscConfig+0x18c>
 8003fc6:	4b43      	ldr	r3, [pc, #268]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003fc8:	681b      	ldr	r3, [r3, #0]
 8003fca:	f003 0302 	and.w	r3, r3, #2
 8003fce:	2b00      	cmp	r3, #0
 8003fd0:	d005      	beq.n	8003fde <HAL_RCC_OscConfig+0x176>
 8003fd2:	687b      	ldr	r3, [r7, #4]
 8003fd4:	691b      	ldr	r3, [r3, #16]
 8003fd6:	2b01      	cmp	r3, #1
 8003fd8:	d001      	beq.n	8003fde <HAL_RCC_OscConfig+0x176>
 8003fda:	2301      	movs	r3, #1
 8003fdc:	e1c0      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 8003fde:	4b3d      	ldr	r3, [pc, #244]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003fe0:	681b      	ldr	r3, [r3, #0]
 8003fe2:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003fe6:	687b      	ldr	r3, [r7, #4]
 8003fe8:	695b      	ldr	r3, [r3, #20]
 8003fea:	00db      	lsls	r3, r3, #3
 8003fec:	4939      	ldr	r1, [pc, #228]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8003fee:	4313      	orrs	r3, r2
 8003ff0:	600b      	str	r3, [r1, #0]
 8003ff2:	e03a      	b.n	800406a <HAL_RCC_OscConfig+0x202>
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	691b      	ldr	r3, [r3, #16]
 8003ff8:	2b00      	cmp	r3, #0
 8003ffa:	d020      	beq.n	800403e <HAL_RCC_OscConfig+0x1d6>
 8003ffc:	4b36      	ldr	r3, [pc, #216]	@ (80040d8 <HAL_RCC_OscConfig+0x270>)
 8003ffe:	2201      	movs	r2, #1
 8004000:	601a      	str	r2, [r3, #0]
 8004002:	f7fe fbe9 	bl	80027d8 <HAL_GetTick>
 8004006:	6138      	str	r0, [r7, #16]
 8004008:	e008      	b.n	800401c <HAL_RCC_OscConfig+0x1b4>
 800400a:	f7fe fbe5 	bl	80027d8 <HAL_GetTick>
 800400e:	4602      	mov	r2, r0
 8004010:	693b      	ldr	r3, [r7, #16]
 8004012:	1ad3      	subs	r3, r2, r3
 8004014:	2b02      	cmp	r3, #2
 8004016:	d901      	bls.n	800401c <HAL_RCC_OscConfig+0x1b4>
 8004018:	2303      	movs	r3, #3
 800401a:	e1a1      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 800401c:	4b2d      	ldr	r3, [pc, #180]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 800401e:	681b      	ldr	r3, [r3, #0]
 8004020:	f003 0302 	and.w	r3, r3, #2
 8004024:	2b00      	cmp	r3, #0
 8004026:	d0f0      	beq.n	800400a <HAL_RCC_OscConfig+0x1a2>
 8004028:	4b2a      	ldr	r3, [pc, #168]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 800402a:	681b      	ldr	r3, [r3, #0]
 800402c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004030:	687b      	ldr	r3, [r7, #4]
 8004032:	695b      	ldr	r3, [r3, #20]
 8004034:	00db      	lsls	r3, r3, #3
 8004036:	4927      	ldr	r1, [pc, #156]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8004038:	4313      	orrs	r3, r2
 800403a:	600b      	str	r3, [r1, #0]
 800403c:	e015      	b.n	800406a <HAL_RCC_OscConfig+0x202>
 800403e:	4b26      	ldr	r3, [pc, #152]	@ (80040d8 <HAL_RCC_OscConfig+0x270>)
 8004040:	2200      	movs	r2, #0
 8004042:	601a      	str	r2, [r3, #0]
 8004044:	f7fe fbc8 	bl	80027d8 <HAL_GetTick>
 8004048:	6138      	str	r0, [r7, #16]
 800404a:	e008      	b.n	800405e <HAL_RCC_OscConfig+0x1f6>
 800404c:	f7fe fbc4 	bl	80027d8 <HAL_GetTick>
 8004050:	4602      	mov	r2, r0
 8004052:	693b      	ldr	r3, [r7, #16]
 8004054:	1ad3      	subs	r3, r2, r3
 8004056:	2b02      	cmp	r3, #2
 8004058:	d901      	bls.n	800405e <HAL_RCC_OscConfig+0x1f6>
 800405a:	2303      	movs	r3, #3
 800405c:	e180      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 800405e:	4b1d      	ldr	r3, [pc, #116]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 8004060:	681b      	ldr	r3, [r3, #0]
 8004062:	f003 0302 	and.w	r3, r3, #2
 8004066:	2b00      	cmp	r3, #0
 8004068:	d1f0      	bne.n	800404c <HAL_RCC_OscConfig+0x1e4>
 800406a:	687b      	ldr	r3, [r7, #4]
 800406c:	681b      	ldr	r3, [r3, #0]
 800406e:	f003 0308 	and.w	r3, r3, #8
 8004072:	2b00      	cmp	r3, #0
 8004074:	d03a      	beq.n	80040ec <HAL_RCC_OscConfig+0x284>
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	699b      	ldr	r3, [r3, #24]
 800407a:	2b00      	cmp	r3, #0
 800407c:	d019      	beq.n	80040b2 <HAL_RCC_OscConfig+0x24a>
 800407e:	4b17      	ldr	r3, [pc, #92]	@ (80040dc <HAL_RCC_OscConfig+0x274>)
 8004080:	2201      	movs	r2, #1
 8004082:	601a      	str	r2, [r3, #0]
 8004084:	f7fe fba8 	bl	80027d8 <HAL_GetTick>
 8004088:	6138      	str	r0, [r7, #16]
 800408a:	e008      	b.n	800409e <HAL_RCC_OscConfig+0x236>
 800408c:	f7fe fba4 	bl	80027d8 <HAL_GetTick>
 8004090:	4602      	mov	r2, r0
 8004092:	693b      	ldr	r3, [r7, #16]
 8004094:	1ad3      	subs	r3, r2, r3
 8004096:	2b02      	cmp	r3, #2
 8004098:	d901      	bls.n	800409e <HAL_RCC_OscConfig+0x236>
 800409a:	2303      	movs	r3, #3
 800409c:	e160      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 800409e:	4b0d      	ldr	r3, [pc, #52]	@ (80040d4 <HAL_RCC_OscConfig+0x26c>)
 80040a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80040a2:	f003 0302 	and.w	r3, r3, #2
 80040a6:	2b00      	cmp	r3, #0
 80040a8:	d0f0      	beq.n	800408c <HAL_RCC_OscConfig+0x224>
 80040aa:	2001      	movs	r0, #1
 80040ac:	f000 faba 	bl	8004624 <RCC_Delay>
 80040b0:	e01c      	b.n	80040ec <HAL_RCC_OscConfig+0x284>
 80040b2:	4b0a      	ldr	r3, [pc, #40]	@ (80040dc <HAL_RCC_OscConfig+0x274>)
 80040b4:	2200      	movs	r2, #0
 80040b6:	601a      	str	r2, [r3, #0]
 80040b8:	f7fe fb8e 	bl	80027d8 <HAL_GetTick>
 80040bc:	6138      	str	r0, [r7, #16]
 80040be:	e00f      	b.n	80040e0 <HAL_RCC_OscConfig+0x278>
 80040c0:	f7fe fb8a 	bl	80027d8 <HAL_GetTick>
 80040c4:	4602      	mov	r2, r0
 80040c6:	693b      	ldr	r3, [r7, #16]
 80040c8:	1ad3      	subs	r3, r2, r3
 80040ca:	2b02      	cmp	r3, #2
 80040cc:	d908      	bls.n	80040e0 <HAL_RCC_OscConfig+0x278>
 80040ce:	2303      	movs	r3, #3
 80040d0:	e146      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 80040d2:	bf00      	nop
 80040d4:	40021000 	.word	0x40021000
 80040d8:	42420000 	.word	0x42420000
 80040dc:	42420480 	.word	0x42420480
 80040e0:	4b92      	ldr	r3, [pc, #584]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 80040e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80040e4:	f003 0302 	and.w	r3, r3, #2
 80040e8:	2b00      	cmp	r3, #0
 80040ea:	d1e9      	bne.n	80040c0 <HAL_RCC_OscConfig+0x258>
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	681b      	ldr	r3, [r3, #0]
 80040f0:	f003 0304 	and.w	r3, r3, #4
 80040f4:	2b00      	cmp	r3, #0
 80040f6:	f000 80a6 	beq.w	8004246 <HAL_RCC_OscConfig+0x3de>
 80040fa:	2300      	movs	r3, #0
 80040fc:	75fb      	strb	r3, [r7, #23]
 80040fe:	4b8b      	ldr	r3, [pc, #556]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 8004100:	69db      	ldr	r3, [r3, #28]
 8004102:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004106:	2b00      	cmp	r3, #0
 8004108:	d10d      	bne.n	8004126 <HAL_RCC_OscConfig+0x2be>
 800410a:	4b88      	ldr	r3, [pc, #544]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 800410c:	69db      	ldr	r3, [r3, #28]
 800410e:	4a87      	ldr	r2, [pc, #540]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 8004110:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004114:	61d3      	str	r3, [r2, #28]
 8004116:	4b85      	ldr	r3, [pc, #532]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 8004118:	69db      	ldr	r3, [r3, #28]
 800411a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800411e:	60bb      	str	r3, [r7, #8]
 8004120:	68bb      	ldr	r3, [r7, #8]
 8004122:	2301      	movs	r3, #1
 8004124:	75fb      	strb	r3, [r7, #23]
 8004126:	4b82      	ldr	r3, [pc, #520]	@ (8004330 <HAL_RCC_OscConfig+0x4c8>)
 8004128:	681b      	ldr	r3, [r3, #0]
 800412a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800412e:	2b00      	cmp	r3, #0
 8004130:	d118      	bne.n	8004164 <HAL_RCC_OscConfig+0x2fc>
 8004132:	4b7f      	ldr	r3, [pc, #508]	@ (8004330 <HAL_RCC_OscConfig+0x4c8>)
 8004134:	681b      	ldr	r3, [r3, #0]
 8004136:	4a7e      	ldr	r2, [pc, #504]	@ (8004330 <HAL_RCC_OscConfig+0x4c8>)
 8004138:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800413c:	6013      	str	r3, [r2, #0]
 800413e:	f7fe fb4b 	bl	80027d8 <HAL_GetTick>
 8004142:	6138      	str	r0, [r7, #16]
 8004144:	e008      	b.n	8004158 <HAL_RCC_OscConfig+0x2f0>
 8004146:	f7fe fb47 	bl	80027d8 <HAL_GetTick>
 800414a:	4602      	mov	r2, r0
 800414c:	693b      	ldr	r3, [r7, #16]
 800414e:	1ad3      	subs	r3, r2, r3
 8004150:	2b64      	cmp	r3, #100	@ 0x64
 8004152:	d901      	bls.n	8004158 <HAL_RCC_OscConfig+0x2f0>
 8004154:	2303      	movs	r3, #3
 8004156:	e103      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 8004158:	4b75      	ldr	r3, [pc, #468]	@ (8004330 <HAL_RCC_OscConfig+0x4c8>)
 800415a:	681b      	ldr	r3, [r3, #0]
 800415c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004160:	2b00      	cmp	r3, #0
 8004162:	d0f0      	beq.n	8004146 <HAL_RCC_OscConfig+0x2de>
 8004164:	687b      	ldr	r3, [r7, #4]
 8004166:	68db      	ldr	r3, [r3, #12]
 8004168:	2b01      	cmp	r3, #1
 800416a:	d106      	bne.n	800417a <HAL_RCC_OscConfig+0x312>
 800416c:	4b6f      	ldr	r3, [pc, #444]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 800416e:	6a1b      	ldr	r3, [r3, #32]
 8004170:	4a6e      	ldr	r2, [pc, #440]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 8004172:	f043 0301 	orr.w	r3, r3, #1
 8004176:	6213      	str	r3, [r2, #32]
 8004178:	e02d      	b.n	80041d6 <HAL_RCC_OscConfig+0x36e>
 800417a:	687b      	ldr	r3, [r7, #4]
 800417c:	68db      	ldr	r3, [r3, #12]
 800417e:	2b00      	cmp	r3, #0
 8004180:	d10c      	bne.n	800419c <HAL_RCC_OscConfig+0x334>
 8004182:	4b6a      	ldr	r3, [pc, #424]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 8004184:	6a1b      	ldr	r3, [r3, #32]
 8004186:	4a69      	ldr	r2, [pc, #420]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 8004188:	f023 0301 	bic.w	r3, r3, #1
 800418c:	6213      	str	r3, [r2, #32]
 800418e:	4b67      	ldr	r3, [pc, #412]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 8004190:	6a1b      	ldr	r3, [r3, #32]
 8004192:	4a66      	ldr	r2, [pc, #408]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 8004194:	f023 0304 	bic.w	r3, r3, #4
 8004198:	6213      	str	r3, [r2, #32]
 800419a:	e01c      	b.n	80041d6 <HAL_RCC_OscConfig+0x36e>
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	68db      	ldr	r3, [r3, #12]
 80041a0:	2b05      	cmp	r3, #5
 80041a2:	d10c      	bne.n	80041be <HAL_RCC_OscConfig+0x356>
 80041a4:	4b61      	ldr	r3, [pc, #388]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 80041a6:	6a1b      	ldr	r3, [r3, #32]
 80041a8:	4a60      	ldr	r2, [pc, #384]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 80041aa:	f043 0304 	orr.w	r3, r3, #4
 80041ae:	6213      	str	r3, [r2, #32]
 80041b0:	4b5e      	ldr	r3, [pc, #376]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 80041b2:	6a1b      	ldr	r3, [r3, #32]
 80041b4:	4a5d      	ldr	r2, [pc, #372]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 80041b6:	f043 0301 	orr.w	r3, r3, #1
 80041ba:	6213      	str	r3, [r2, #32]
 80041bc:	e00b      	b.n	80041d6 <HAL_RCC_OscConfig+0x36e>
 80041be:	4b5b      	ldr	r3, [pc, #364]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 80041c0:	6a1b      	ldr	r3, [r3, #32]
 80041c2:	4a5a      	ldr	r2, [pc, #360]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 80041c4:	f023 0301 	bic.w	r3, r3, #1
 80041c8:	6213      	str	r3, [r2, #32]
 80041ca:	4b58      	ldr	r3, [pc, #352]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 80041cc:	6a1b      	ldr	r3, [r3, #32]
 80041ce:	4a57      	ldr	r2, [pc, #348]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 80041d0:	f023 0304 	bic.w	r3, r3, #4
 80041d4:	6213      	str	r3, [r2, #32]
 80041d6:	687b      	ldr	r3, [r7, #4]
 80041d8:	68db      	ldr	r3, [r3, #12]
 80041da:	2b00      	cmp	r3, #0
 80041dc:	d015      	beq.n	800420a <HAL_RCC_OscConfig+0x3a2>
 80041de:	f7fe fafb 	bl	80027d8 <HAL_GetTick>
 80041e2:	6138      	str	r0, [r7, #16]
 80041e4:	e00a      	b.n	80041fc <HAL_RCC_OscConfig+0x394>
 80041e6:	f7fe faf7 	bl	80027d8 <HAL_GetTick>
 80041ea:	4602      	mov	r2, r0
 80041ec:	693b      	ldr	r3, [r7, #16]
 80041ee:	1ad3      	subs	r3, r2, r3
 80041f0:	f241 3288 	movw	r2, #5000	@ 0x1388
 80041f4:	4293      	cmp	r3, r2
 80041f6:	d901      	bls.n	80041fc <HAL_RCC_OscConfig+0x394>
 80041f8:	2303      	movs	r3, #3
 80041fa:	e0b1      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 80041fc:	4b4b      	ldr	r3, [pc, #300]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 80041fe:	6a1b      	ldr	r3, [r3, #32]
 8004200:	f003 0302 	and.w	r3, r3, #2
 8004204:	2b00      	cmp	r3, #0
 8004206:	d0ee      	beq.n	80041e6 <HAL_RCC_OscConfig+0x37e>
 8004208:	e014      	b.n	8004234 <HAL_RCC_OscConfig+0x3cc>
 800420a:	f7fe fae5 	bl	80027d8 <HAL_GetTick>
 800420e:	6138      	str	r0, [r7, #16]
 8004210:	e00a      	b.n	8004228 <HAL_RCC_OscConfig+0x3c0>
 8004212:	f7fe fae1 	bl	80027d8 <HAL_GetTick>
 8004216:	4602      	mov	r2, r0
 8004218:	693b      	ldr	r3, [r7, #16]
 800421a:	1ad3      	subs	r3, r2, r3
 800421c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004220:	4293      	cmp	r3, r2
 8004222:	d901      	bls.n	8004228 <HAL_RCC_OscConfig+0x3c0>
 8004224:	2303      	movs	r3, #3
 8004226:	e09b      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 8004228:	4b40      	ldr	r3, [pc, #256]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 800422a:	6a1b      	ldr	r3, [r3, #32]
 800422c:	f003 0302 	and.w	r3, r3, #2
 8004230:	2b00      	cmp	r3, #0
 8004232:	d1ee      	bne.n	8004212 <HAL_RCC_OscConfig+0x3aa>
 8004234:	7dfb      	ldrb	r3, [r7, #23]
 8004236:	2b01      	cmp	r3, #1
 8004238:	d105      	bne.n	8004246 <HAL_RCC_OscConfig+0x3de>
 800423a:	4b3c      	ldr	r3, [pc, #240]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 800423c:	69db      	ldr	r3, [r3, #28]
 800423e:	4a3b      	ldr	r2, [pc, #236]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 8004240:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004244:	61d3      	str	r3, [r2, #28]
 8004246:	687b      	ldr	r3, [r7, #4]
 8004248:	69db      	ldr	r3, [r3, #28]
 800424a:	2b00      	cmp	r3, #0
 800424c:	f000 8087 	beq.w	800435e <HAL_RCC_OscConfig+0x4f6>
 8004250:	4b36      	ldr	r3, [pc, #216]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 8004252:	685b      	ldr	r3, [r3, #4]
 8004254:	f003 030c 	and.w	r3, r3, #12
 8004258:	2b08      	cmp	r3, #8
 800425a:	d061      	beq.n	8004320 <HAL_RCC_OscConfig+0x4b8>
 800425c:	687b      	ldr	r3, [r7, #4]
 800425e:	69db      	ldr	r3, [r3, #28]
 8004260:	2b02      	cmp	r3, #2
 8004262:	d146      	bne.n	80042f2 <HAL_RCC_OscConfig+0x48a>
 8004264:	4b33      	ldr	r3, [pc, #204]	@ (8004334 <HAL_RCC_OscConfig+0x4cc>)
 8004266:	2200      	movs	r2, #0
 8004268:	601a      	str	r2, [r3, #0]
 800426a:	f7fe fab5 	bl	80027d8 <HAL_GetTick>
 800426e:	6138      	str	r0, [r7, #16]
 8004270:	e008      	b.n	8004284 <HAL_RCC_OscConfig+0x41c>
 8004272:	f7fe fab1 	bl	80027d8 <HAL_GetTick>
 8004276:	4602      	mov	r2, r0
 8004278:	693b      	ldr	r3, [r7, #16]
 800427a:	1ad3      	subs	r3, r2, r3
 800427c:	2b02      	cmp	r3, #2
 800427e:	d901      	bls.n	8004284 <HAL_RCC_OscConfig+0x41c>
 8004280:	2303      	movs	r3, #3
 8004282:	e06d      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 8004284:	4b29      	ldr	r3, [pc, #164]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 8004286:	681b      	ldr	r3, [r3, #0]
 8004288:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800428c:	2b00      	cmp	r3, #0
 800428e:	d1f0      	bne.n	8004272 <HAL_RCC_OscConfig+0x40a>
 8004290:	687b      	ldr	r3, [r7, #4]
 8004292:	6a1b      	ldr	r3, [r3, #32]
 8004294:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004298:	d108      	bne.n	80042ac <HAL_RCC_OscConfig+0x444>
 800429a:	4b24      	ldr	r3, [pc, #144]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 800429c:	685b      	ldr	r3, [r3, #4]
 800429e:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 80042a2:	687b      	ldr	r3, [r7, #4]
 80042a4:	689b      	ldr	r3, [r3, #8]
 80042a6:	4921      	ldr	r1, [pc, #132]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 80042a8:	4313      	orrs	r3, r2
 80042aa:	604b      	str	r3, [r1, #4]
 80042ac:	4b1f      	ldr	r3, [pc, #124]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 80042ae:	685b      	ldr	r3, [r3, #4]
 80042b0:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	6a19      	ldr	r1, [r3, #32]
 80042b8:	687b      	ldr	r3, [r7, #4]
 80042ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80042bc:	430b      	orrs	r3, r1
 80042be:	491b      	ldr	r1, [pc, #108]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 80042c0:	4313      	orrs	r3, r2
 80042c2:	604b      	str	r3, [r1, #4]
 80042c4:	4b1b      	ldr	r3, [pc, #108]	@ (8004334 <HAL_RCC_OscConfig+0x4cc>)
 80042c6:	2201      	movs	r2, #1
 80042c8:	601a      	str	r2, [r3, #0]
 80042ca:	f7fe fa85 	bl	80027d8 <HAL_GetTick>
 80042ce:	6138      	str	r0, [r7, #16]
 80042d0:	e008      	b.n	80042e4 <HAL_RCC_OscConfig+0x47c>
 80042d2:	f7fe fa81 	bl	80027d8 <HAL_GetTick>
 80042d6:	4602      	mov	r2, r0
 80042d8:	693b      	ldr	r3, [r7, #16]
 80042da:	1ad3      	subs	r3, r2, r3
 80042dc:	2b02      	cmp	r3, #2
 80042de:	d901      	bls.n	80042e4 <HAL_RCC_OscConfig+0x47c>
 80042e0:	2303      	movs	r3, #3
 80042e2:	e03d      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 80042e4:	4b11      	ldr	r3, [pc, #68]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 80042e6:	681b      	ldr	r3, [r3, #0]
 80042e8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80042ec:	2b00      	cmp	r3, #0
 80042ee:	d0f0      	beq.n	80042d2 <HAL_RCC_OscConfig+0x46a>
 80042f0:	e035      	b.n	800435e <HAL_RCC_OscConfig+0x4f6>
 80042f2:	4b10      	ldr	r3, [pc, #64]	@ (8004334 <HAL_RCC_OscConfig+0x4cc>)
 80042f4:	2200      	movs	r2, #0
 80042f6:	601a      	str	r2, [r3, #0]
 80042f8:	f7fe fa6e 	bl	80027d8 <HAL_GetTick>
 80042fc:	6138      	str	r0, [r7, #16]
 80042fe:	e008      	b.n	8004312 <HAL_RCC_OscConfig+0x4aa>
 8004300:	f7fe fa6a 	bl	80027d8 <HAL_GetTick>
 8004304:	4602      	mov	r2, r0
 8004306:	693b      	ldr	r3, [r7, #16]
 8004308:	1ad3      	subs	r3, r2, r3
 800430a:	2b02      	cmp	r3, #2
 800430c:	d901      	bls.n	8004312 <HAL_RCC_OscConfig+0x4aa>
 800430e:	2303      	movs	r3, #3
 8004310:	e026      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 8004312:	4b06      	ldr	r3, [pc, #24]	@ (800432c <HAL_RCC_OscConfig+0x4c4>)
 8004314:	681b      	ldr	r3, [r3, #0]
 8004316:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800431a:	2b00      	cmp	r3, #0
 800431c:	d1f0      	bne.n	8004300 <HAL_RCC_OscConfig+0x498>
 800431e:	e01e      	b.n	800435e <HAL_RCC_OscConfig+0x4f6>
 8004320:	687b      	ldr	r3, [r7, #4]
 8004322:	69db      	ldr	r3, [r3, #28]
 8004324:	2b01      	cmp	r3, #1
 8004326:	d107      	bne.n	8004338 <HAL_RCC_OscConfig+0x4d0>
 8004328:	2301      	movs	r3, #1
 800432a:	e019      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 800432c:	40021000 	.word	0x40021000
 8004330:	40007000 	.word	0x40007000
 8004334:	42420060 	.word	0x42420060
 8004338:	4b0b      	ldr	r3, [pc, #44]	@ (8004368 <HAL_RCC_OscConfig+0x500>)
 800433a:	685b      	ldr	r3, [r3, #4]
 800433c:	60fb      	str	r3, [r7, #12]
 800433e:	68fb      	ldr	r3, [r7, #12]
 8004340:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	6a1b      	ldr	r3, [r3, #32]
 8004348:	429a      	cmp	r2, r3
 800434a:	d106      	bne.n	800435a <HAL_RCC_OscConfig+0x4f2>
 800434c:	68fb      	ldr	r3, [r7, #12]
 800434e:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8004352:	687b      	ldr	r3, [r7, #4]
 8004354:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004356:	429a      	cmp	r2, r3
 8004358:	d001      	beq.n	800435e <HAL_RCC_OscConfig+0x4f6>
 800435a:	2301      	movs	r3, #1
 800435c:	e000      	b.n	8004360 <HAL_RCC_OscConfig+0x4f8>
 800435e:	2300      	movs	r3, #0
 8004360:	4618      	mov	r0, r3
 8004362:	3718      	adds	r7, #24
 8004364:	46bd      	mov	sp, r7
 8004366:	bd80      	pop	{r7, pc}
 8004368:	40021000 	.word	0x40021000

0800436c <HAL_RCC_ClockConfig>:
 800436c:	b580      	push	{r7, lr}
 800436e:	b084      	sub	sp, #16
 8004370:	af00      	add	r7, sp, #0
 8004372:	6078      	str	r0, [r7, #4]
 8004374:	6039      	str	r1, [r7, #0]
 8004376:	687b      	ldr	r3, [r7, #4]
 8004378:	2b00      	cmp	r3, #0
 800437a:	d101      	bne.n	8004380 <HAL_RCC_ClockConfig+0x14>
 800437c:	2301      	movs	r3, #1
 800437e:	e0d0      	b.n	8004522 <HAL_RCC_ClockConfig+0x1b6>
 8004380:	4b6a      	ldr	r3, [pc, #424]	@ (800452c <HAL_RCC_ClockConfig+0x1c0>)
 8004382:	681b      	ldr	r3, [r3, #0]
 8004384:	f003 0307 	and.w	r3, r3, #7
 8004388:	683a      	ldr	r2, [r7, #0]
 800438a:	429a      	cmp	r2, r3
 800438c:	d910      	bls.n	80043b0 <HAL_RCC_ClockConfig+0x44>
 800438e:	4b67      	ldr	r3, [pc, #412]	@ (800452c <HAL_RCC_ClockConfig+0x1c0>)
 8004390:	681b      	ldr	r3, [r3, #0]
 8004392:	f023 0207 	bic.w	r2, r3, #7
 8004396:	4965      	ldr	r1, [pc, #404]	@ (800452c <HAL_RCC_ClockConfig+0x1c0>)
 8004398:	683b      	ldr	r3, [r7, #0]
 800439a:	4313      	orrs	r3, r2
 800439c:	600b      	str	r3, [r1, #0]
 800439e:	4b63      	ldr	r3, [pc, #396]	@ (800452c <HAL_RCC_ClockConfig+0x1c0>)
 80043a0:	681b      	ldr	r3, [r3, #0]
 80043a2:	f003 0307 	and.w	r3, r3, #7
 80043a6:	683a      	ldr	r2, [r7, #0]
 80043a8:	429a      	cmp	r2, r3
 80043aa:	d001      	beq.n	80043b0 <HAL_RCC_ClockConfig+0x44>
 80043ac:	2301      	movs	r3, #1
 80043ae:	e0b8      	b.n	8004522 <HAL_RCC_ClockConfig+0x1b6>
 80043b0:	687b      	ldr	r3, [r7, #4]
 80043b2:	681b      	ldr	r3, [r3, #0]
 80043b4:	f003 0302 	and.w	r3, r3, #2
 80043b8:	2b00      	cmp	r3, #0
 80043ba:	d020      	beq.n	80043fe <HAL_RCC_ClockConfig+0x92>
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	f003 0304 	and.w	r3, r3, #4
 80043c4:	2b00      	cmp	r3, #0
 80043c6:	d005      	beq.n	80043d4 <HAL_RCC_ClockConfig+0x68>
 80043c8:	4b59      	ldr	r3, [pc, #356]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 80043ca:	685b      	ldr	r3, [r3, #4]
 80043cc:	4a58      	ldr	r2, [pc, #352]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 80043ce:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80043d2:	6053      	str	r3, [r2, #4]
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	681b      	ldr	r3, [r3, #0]
 80043d8:	f003 0308 	and.w	r3, r3, #8
 80043dc:	2b00      	cmp	r3, #0
 80043de:	d005      	beq.n	80043ec <HAL_RCC_ClockConfig+0x80>
 80043e0:	4b53      	ldr	r3, [pc, #332]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 80043e2:	685b      	ldr	r3, [r3, #4]
 80043e4:	4a52      	ldr	r2, [pc, #328]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 80043e6:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 80043ea:	6053      	str	r3, [r2, #4]
 80043ec:	4b50      	ldr	r3, [pc, #320]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 80043ee:	685b      	ldr	r3, [r3, #4]
 80043f0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80043f4:	687b      	ldr	r3, [r7, #4]
 80043f6:	689b      	ldr	r3, [r3, #8]
 80043f8:	494d      	ldr	r1, [pc, #308]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 80043fa:	4313      	orrs	r3, r2
 80043fc:	604b      	str	r3, [r1, #4]
 80043fe:	687b      	ldr	r3, [r7, #4]
 8004400:	681b      	ldr	r3, [r3, #0]
 8004402:	f003 0301 	and.w	r3, r3, #1
 8004406:	2b00      	cmp	r3, #0
 8004408:	d040      	beq.n	800448c <HAL_RCC_ClockConfig+0x120>
 800440a:	687b      	ldr	r3, [r7, #4]
 800440c:	685b      	ldr	r3, [r3, #4]
 800440e:	2b01      	cmp	r3, #1
 8004410:	d107      	bne.n	8004422 <HAL_RCC_ClockConfig+0xb6>
 8004412:	4b47      	ldr	r3, [pc, #284]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 8004414:	681b      	ldr	r3, [r3, #0]
 8004416:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800441a:	2b00      	cmp	r3, #0
 800441c:	d115      	bne.n	800444a <HAL_RCC_ClockConfig+0xde>
 800441e:	2301      	movs	r3, #1
 8004420:	e07f      	b.n	8004522 <HAL_RCC_ClockConfig+0x1b6>
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	685b      	ldr	r3, [r3, #4]
 8004426:	2b02      	cmp	r3, #2
 8004428:	d107      	bne.n	800443a <HAL_RCC_ClockConfig+0xce>
 800442a:	4b41      	ldr	r3, [pc, #260]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 800442c:	681b      	ldr	r3, [r3, #0]
 800442e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004432:	2b00      	cmp	r3, #0
 8004434:	d109      	bne.n	800444a <HAL_RCC_ClockConfig+0xde>
 8004436:	2301      	movs	r3, #1
 8004438:	e073      	b.n	8004522 <HAL_RCC_ClockConfig+0x1b6>
 800443a:	4b3d      	ldr	r3, [pc, #244]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 800443c:	681b      	ldr	r3, [r3, #0]
 800443e:	f003 0302 	and.w	r3, r3, #2
 8004442:	2b00      	cmp	r3, #0
 8004444:	d101      	bne.n	800444a <HAL_RCC_ClockConfig+0xde>
 8004446:	2301      	movs	r3, #1
 8004448:	e06b      	b.n	8004522 <HAL_RCC_ClockConfig+0x1b6>
 800444a:	4b39      	ldr	r3, [pc, #228]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 800444c:	685b      	ldr	r3, [r3, #4]
 800444e:	f023 0203 	bic.w	r2, r3, #3
 8004452:	687b      	ldr	r3, [r7, #4]
 8004454:	685b      	ldr	r3, [r3, #4]
 8004456:	4936      	ldr	r1, [pc, #216]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 8004458:	4313      	orrs	r3, r2
 800445a:	604b      	str	r3, [r1, #4]
 800445c:	f7fe f9bc 	bl	80027d8 <HAL_GetTick>
 8004460:	60f8      	str	r0, [r7, #12]
 8004462:	e00a      	b.n	800447a <HAL_RCC_ClockConfig+0x10e>
 8004464:	f7fe f9b8 	bl	80027d8 <HAL_GetTick>
 8004468:	4602      	mov	r2, r0
 800446a:	68fb      	ldr	r3, [r7, #12]
 800446c:	1ad3      	subs	r3, r2, r3
 800446e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004472:	4293      	cmp	r3, r2
 8004474:	d901      	bls.n	800447a <HAL_RCC_ClockConfig+0x10e>
 8004476:	2303      	movs	r3, #3
 8004478:	e053      	b.n	8004522 <HAL_RCC_ClockConfig+0x1b6>
 800447a:	4b2d      	ldr	r3, [pc, #180]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 800447c:	685b      	ldr	r3, [r3, #4]
 800447e:	f003 020c 	and.w	r2, r3, #12
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	685b      	ldr	r3, [r3, #4]
 8004486:	009b      	lsls	r3, r3, #2
 8004488:	429a      	cmp	r2, r3
 800448a:	d1eb      	bne.n	8004464 <HAL_RCC_ClockConfig+0xf8>
 800448c:	4b27      	ldr	r3, [pc, #156]	@ (800452c <HAL_RCC_ClockConfig+0x1c0>)
 800448e:	681b      	ldr	r3, [r3, #0]
 8004490:	f003 0307 	and.w	r3, r3, #7
 8004494:	683a      	ldr	r2, [r7, #0]
 8004496:	429a      	cmp	r2, r3
 8004498:	d210      	bcs.n	80044bc <HAL_RCC_ClockConfig+0x150>
 800449a:	4b24      	ldr	r3, [pc, #144]	@ (800452c <HAL_RCC_ClockConfig+0x1c0>)
 800449c:	681b      	ldr	r3, [r3, #0]
 800449e:	f023 0207 	bic.w	r2, r3, #7
 80044a2:	4922      	ldr	r1, [pc, #136]	@ (800452c <HAL_RCC_ClockConfig+0x1c0>)
 80044a4:	683b      	ldr	r3, [r7, #0]
 80044a6:	4313      	orrs	r3, r2
 80044a8:	600b      	str	r3, [r1, #0]
 80044aa:	4b20      	ldr	r3, [pc, #128]	@ (800452c <HAL_RCC_ClockConfig+0x1c0>)
 80044ac:	681b      	ldr	r3, [r3, #0]
 80044ae:	f003 0307 	and.w	r3, r3, #7
 80044b2:	683a      	ldr	r2, [r7, #0]
 80044b4:	429a      	cmp	r2, r3
 80044b6:	d001      	beq.n	80044bc <HAL_RCC_ClockConfig+0x150>
 80044b8:	2301      	movs	r3, #1
 80044ba:	e032      	b.n	8004522 <HAL_RCC_ClockConfig+0x1b6>
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	681b      	ldr	r3, [r3, #0]
 80044c0:	f003 0304 	and.w	r3, r3, #4
 80044c4:	2b00      	cmp	r3, #0
 80044c6:	d008      	beq.n	80044da <HAL_RCC_ClockConfig+0x16e>
 80044c8:	4b19      	ldr	r3, [pc, #100]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 80044ca:	685b      	ldr	r3, [r3, #4]
 80044cc:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80044d0:	687b      	ldr	r3, [r7, #4]
 80044d2:	68db      	ldr	r3, [r3, #12]
 80044d4:	4916      	ldr	r1, [pc, #88]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 80044d6:	4313      	orrs	r3, r2
 80044d8:	604b      	str	r3, [r1, #4]
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	f003 0308 	and.w	r3, r3, #8
 80044e2:	2b00      	cmp	r3, #0
 80044e4:	d009      	beq.n	80044fa <HAL_RCC_ClockConfig+0x18e>
 80044e6:	4b12      	ldr	r3, [pc, #72]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 80044e8:	685b      	ldr	r3, [r3, #4]
 80044ea:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	691b      	ldr	r3, [r3, #16]
 80044f2:	00db      	lsls	r3, r3, #3
 80044f4:	490e      	ldr	r1, [pc, #56]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 80044f6:	4313      	orrs	r3, r2
 80044f8:	604b      	str	r3, [r1, #4]
 80044fa:	f000 f821 	bl	8004540 <HAL_RCC_GetSysClockFreq>
 80044fe:	4602      	mov	r2, r0
 8004500:	4b0b      	ldr	r3, [pc, #44]	@ (8004530 <HAL_RCC_ClockConfig+0x1c4>)
 8004502:	685b      	ldr	r3, [r3, #4]
 8004504:	091b      	lsrs	r3, r3, #4
 8004506:	f003 030f 	and.w	r3, r3, #15
 800450a:	490a      	ldr	r1, [pc, #40]	@ (8004534 <HAL_RCC_ClockConfig+0x1c8>)
 800450c:	5ccb      	ldrb	r3, [r1, r3]
 800450e:	fa22 f303 	lsr.w	r3, r2, r3
 8004512:	4a09      	ldr	r2, [pc, #36]	@ (8004538 <HAL_RCC_ClockConfig+0x1cc>)
 8004514:	6013      	str	r3, [r2, #0]
 8004516:	4b09      	ldr	r3, [pc, #36]	@ (800453c <HAL_RCC_ClockConfig+0x1d0>)
 8004518:	681b      	ldr	r3, [r3, #0]
 800451a:	4618      	mov	r0, r3
 800451c:	f7fe f91a 	bl	8002754 <HAL_InitTick>
 8004520:	2300      	movs	r3, #0
 8004522:	4618      	mov	r0, r3
 8004524:	3710      	adds	r7, #16
 8004526:	46bd      	mov	sp, r7
 8004528:	bd80      	pop	{r7, pc}
 800452a:	bf00      	nop
 800452c:	40022000 	.word	0x40022000
 8004530:	40021000 	.word	0x40021000
 8004534:	08005758 	.word	0x08005758
 8004538:	20000088 	.word	0x20000088
 800453c:	2000008c 	.word	0x2000008c

08004540 <HAL_RCC_GetSysClockFreq>:
 8004540:	b480      	push	{r7}
 8004542:	b087      	sub	sp, #28
 8004544:	af00      	add	r7, sp, #0
 8004546:	2300      	movs	r3, #0
 8004548:	60fb      	str	r3, [r7, #12]
 800454a:	2300      	movs	r3, #0
 800454c:	60bb      	str	r3, [r7, #8]
 800454e:	2300      	movs	r3, #0
 8004550:	617b      	str	r3, [r7, #20]
 8004552:	2300      	movs	r3, #0
 8004554:	607b      	str	r3, [r7, #4]
 8004556:	2300      	movs	r3, #0
 8004558:	613b      	str	r3, [r7, #16]
 800455a:	4b1e      	ldr	r3, [pc, #120]	@ (80045d4 <HAL_RCC_GetSysClockFreq+0x94>)
 800455c:	685b      	ldr	r3, [r3, #4]
 800455e:	60fb      	str	r3, [r7, #12]
 8004560:	68fb      	ldr	r3, [r7, #12]
 8004562:	f003 030c 	and.w	r3, r3, #12
 8004566:	2b04      	cmp	r3, #4
 8004568:	d002      	beq.n	8004570 <HAL_RCC_GetSysClockFreq+0x30>
 800456a:	2b08      	cmp	r3, #8
 800456c:	d003      	beq.n	8004576 <HAL_RCC_GetSysClockFreq+0x36>
 800456e:	e027      	b.n	80045c0 <HAL_RCC_GetSysClockFreq+0x80>
 8004570:	4b19      	ldr	r3, [pc, #100]	@ (80045d8 <HAL_RCC_GetSysClockFreq+0x98>)
 8004572:	613b      	str	r3, [r7, #16]
 8004574:	e027      	b.n	80045c6 <HAL_RCC_GetSysClockFreq+0x86>
 8004576:	68fb      	ldr	r3, [r7, #12]
 8004578:	0c9b      	lsrs	r3, r3, #18
 800457a:	f003 030f 	and.w	r3, r3, #15
 800457e:	4a17      	ldr	r2, [pc, #92]	@ (80045dc <HAL_RCC_GetSysClockFreq+0x9c>)
 8004580:	5cd3      	ldrb	r3, [r2, r3]
 8004582:	607b      	str	r3, [r7, #4]
 8004584:	68fb      	ldr	r3, [r7, #12]
 8004586:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800458a:	2b00      	cmp	r3, #0
 800458c:	d010      	beq.n	80045b0 <HAL_RCC_GetSysClockFreq+0x70>
 800458e:	4b11      	ldr	r3, [pc, #68]	@ (80045d4 <HAL_RCC_GetSysClockFreq+0x94>)
 8004590:	685b      	ldr	r3, [r3, #4]
 8004592:	0c5b      	lsrs	r3, r3, #17
 8004594:	f003 0301 	and.w	r3, r3, #1
 8004598:	4a11      	ldr	r2, [pc, #68]	@ (80045e0 <HAL_RCC_GetSysClockFreq+0xa0>)
 800459a:	5cd3      	ldrb	r3, [r2, r3]
 800459c:	60bb      	str	r3, [r7, #8]
 800459e:	687b      	ldr	r3, [r7, #4]
 80045a0:	4a0d      	ldr	r2, [pc, #52]	@ (80045d8 <HAL_RCC_GetSysClockFreq+0x98>)
 80045a2:	fb03 f202 	mul.w	r2, r3, r2
 80045a6:	68bb      	ldr	r3, [r7, #8]
 80045a8:	fbb2 f3f3 	udiv	r3, r2, r3
 80045ac:	617b      	str	r3, [r7, #20]
 80045ae:	e004      	b.n	80045ba <HAL_RCC_GetSysClockFreq+0x7a>
 80045b0:	687b      	ldr	r3, [r7, #4]
 80045b2:	4a0c      	ldr	r2, [pc, #48]	@ (80045e4 <HAL_RCC_GetSysClockFreq+0xa4>)
 80045b4:	fb02 f303 	mul.w	r3, r2, r3
 80045b8:	617b      	str	r3, [r7, #20]
 80045ba:	697b      	ldr	r3, [r7, #20]
 80045bc:	613b      	str	r3, [r7, #16]
 80045be:	e002      	b.n	80045c6 <HAL_RCC_GetSysClockFreq+0x86>
 80045c0:	4b05      	ldr	r3, [pc, #20]	@ (80045d8 <HAL_RCC_GetSysClockFreq+0x98>)
 80045c2:	613b      	str	r3, [r7, #16]
 80045c4:	bf00      	nop
 80045c6:	693b      	ldr	r3, [r7, #16]
 80045c8:	4618      	mov	r0, r3
 80045ca:	371c      	adds	r7, #28
 80045cc:	46bd      	mov	sp, r7
 80045ce:	bc80      	pop	{r7}
 80045d0:	4770      	bx	lr
 80045d2:	bf00      	nop
 80045d4:	40021000 	.word	0x40021000
 80045d8:	007a1200 	.word	0x007a1200
 80045dc:	08005770 	.word	0x08005770
 80045e0:	08005780 	.word	0x08005780
 80045e4:	003d0900 	.word	0x003d0900

080045e8 <HAL_RCC_GetHCLKFreq>:
 80045e8:	b480      	push	{r7}
 80045ea:	af00      	add	r7, sp, #0
 80045ec:	4b02      	ldr	r3, [pc, #8]	@ (80045f8 <HAL_RCC_GetHCLKFreq+0x10>)
 80045ee:	681b      	ldr	r3, [r3, #0]
 80045f0:	4618      	mov	r0, r3
 80045f2:	46bd      	mov	sp, r7
 80045f4:	bc80      	pop	{r7}
 80045f6:	4770      	bx	lr
 80045f8:	20000088 	.word	0x20000088

080045fc <HAL_RCC_GetPCLK1Freq>:
 80045fc:	b580      	push	{r7, lr}
 80045fe:	af00      	add	r7, sp, #0
 8004600:	f7ff fff2 	bl	80045e8 <HAL_RCC_GetHCLKFreq>
 8004604:	4602      	mov	r2, r0
 8004606:	4b05      	ldr	r3, [pc, #20]	@ (800461c <HAL_RCC_GetPCLK1Freq+0x20>)
 8004608:	685b      	ldr	r3, [r3, #4]
 800460a:	0a1b      	lsrs	r3, r3, #8
 800460c:	f003 0307 	and.w	r3, r3, #7
 8004610:	4903      	ldr	r1, [pc, #12]	@ (8004620 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004612:	5ccb      	ldrb	r3, [r1, r3]
 8004614:	fa22 f303 	lsr.w	r3, r2, r3
 8004618:	4618      	mov	r0, r3
 800461a:	bd80      	pop	{r7, pc}
 800461c:	40021000 	.word	0x40021000
 8004620:	08005768 	.word	0x08005768

08004624 <RCC_Delay>:
 8004624:	b480      	push	{r7}
 8004626:	b085      	sub	sp, #20
 8004628:	af00      	add	r7, sp, #0
 800462a:	6078      	str	r0, [r7, #4]
 800462c:	4b0a      	ldr	r3, [pc, #40]	@ (8004658 <RCC_Delay+0x34>)
 800462e:	681b      	ldr	r3, [r3, #0]
 8004630:	4a0a      	ldr	r2, [pc, #40]	@ (800465c <RCC_Delay+0x38>)
 8004632:	fba2 2303 	umull	r2, r3, r2, r3
 8004636:	0a5b      	lsrs	r3, r3, #9
 8004638:	687a      	ldr	r2, [r7, #4]
 800463a:	fb02 f303 	mul.w	r3, r2, r3
 800463e:	60fb      	str	r3, [r7, #12]
 8004640:	bf00      	nop
 8004642:	68fb      	ldr	r3, [r7, #12]
 8004644:	1e5a      	subs	r2, r3, #1
 8004646:	60fa      	str	r2, [r7, #12]
 8004648:	2b00      	cmp	r3, #0
 800464a:	d1f9      	bne.n	8004640 <RCC_Delay+0x1c>
 800464c:	bf00      	nop
 800464e:	bf00      	nop
 8004650:	3714      	adds	r7, #20
 8004652:	46bd      	mov	sp, r7
 8004654:	bc80      	pop	{r7}
 8004656:	4770      	bx	lr
 8004658:	20000088 	.word	0x20000088
 800465c:	10624dd3 	.word	0x10624dd3

08004660 <rand>:
 8004660:	4b16      	ldr	r3, [pc, #88]	@ (80046bc <rand+0x5c>)
 8004662:	b510      	push	{r4, lr}
 8004664:	681c      	ldr	r4, [r3, #0]
 8004666:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8004668:	b9b3      	cbnz	r3, 8004698 <rand+0x38>
 800466a:	2018      	movs	r0, #24
 800466c:	f000 fa1e 	bl	8004aac <malloc>
 8004670:	4602      	mov	r2, r0
 8004672:	6320      	str	r0, [r4, #48]	@ 0x30
 8004674:	b920      	cbnz	r0, 8004680 <rand+0x20>
 8004676:	2152      	movs	r1, #82	@ 0x52
 8004678:	4b11      	ldr	r3, [pc, #68]	@ (80046c0 <rand+0x60>)
 800467a:	4812      	ldr	r0, [pc, #72]	@ (80046c4 <rand+0x64>)
 800467c:	f000 f9b0 	bl	80049e0 <__assert_func>
 8004680:	4911      	ldr	r1, [pc, #68]	@ (80046c8 <rand+0x68>)
 8004682:	4b12      	ldr	r3, [pc, #72]	@ (80046cc <rand+0x6c>)
 8004684:	e9c0 1300 	strd	r1, r3, [r0]
 8004688:	4b11      	ldr	r3, [pc, #68]	@ (80046d0 <rand+0x70>)
 800468a:	2100      	movs	r1, #0
 800468c:	6083      	str	r3, [r0, #8]
 800468e:	230b      	movs	r3, #11
 8004690:	8183      	strh	r3, [r0, #12]
 8004692:	2001      	movs	r0, #1
 8004694:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8004698:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800469a:	480e      	ldr	r0, [pc, #56]	@ (80046d4 <rand+0x74>)
 800469c:	690b      	ldr	r3, [r1, #16]
 800469e:	694c      	ldr	r4, [r1, #20]
 80046a0:	4358      	muls	r0, r3
 80046a2:	4a0d      	ldr	r2, [pc, #52]	@ (80046d8 <rand+0x78>)
 80046a4:	fb02 0004 	mla	r0, r2, r4, r0
 80046a8:	fba3 3202 	umull	r3, r2, r3, r2
 80046ac:	3301      	adds	r3, #1
 80046ae:	eb40 0002 	adc.w	r0, r0, r2
 80046b2:	e9c1 3004 	strd	r3, r0, [r1, #16]
 80046b6:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 80046ba:	bd10      	pop	{r4, pc}
 80046bc:	200000a0 	.word	0x200000a0
 80046c0:	08005782 	.word	0x08005782
 80046c4:	08005799 	.word	0x08005799
 80046c8:	abcd330e 	.word	0xabcd330e
 80046cc:	e66d1234 	.word	0xe66d1234
 80046d0:	0005deec 	.word	0x0005deec
 80046d4:	5851f42d 	.word	0x5851f42d
 80046d8:	4c957f2d 	.word	0x4c957f2d

080046dc <std>:
 80046dc:	2300      	movs	r3, #0
 80046de:	b510      	push	{r4, lr}
 80046e0:	4604      	mov	r4, r0
 80046e2:	e9c0 3300 	strd	r3, r3, [r0]
 80046e6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80046ea:	6083      	str	r3, [r0, #8]
 80046ec:	8181      	strh	r1, [r0, #12]
 80046ee:	6643      	str	r3, [r0, #100]	@ 0x64
 80046f0:	81c2      	strh	r2, [r0, #14]
 80046f2:	6183      	str	r3, [r0, #24]
 80046f4:	4619      	mov	r1, r3
 80046f6:	2208      	movs	r2, #8
 80046f8:	305c      	adds	r0, #92	@ 0x5c
 80046fa:	f000 f8f4 	bl	80048e6 <memset>
 80046fe:	4b0d      	ldr	r3, [pc, #52]	@ (8004734 <std+0x58>)
 8004700:	6224      	str	r4, [r4, #32]
 8004702:	6263      	str	r3, [r4, #36]	@ 0x24
 8004704:	4b0c      	ldr	r3, [pc, #48]	@ (8004738 <std+0x5c>)
 8004706:	62a3      	str	r3, [r4, #40]	@ 0x28
 8004708:	4b0c      	ldr	r3, [pc, #48]	@ (800473c <std+0x60>)
 800470a:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800470c:	4b0c      	ldr	r3, [pc, #48]	@ (8004740 <std+0x64>)
 800470e:	6323      	str	r3, [r4, #48]	@ 0x30
 8004710:	4b0c      	ldr	r3, [pc, #48]	@ (8004744 <std+0x68>)
 8004712:	429c      	cmp	r4, r3
 8004714:	d006      	beq.n	8004724 <std+0x48>
 8004716:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800471a:	4294      	cmp	r4, r2
 800471c:	d002      	beq.n	8004724 <std+0x48>
 800471e:	33d0      	adds	r3, #208	@ 0xd0
 8004720:	429c      	cmp	r4, r3
 8004722:	d105      	bne.n	8004730 <std+0x54>
 8004724:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8004728:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800472c:	f000 b954 	b.w	80049d8 <__retarget_lock_init_recursive>
 8004730:	bd10      	pop	{r4, pc}
 8004732:	bf00      	nop
 8004734:	08004861 	.word	0x08004861
 8004738:	08004883 	.word	0x08004883
 800473c:	080048bb 	.word	0x080048bb
 8004740:	080048df 	.word	0x080048df
 8004744:	2000081c 	.word	0x2000081c

08004748 <stdio_exit_handler>:
 8004748:	4a02      	ldr	r2, [pc, #8]	@ (8004754 <stdio_exit_handler+0xc>)
 800474a:	4903      	ldr	r1, [pc, #12]	@ (8004758 <stdio_exit_handler+0x10>)
 800474c:	4803      	ldr	r0, [pc, #12]	@ (800475c <stdio_exit_handler+0x14>)
 800474e:	f000 b869 	b.w	8004824 <_fwalk_sglue>
 8004752:	bf00      	nop
 8004754:	20000094 	.word	0x20000094
 8004758:	08004d19 	.word	0x08004d19
 800475c:	200000a4 	.word	0x200000a4

08004760 <cleanup_stdio>:
 8004760:	6841      	ldr	r1, [r0, #4]
 8004762:	4b0c      	ldr	r3, [pc, #48]	@ (8004794 <cleanup_stdio+0x34>)
 8004764:	b510      	push	{r4, lr}
 8004766:	4299      	cmp	r1, r3
 8004768:	4604      	mov	r4, r0
 800476a:	d001      	beq.n	8004770 <cleanup_stdio+0x10>
 800476c:	f000 fad4 	bl	8004d18 <_fflush_r>
 8004770:	68a1      	ldr	r1, [r4, #8]
 8004772:	4b09      	ldr	r3, [pc, #36]	@ (8004798 <cleanup_stdio+0x38>)
 8004774:	4299      	cmp	r1, r3
 8004776:	d002      	beq.n	800477e <cleanup_stdio+0x1e>
 8004778:	4620      	mov	r0, r4
 800477a:	f000 facd 	bl	8004d18 <_fflush_r>
 800477e:	68e1      	ldr	r1, [r4, #12]
 8004780:	4b06      	ldr	r3, [pc, #24]	@ (800479c <cleanup_stdio+0x3c>)
 8004782:	4299      	cmp	r1, r3
 8004784:	d004      	beq.n	8004790 <cleanup_stdio+0x30>
 8004786:	4620      	mov	r0, r4
 8004788:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800478c:	f000 bac4 	b.w	8004d18 <_fflush_r>
 8004790:	bd10      	pop	{r4, pc}
 8004792:	bf00      	nop
 8004794:	2000081c 	.word	0x2000081c
 8004798:	20000884 	.word	0x20000884
 800479c:	200008ec 	.word	0x200008ec

080047a0 <global_stdio_init.part.0>:
 80047a0:	b510      	push	{r4, lr}
 80047a2:	4b0b      	ldr	r3, [pc, #44]	@ (80047d0 <global_stdio_init.part.0+0x30>)
 80047a4:	4c0b      	ldr	r4, [pc, #44]	@ (80047d4 <global_stdio_init.part.0+0x34>)
 80047a6:	4a0c      	ldr	r2, [pc, #48]	@ (80047d8 <global_stdio_init.part.0+0x38>)
 80047a8:	4620      	mov	r0, r4
 80047aa:	601a      	str	r2, [r3, #0]
 80047ac:	2104      	movs	r1, #4
 80047ae:	2200      	movs	r2, #0
 80047b0:	f7ff ff94 	bl	80046dc <std>
 80047b4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80047b8:	2201      	movs	r2, #1
 80047ba:	2109      	movs	r1, #9
 80047bc:	f7ff ff8e 	bl	80046dc <std>
 80047c0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80047c4:	2202      	movs	r2, #2
 80047c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80047ca:	2112      	movs	r1, #18
 80047cc:	f7ff bf86 	b.w	80046dc <std>
 80047d0:	20000954 	.word	0x20000954
 80047d4:	2000081c 	.word	0x2000081c
 80047d8:	08004749 	.word	0x08004749

080047dc <__sfp_lock_acquire>:
 80047dc:	4801      	ldr	r0, [pc, #4]	@ (80047e4 <__sfp_lock_acquire+0x8>)
 80047de:	f000 b8fc 	b.w	80049da <__retarget_lock_acquire_recursive>
 80047e2:	bf00      	nop
 80047e4:	2000095d 	.word	0x2000095d

080047e8 <__sfp_lock_release>:
 80047e8:	4801      	ldr	r0, [pc, #4]	@ (80047f0 <__sfp_lock_release+0x8>)
 80047ea:	f000 b8f7 	b.w	80049dc <__retarget_lock_release_recursive>
 80047ee:	bf00      	nop
 80047f0:	2000095d 	.word	0x2000095d

080047f4 <__sinit>:
 80047f4:	b510      	push	{r4, lr}
 80047f6:	4604      	mov	r4, r0
 80047f8:	f7ff fff0 	bl	80047dc <__sfp_lock_acquire>
 80047fc:	6a23      	ldr	r3, [r4, #32]
 80047fe:	b11b      	cbz	r3, 8004808 <__sinit+0x14>
 8004800:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004804:	f7ff bff0 	b.w	80047e8 <__sfp_lock_release>
 8004808:	4b04      	ldr	r3, [pc, #16]	@ (800481c <__sinit+0x28>)
 800480a:	6223      	str	r3, [r4, #32]
 800480c:	4b04      	ldr	r3, [pc, #16]	@ (8004820 <__sinit+0x2c>)
 800480e:	681b      	ldr	r3, [r3, #0]
 8004810:	2b00      	cmp	r3, #0
 8004812:	d1f5      	bne.n	8004800 <__sinit+0xc>
 8004814:	f7ff ffc4 	bl	80047a0 <global_stdio_init.part.0>
 8004818:	e7f2      	b.n	8004800 <__sinit+0xc>
 800481a:	bf00      	nop
 800481c:	08004761 	.word	0x08004761
 8004820:	20000954 	.word	0x20000954

08004824 <_fwalk_sglue>:
 8004824:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004828:	4607      	mov	r7, r0
 800482a:	4688      	mov	r8, r1
 800482c:	4614      	mov	r4, r2
 800482e:	2600      	movs	r6, #0
 8004830:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004834:	f1b9 0901 	subs.w	r9, r9, #1
 8004838:	d505      	bpl.n	8004846 <_fwalk_sglue+0x22>
 800483a:	6824      	ldr	r4, [r4, #0]
 800483c:	2c00      	cmp	r4, #0
 800483e:	d1f7      	bne.n	8004830 <_fwalk_sglue+0xc>
 8004840:	4630      	mov	r0, r6
 8004842:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004846:	89ab      	ldrh	r3, [r5, #12]
 8004848:	2b01      	cmp	r3, #1
 800484a:	d907      	bls.n	800485c <_fwalk_sglue+0x38>
 800484c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004850:	3301      	adds	r3, #1
 8004852:	d003      	beq.n	800485c <_fwalk_sglue+0x38>
 8004854:	4629      	mov	r1, r5
 8004856:	4638      	mov	r0, r7
 8004858:	47c0      	blx	r8
 800485a:	4306      	orrs	r6, r0
 800485c:	3568      	adds	r5, #104	@ 0x68
 800485e:	e7e9      	b.n	8004834 <_fwalk_sglue+0x10>

08004860 <__sread>:
 8004860:	b510      	push	{r4, lr}
 8004862:	460c      	mov	r4, r1
 8004864:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004868:	f000 f868 	bl	800493c <_read_r>
 800486c:	2800      	cmp	r0, #0
 800486e:	bfab      	itete	ge
 8004870:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8004872:	89a3      	ldrhlt	r3, [r4, #12]
 8004874:	181b      	addge	r3, r3, r0
 8004876:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800487a:	bfac      	ite	ge
 800487c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800487e:	81a3      	strhlt	r3, [r4, #12]
 8004880:	bd10      	pop	{r4, pc}

08004882 <__swrite>:
 8004882:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004886:	461f      	mov	r7, r3
 8004888:	898b      	ldrh	r3, [r1, #12]
 800488a:	4605      	mov	r5, r0
 800488c:	05db      	lsls	r3, r3, #23
 800488e:	460c      	mov	r4, r1
 8004890:	4616      	mov	r6, r2
 8004892:	d505      	bpl.n	80048a0 <__swrite+0x1e>
 8004894:	2302      	movs	r3, #2
 8004896:	2200      	movs	r2, #0
 8004898:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800489c:	f000 f83c 	bl	8004918 <_lseek_r>
 80048a0:	89a3      	ldrh	r3, [r4, #12]
 80048a2:	4632      	mov	r2, r6
 80048a4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80048a8:	81a3      	strh	r3, [r4, #12]
 80048aa:	4628      	mov	r0, r5
 80048ac:	463b      	mov	r3, r7
 80048ae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80048b2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80048b6:	f000 b853 	b.w	8004960 <_write_r>

080048ba <__sseek>:
 80048ba:	b510      	push	{r4, lr}
 80048bc:	460c      	mov	r4, r1
 80048be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80048c2:	f000 f829 	bl	8004918 <_lseek_r>
 80048c6:	1c43      	adds	r3, r0, #1
 80048c8:	89a3      	ldrh	r3, [r4, #12]
 80048ca:	bf15      	itete	ne
 80048cc:	6560      	strne	r0, [r4, #84]	@ 0x54
 80048ce:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80048d2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80048d6:	81a3      	strheq	r3, [r4, #12]
 80048d8:	bf18      	it	ne
 80048da:	81a3      	strhne	r3, [r4, #12]
 80048dc:	bd10      	pop	{r4, pc}

080048de <__sclose>:
 80048de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80048e2:	f000 b809 	b.w	80048f8 <_close_r>

080048e6 <memset>:
 80048e6:	4603      	mov	r3, r0
 80048e8:	4402      	add	r2, r0
 80048ea:	4293      	cmp	r3, r2
 80048ec:	d100      	bne.n	80048f0 <memset+0xa>
 80048ee:	4770      	bx	lr
 80048f0:	f803 1b01 	strb.w	r1, [r3], #1
 80048f4:	e7f9      	b.n	80048ea <memset+0x4>
	...

080048f8 <_close_r>:
 80048f8:	b538      	push	{r3, r4, r5, lr}
 80048fa:	2300      	movs	r3, #0
 80048fc:	4d05      	ldr	r5, [pc, #20]	@ (8004914 <_close_r+0x1c>)
 80048fe:	4604      	mov	r4, r0
 8004900:	4608      	mov	r0, r1
 8004902:	602b      	str	r3, [r5, #0]
 8004904:	f7fd fe7d 	bl	8002602 <_close>
 8004908:	1c43      	adds	r3, r0, #1
 800490a:	d102      	bne.n	8004912 <_close_r+0x1a>
 800490c:	682b      	ldr	r3, [r5, #0]
 800490e:	b103      	cbz	r3, 8004912 <_close_r+0x1a>
 8004910:	6023      	str	r3, [r4, #0]
 8004912:	bd38      	pop	{r3, r4, r5, pc}
 8004914:	20000958 	.word	0x20000958

08004918 <_lseek_r>:
 8004918:	b538      	push	{r3, r4, r5, lr}
 800491a:	4604      	mov	r4, r0
 800491c:	4608      	mov	r0, r1
 800491e:	4611      	mov	r1, r2
 8004920:	2200      	movs	r2, #0
 8004922:	4d05      	ldr	r5, [pc, #20]	@ (8004938 <_lseek_r+0x20>)
 8004924:	602a      	str	r2, [r5, #0]
 8004926:	461a      	mov	r2, r3
 8004928:	f7fd fe8f 	bl	800264a <_lseek>
 800492c:	1c43      	adds	r3, r0, #1
 800492e:	d102      	bne.n	8004936 <_lseek_r+0x1e>
 8004930:	682b      	ldr	r3, [r5, #0]
 8004932:	b103      	cbz	r3, 8004936 <_lseek_r+0x1e>
 8004934:	6023      	str	r3, [r4, #0]
 8004936:	bd38      	pop	{r3, r4, r5, pc}
 8004938:	20000958 	.word	0x20000958

0800493c <_read_r>:
 800493c:	b538      	push	{r3, r4, r5, lr}
 800493e:	4604      	mov	r4, r0
 8004940:	4608      	mov	r0, r1
 8004942:	4611      	mov	r1, r2
 8004944:	2200      	movs	r2, #0
 8004946:	4d05      	ldr	r5, [pc, #20]	@ (800495c <_read_r+0x20>)
 8004948:	602a      	str	r2, [r5, #0]
 800494a:	461a      	mov	r2, r3
 800494c:	f7fd fe20 	bl	8002590 <_read>
 8004950:	1c43      	adds	r3, r0, #1
 8004952:	d102      	bne.n	800495a <_read_r+0x1e>
 8004954:	682b      	ldr	r3, [r5, #0]
 8004956:	b103      	cbz	r3, 800495a <_read_r+0x1e>
 8004958:	6023      	str	r3, [r4, #0]
 800495a:	bd38      	pop	{r3, r4, r5, pc}
 800495c:	20000958 	.word	0x20000958

08004960 <_write_r>:
 8004960:	b538      	push	{r3, r4, r5, lr}
 8004962:	4604      	mov	r4, r0
 8004964:	4608      	mov	r0, r1
 8004966:	4611      	mov	r1, r2
 8004968:	2200      	movs	r2, #0
 800496a:	4d05      	ldr	r5, [pc, #20]	@ (8004980 <_write_r+0x20>)
 800496c:	602a      	str	r2, [r5, #0]
 800496e:	461a      	mov	r2, r3
 8004970:	f7fd fe2b 	bl	80025ca <_write>
 8004974:	1c43      	adds	r3, r0, #1
 8004976:	d102      	bne.n	800497e <_write_r+0x1e>
 8004978:	682b      	ldr	r3, [r5, #0]
 800497a:	b103      	cbz	r3, 800497e <_write_r+0x1e>
 800497c:	6023      	str	r3, [r4, #0]
 800497e:	bd38      	pop	{r3, r4, r5, pc}
 8004980:	20000958 	.word	0x20000958

08004984 <__errno>:
 8004984:	4b01      	ldr	r3, [pc, #4]	@ (800498c <__errno+0x8>)
 8004986:	6818      	ldr	r0, [r3, #0]
 8004988:	4770      	bx	lr
 800498a:	bf00      	nop
 800498c:	200000a0 	.word	0x200000a0

08004990 <__libc_init_array>:
 8004990:	b570      	push	{r4, r5, r6, lr}
 8004992:	2600      	movs	r6, #0
 8004994:	4d0c      	ldr	r5, [pc, #48]	@ (80049c8 <__libc_init_array+0x38>)
 8004996:	4c0d      	ldr	r4, [pc, #52]	@ (80049cc <__libc_init_array+0x3c>)
 8004998:	1b64      	subs	r4, r4, r5
 800499a:	10a4      	asrs	r4, r4, #2
 800499c:	42a6      	cmp	r6, r4
 800499e:	d109      	bne.n	80049b4 <__libc_init_array+0x24>
 80049a0:	f000 fece 	bl	8005740 <_init>
 80049a4:	2600      	movs	r6, #0
 80049a6:	4d0a      	ldr	r5, [pc, #40]	@ (80049d0 <__libc_init_array+0x40>)
 80049a8:	4c0a      	ldr	r4, [pc, #40]	@ (80049d4 <__libc_init_array+0x44>)
 80049aa:	1b64      	subs	r4, r4, r5
 80049ac:	10a4      	asrs	r4, r4, #2
 80049ae:	42a6      	cmp	r6, r4
 80049b0:	d105      	bne.n	80049be <__libc_init_array+0x2e>
 80049b2:	bd70      	pop	{r4, r5, r6, pc}
 80049b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80049b8:	4798      	blx	r3
 80049ba:	3601      	adds	r6, #1
 80049bc:	e7ee      	b.n	800499c <__libc_init_array+0xc>
 80049be:	f855 3b04 	ldr.w	r3, [r5], #4
 80049c2:	4798      	blx	r3
 80049c4:	3601      	adds	r6, #1
 80049c6:	e7f2      	b.n	80049ae <__libc_init_array+0x1e>
 80049c8:	08005868 	.word	0x08005868
 80049cc:	08005868 	.word	0x08005868
 80049d0:	08005868 	.word	0x08005868
 80049d4:	0800586c 	.word	0x0800586c

080049d8 <__retarget_lock_init_recursive>:
 80049d8:	4770      	bx	lr

080049da <__retarget_lock_acquire_recursive>:
 80049da:	4770      	bx	lr

080049dc <__retarget_lock_release_recursive>:
 80049dc:	4770      	bx	lr
	...

080049e0 <__assert_func>:
 80049e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80049e2:	4614      	mov	r4, r2
 80049e4:	461a      	mov	r2, r3
 80049e6:	4b09      	ldr	r3, [pc, #36]	@ (8004a0c <__assert_func+0x2c>)
 80049e8:	4605      	mov	r5, r0
 80049ea:	681b      	ldr	r3, [r3, #0]
 80049ec:	68d8      	ldr	r0, [r3, #12]
 80049ee:	b14c      	cbz	r4, 8004a04 <__assert_func+0x24>
 80049f0:	4b07      	ldr	r3, [pc, #28]	@ (8004a10 <__assert_func+0x30>)
 80049f2:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80049f6:	9100      	str	r1, [sp, #0]
 80049f8:	462b      	mov	r3, r5
 80049fa:	4906      	ldr	r1, [pc, #24]	@ (8004a14 <__assert_func+0x34>)
 80049fc:	f000 f9b4 	bl	8004d68 <fiprintf>
 8004a00:	f000 f9d4 	bl	8004dac <abort>
 8004a04:	4b04      	ldr	r3, [pc, #16]	@ (8004a18 <__assert_func+0x38>)
 8004a06:	461c      	mov	r4, r3
 8004a08:	e7f3      	b.n	80049f2 <__assert_func+0x12>
 8004a0a:	bf00      	nop
 8004a0c:	200000a0 	.word	0x200000a0
 8004a10:	080057f1 	.word	0x080057f1
 8004a14:	080057fe 	.word	0x080057fe
 8004a18:	0800582c 	.word	0x0800582c

08004a1c <_free_r>:
 8004a1c:	b538      	push	{r3, r4, r5, lr}
 8004a1e:	4605      	mov	r5, r0
 8004a20:	2900      	cmp	r1, #0
 8004a22:	d040      	beq.n	8004aa6 <_free_r+0x8a>
 8004a24:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004a28:	1f0c      	subs	r4, r1, #4
 8004a2a:	2b00      	cmp	r3, #0
 8004a2c:	bfb8      	it	lt
 8004a2e:	18e4      	addlt	r4, r4, r3
 8004a30:	f000 f8e6 	bl	8004c00 <__malloc_lock>
 8004a34:	4a1c      	ldr	r2, [pc, #112]	@ (8004aa8 <_free_r+0x8c>)
 8004a36:	6813      	ldr	r3, [r2, #0]
 8004a38:	b933      	cbnz	r3, 8004a48 <_free_r+0x2c>
 8004a3a:	6063      	str	r3, [r4, #4]
 8004a3c:	6014      	str	r4, [r2, #0]
 8004a3e:	4628      	mov	r0, r5
 8004a40:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004a44:	f000 b8e2 	b.w	8004c0c <__malloc_unlock>
 8004a48:	42a3      	cmp	r3, r4
 8004a4a:	d908      	bls.n	8004a5e <_free_r+0x42>
 8004a4c:	6820      	ldr	r0, [r4, #0]
 8004a4e:	1821      	adds	r1, r4, r0
 8004a50:	428b      	cmp	r3, r1
 8004a52:	bf01      	itttt	eq
 8004a54:	6819      	ldreq	r1, [r3, #0]
 8004a56:	685b      	ldreq	r3, [r3, #4]
 8004a58:	1809      	addeq	r1, r1, r0
 8004a5a:	6021      	streq	r1, [r4, #0]
 8004a5c:	e7ed      	b.n	8004a3a <_free_r+0x1e>
 8004a5e:	461a      	mov	r2, r3
 8004a60:	685b      	ldr	r3, [r3, #4]
 8004a62:	b10b      	cbz	r3, 8004a68 <_free_r+0x4c>
 8004a64:	42a3      	cmp	r3, r4
 8004a66:	d9fa      	bls.n	8004a5e <_free_r+0x42>
 8004a68:	6811      	ldr	r1, [r2, #0]
 8004a6a:	1850      	adds	r0, r2, r1
 8004a6c:	42a0      	cmp	r0, r4
 8004a6e:	d10b      	bne.n	8004a88 <_free_r+0x6c>
 8004a70:	6820      	ldr	r0, [r4, #0]
 8004a72:	4401      	add	r1, r0
 8004a74:	1850      	adds	r0, r2, r1
 8004a76:	4283      	cmp	r3, r0
 8004a78:	6011      	str	r1, [r2, #0]
 8004a7a:	d1e0      	bne.n	8004a3e <_free_r+0x22>
 8004a7c:	6818      	ldr	r0, [r3, #0]
 8004a7e:	685b      	ldr	r3, [r3, #4]
 8004a80:	4408      	add	r0, r1
 8004a82:	6010      	str	r0, [r2, #0]
 8004a84:	6053      	str	r3, [r2, #4]
 8004a86:	e7da      	b.n	8004a3e <_free_r+0x22>
 8004a88:	d902      	bls.n	8004a90 <_free_r+0x74>
 8004a8a:	230c      	movs	r3, #12
 8004a8c:	602b      	str	r3, [r5, #0]
 8004a8e:	e7d6      	b.n	8004a3e <_free_r+0x22>
 8004a90:	6820      	ldr	r0, [r4, #0]
 8004a92:	1821      	adds	r1, r4, r0
 8004a94:	428b      	cmp	r3, r1
 8004a96:	bf01      	itttt	eq
 8004a98:	6819      	ldreq	r1, [r3, #0]
 8004a9a:	685b      	ldreq	r3, [r3, #4]
 8004a9c:	1809      	addeq	r1, r1, r0
 8004a9e:	6021      	streq	r1, [r4, #0]
 8004aa0:	6063      	str	r3, [r4, #4]
 8004aa2:	6054      	str	r4, [r2, #4]
 8004aa4:	e7cb      	b.n	8004a3e <_free_r+0x22>
 8004aa6:	bd38      	pop	{r3, r4, r5, pc}
 8004aa8:	20000964 	.word	0x20000964

08004aac <malloc>:
 8004aac:	4b02      	ldr	r3, [pc, #8]	@ (8004ab8 <malloc+0xc>)
 8004aae:	4601      	mov	r1, r0
 8004ab0:	6818      	ldr	r0, [r3, #0]
 8004ab2:	f000 b825 	b.w	8004b00 <_malloc_r>
 8004ab6:	bf00      	nop
 8004ab8:	200000a0 	.word	0x200000a0

08004abc <sbrk_aligned>:
 8004abc:	b570      	push	{r4, r5, r6, lr}
 8004abe:	4e0f      	ldr	r6, [pc, #60]	@ (8004afc <sbrk_aligned+0x40>)
 8004ac0:	460c      	mov	r4, r1
 8004ac2:	6831      	ldr	r1, [r6, #0]
 8004ac4:	4605      	mov	r5, r0
 8004ac6:	b911      	cbnz	r1, 8004ace <sbrk_aligned+0x12>
 8004ac8:	f000 f960 	bl	8004d8c <_sbrk_r>
 8004acc:	6030      	str	r0, [r6, #0]
 8004ace:	4621      	mov	r1, r4
 8004ad0:	4628      	mov	r0, r5
 8004ad2:	f000 f95b 	bl	8004d8c <_sbrk_r>
 8004ad6:	1c43      	adds	r3, r0, #1
 8004ad8:	d103      	bne.n	8004ae2 <sbrk_aligned+0x26>
 8004ada:	f04f 34ff 	mov.w	r4, #4294967295
 8004ade:	4620      	mov	r0, r4
 8004ae0:	bd70      	pop	{r4, r5, r6, pc}
 8004ae2:	1cc4      	adds	r4, r0, #3
 8004ae4:	f024 0403 	bic.w	r4, r4, #3
 8004ae8:	42a0      	cmp	r0, r4
 8004aea:	d0f8      	beq.n	8004ade <sbrk_aligned+0x22>
 8004aec:	1a21      	subs	r1, r4, r0
 8004aee:	4628      	mov	r0, r5
 8004af0:	f000 f94c 	bl	8004d8c <_sbrk_r>
 8004af4:	3001      	adds	r0, #1
 8004af6:	d1f2      	bne.n	8004ade <sbrk_aligned+0x22>
 8004af8:	e7ef      	b.n	8004ada <sbrk_aligned+0x1e>
 8004afa:	bf00      	nop
 8004afc:	20000960 	.word	0x20000960

08004b00 <_malloc_r>:
 8004b00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004b04:	1ccd      	adds	r5, r1, #3
 8004b06:	f025 0503 	bic.w	r5, r5, #3
 8004b0a:	3508      	adds	r5, #8
 8004b0c:	2d0c      	cmp	r5, #12
 8004b0e:	bf38      	it	cc
 8004b10:	250c      	movcc	r5, #12
 8004b12:	2d00      	cmp	r5, #0
 8004b14:	4606      	mov	r6, r0
 8004b16:	db01      	blt.n	8004b1c <_malloc_r+0x1c>
 8004b18:	42a9      	cmp	r1, r5
 8004b1a:	d904      	bls.n	8004b26 <_malloc_r+0x26>
 8004b1c:	230c      	movs	r3, #12
 8004b1e:	6033      	str	r3, [r6, #0]
 8004b20:	2000      	movs	r0, #0
 8004b22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004b26:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8004bfc <_malloc_r+0xfc>
 8004b2a:	f000 f869 	bl	8004c00 <__malloc_lock>
 8004b2e:	f8d8 3000 	ldr.w	r3, [r8]
 8004b32:	461c      	mov	r4, r3
 8004b34:	bb44      	cbnz	r4, 8004b88 <_malloc_r+0x88>
 8004b36:	4629      	mov	r1, r5
 8004b38:	4630      	mov	r0, r6
 8004b3a:	f7ff ffbf 	bl	8004abc <sbrk_aligned>
 8004b3e:	1c43      	adds	r3, r0, #1
 8004b40:	4604      	mov	r4, r0
 8004b42:	d158      	bne.n	8004bf6 <_malloc_r+0xf6>
 8004b44:	f8d8 4000 	ldr.w	r4, [r8]
 8004b48:	4627      	mov	r7, r4
 8004b4a:	2f00      	cmp	r7, #0
 8004b4c:	d143      	bne.n	8004bd6 <_malloc_r+0xd6>
 8004b4e:	2c00      	cmp	r4, #0
 8004b50:	d04b      	beq.n	8004bea <_malloc_r+0xea>
 8004b52:	6823      	ldr	r3, [r4, #0]
 8004b54:	4639      	mov	r1, r7
 8004b56:	4630      	mov	r0, r6
 8004b58:	eb04 0903 	add.w	r9, r4, r3
 8004b5c:	f000 f916 	bl	8004d8c <_sbrk_r>
 8004b60:	4581      	cmp	r9, r0
 8004b62:	d142      	bne.n	8004bea <_malloc_r+0xea>
 8004b64:	6821      	ldr	r1, [r4, #0]
 8004b66:	4630      	mov	r0, r6
 8004b68:	1a6d      	subs	r5, r5, r1
 8004b6a:	4629      	mov	r1, r5
 8004b6c:	f7ff ffa6 	bl	8004abc <sbrk_aligned>
 8004b70:	3001      	adds	r0, #1
 8004b72:	d03a      	beq.n	8004bea <_malloc_r+0xea>
 8004b74:	6823      	ldr	r3, [r4, #0]
 8004b76:	442b      	add	r3, r5
 8004b78:	6023      	str	r3, [r4, #0]
 8004b7a:	f8d8 3000 	ldr.w	r3, [r8]
 8004b7e:	685a      	ldr	r2, [r3, #4]
 8004b80:	bb62      	cbnz	r2, 8004bdc <_malloc_r+0xdc>
 8004b82:	f8c8 7000 	str.w	r7, [r8]
 8004b86:	e00f      	b.n	8004ba8 <_malloc_r+0xa8>
 8004b88:	6822      	ldr	r2, [r4, #0]
 8004b8a:	1b52      	subs	r2, r2, r5
 8004b8c:	d420      	bmi.n	8004bd0 <_malloc_r+0xd0>
 8004b8e:	2a0b      	cmp	r2, #11
 8004b90:	d917      	bls.n	8004bc2 <_malloc_r+0xc2>
 8004b92:	1961      	adds	r1, r4, r5
 8004b94:	42a3      	cmp	r3, r4
 8004b96:	6025      	str	r5, [r4, #0]
 8004b98:	bf18      	it	ne
 8004b9a:	6059      	strne	r1, [r3, #4]
 8004b9c:	6863      	ldr	r3, [r4, #4]
 8004b9e:	bf08      	it	eq
 8004ba0:	f8c8 1000 	streq.w	r1, [r8]
 8004ba4:	5162      	str	r2, [r4, r5]
 8004ba6:	604b      	str	r3, [r1, #4]
 8004ba8:	4630      	mov	r0, r6
 8004baa:	f000 f82f 	bl	8004c0c <__malloc_unlock>
 8004bae:	f104 000b 	add.w	r0, r4, #11
 8004bb2:	1d23      	adds	r3, r4, #4
 8004bb4:	f020 0007 	bic.w	r0, r0, #7
 8004bb8:	1ac2      	subs	r2, r0, r3
 8004bba:	bf1c      	itt	ne
 8004bbc:	1a1b      	subne	r3, r3, r0
 8004bbe:	50a3      	strne	r3, [r4, r2]
 8004bc0:	e7af      	b.n	8004b22 <_malloc_r+0x22>
 8004bc2:	6862      	ldr	r2, [r4, #4]
 8004bc4:	42a3      	cmp	r3, r4
 8004bc6:	bf0c      	ite	eq
 8004bc8:	f8c8 2000 	streq.w	r2, [r8]
 8004bcc:	605a      	strne	r2, [r3, #4]
 8004bce:	e7eb      	b.n	8004ba8 <_malloc_r+0xa8>
 8004bd0:	4623      	mov	r3, r4
 8004bd2:	6864      	ldr	r4, [r4, #4]
 8004bd4:	e7ae      	b.n	8004b34 <_malloc_r+0x34>
 8004bd6:	463c      	mov	r4, r7
 8004bd8:	687f      	ldr	r7, [r7, #4]
 8004bda:	e7b6      	b.n	8004b4a <_malloc_r+0x4a>
 8004bdc:	461a      	mov	r2, r3
 8004bde:	685b      	ldr	r3, [r3, #4]
 8004be0:	42a3      	cmp	r3, r4
 8004be2:	d1fb      	bne.n	8004bdc <_malloc_r+0xdc>
 8004be4:	2300      	movs	r3, #0
 8004be6:	6053      	str	r3, [r2, #4]
 8004be8:	e7de      	b.n	8004ba8 <_malloc_r+0xa8>
 8004bea:	230c      	movs	r3, #12
 8004bec:	4630      	mov	r0, r6
 8004bee:	6033      	str	r3, [r6, #0]
 8004bf0:	f000 f80c 	bl	8004c0c <__malloc_unlock>
 8004bf4:	e794      	b.n	8004b20 <_malloc_r+0x20>
 8004bf6:	6005      	str	r5, [r0, #0]
 8004bf8:	e7d6      	b.n	8004ba8 <_malloc_r+0xa8>
 8004bfa:	bf00      	nop
 8004bfc:	20000964 	.word	0x20000964

08004c00 <__malloc_lock>:
 8004c00:	4801      	ldr	r0, [pc, #4]	@ (8004c08 <__malloc_lock+0x8>)
 8004c02:	f7ff beea 	b.w	80049da <__retarget_lock_acquire_recursive>
 8004c06:	bf00      	nop
 8004c08:	2000095c 	.word	0x2000095c

08004c0c <__malloc_unlock>:
 8004c0c:	4801      	ldr	r0, [pc, #4]	@ (8004c14 <__malloc_unlock+0x8>)
 8004c0e:	f7ff bee5 	b.w	80049dc <__retarget_lock_release_recursive>
 8004c12:	bf00      	nop
 8004c14:	2000095c 	.word	0x2000095c

08004c18 <__sflush_r>:
 8004c18:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004c1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004c1e:	0716      	lsls	r6, r2, #28
 8004c20:	4605      	mov	r5, r0
 8004c22:	460c      	mov	r4, r1
 8004c24:	d454      	bmi.n	8004cd0 <__sflush_r+0xb8>
 8004c26:	684b      	ldr	r3, [r1, #4]
 8004c28:	2b00      	cmp	r3, #0
 8004c2a:	dc02      	bgt.n	8004c32 <__sflush_r+0x1a>
 8004c2c:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8004c2e:	2b00      	cmp	r3, #0
 8004c30:	dd48      	ble.n	8004cc4 <__sflush_r+0xac>
 8004c32:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8004c34:	2e00      	cmp	r6, #0
 8004c36:	d045      	beq.n	8004cc4 <__sflush_r+0xac>
 8004c38:	2300      	movs	r3, #0
 8004c3a:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8004c3e:	682f      	ldr	r7, [r5, #0]
 8004c40:	6a21      	ldr	r1, [r4, #32]
 8004c42:	602b      	str	r3, [r5, #0]
 8004c44:	d030      	beq.n	8004ca8 <__sflush_r+0x90>
 8004c46:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8004c48:	89a3      	ldrh	r3, [r4, #12]
 8004c4a:	0759      	lsls	r1, r3, #29
 8004c4c:	d505      	bpl.n	8004c5a <__sflush_r+0x42>
 8004c4e:	6863      	ldr	r3, [r4, #4]
 8004c50:	1ad2      	subs	r2, r2, r3
 8004c52:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8004c54:	b10b      	cbz	r3, 8004c5a <__sflush_r+0x42>
 8004c56:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004c58:	1ad2      	subs	r2, r2, r3
 8004c5a:	2300      	movs	r3, #0
 8004c5c:	4628      	mov	r0, r5
 8004c5e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8004c60:	6a21      	ldr	r1, [r4, #32]
 8004c62:	47b0      	blx	r6
 8004c64:	1c43      	adds	r3, r0, #1
 8004c66:	89a3      	ldrh	r3, [r4, #12]
 8004c68:	d106      	bne.n	8004c78 <__sflush_r+0x60>
 8004c6a:	6829      	ldr	r1, [r5, #0]
 8004c6c:	291d      	cmp	r1, #29
 8004c6e:	d82b      	bhi.n	8004cc8 <__sflush_r+0xb0>
 8004c70:	4a28      	ldr	r2, [pc, #160]	@ (8004d14 <__sflush_r+0xfc>)
 8004c72:	40ca      	lsrs	r2, r1
 8004c74:	07d6      	lsls	r6, r2, #31
 8004c76:	d527      	bpl.n	8004cc8 <__sflush_r+0xb0>
 8004c78:	2200      	movs	r2, #0
 8004c7a:	6062      	str	r2, [r4, #4]
 8004c7c:	6922      	ldr	r2, [r4, #16]
 8004c7e:	04d9      	lsls	r1, r3, #19
 8004c80:	6022      	str	r2, [r4, #0]
 8004c82:	d504      	bpl.n	8004c8e <__sflush_r+0x76>
 8004c84:	1c42      	adds	r2, r0, #1
 8004c86:	d101      	bne.n	8004c8c <__sflush_r+0x74>
 8004c88:	682b      	ldr	r3, [r5, #0]
 8004c8a:	b903      	cbnz	r3, 8004c8e <__sflush_r+0x76>
 8004c8c:	6560      	str	r0, [r4, #84]	@ 0x54
 8004c8e:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004c90:	602f      	str	r7, [r5, #0]
 8004c92:	b1b9      	cbz	r1, 8004cc4 <__sflush_r+0xac>
 8004c94:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004c98:	4299      	cmp	r1, r3
 8004c9a:	d002      	beq.n	8004ca2 <__sflush_r+0x8a>
 8004c9c:	4628      	mov	r0, r5
 8004c9e:	f7ff febd 	bl	8004a1c <_free_r>
 8004ca2:	2300      	movs	r3, #0
 8004ca4:	6363      	str	r3, [r4, #52]	@ 0x34
 8004ca6:	e00d      	b.n	8004cc4 <__sflush_r+0xac>
 8004ca8:	2301      	movs	r3, #1
 8004caa:	4628      	mov	r0, r5
 8004cac:	47b0      	blx	r6
 8004cae:	4602      	mov	r2, r0
 8004cb0:	1c50      	adds	r0, r2, #1
 8004cb2:	d1c9      	bne.n	8004c48 <__sflush_r+0x30>
 8004cb4:	682b      	ldr	r3, [r5, #0]
 8004cb6:	2b00      	cmp	r3, #0
 8004cb8:	d0c6      	beq.n	8004c48 <__sflush_r+0x30>
 8004cba:	2b1d      	cmp	r3, #29
 8004cbc:	d001      	beq.n	8004cc2 <__sflush_r+0xaa>
 8004cbe:	2b16      	cmp	r3, #22
 8004cc0:	d11d      	bne.n	8004cfe <__sflush_r+0xe6>
 8004cc2:	602f      	str	r7, [r5, #0]
 8004cc4:	2000      	movs	r0, #0
 8004cc6:	e021      	b.n	8004d0c <__sflush_r+0xf4>
 8004cc8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004ccc:	b21b      	sxth	r3, r3
 8004cce:	e01a      	b.n	8004d06 <__sflush_r+0xee>
 8004cd0:	690f      	ldr	r7, [r1, #16]
 8004cd2:	2f00      	cmp	r7, #0
 8004cd4:	d0f6      	beq.n	8004cc4 <__sflush_r+0xac>
 8004cd6:	0793      	lsls	r3, r2, #30
 8004cd8:	bf18      	it	ne
 8004cda:	2300      	movne	r3, #0
 8004cdc:	680e      	ldr	r6, [r1, #0]
 8004cde:	bf08      	it	eq
 8004ce0:	694b      	ldreq	r3, [r1, #20]
 8004ce2:	1bf6      	subs	r6, r6, r7
 8004ce4:	600f      	str	r7, [r1, #0]
 8004ce6:	608b      	str	r3, [r1, #8]
 8004ce8:	2e00      	cmp	r6, #0
 8004cea:	ddeb      	ble.n	8004cc4 <__sflush_r+0xac>
 8004cec:	4633      	mov	r3, r6
 8004cee:	463a      	mov	r2, r7
 8004cf0:	4628      	mov	r0, r5
 8004cf2:	6a21      	ldr	r1, [r4, #32]
 8004cf4:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8004cf8:	47e0      	blx	ip
 8004cfa:	2800      	cmp	r0, #0
 8004cfc:	dc07      	bgt.n	8004d0e <__sflush_r+0xf6>
 8004cfe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004d02:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004d06:	f04f 30ff 	mov.w	r0, #4294967295
 8004d0a:	81a3      	strh	r3, [r4, #12]
 8004d0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004d0e:	4407      	add	r7, r0
 8004d10:	1a36      	subs	r6, r6, r0
 8004d12:	e7e9      	b.n	8004ce8 <__sflush_r+0xd0>
 8004d14:	20400001 	.word	0x20400001

08004d18 <_fflush_r>:
 8004d18:	b538      	push	{r3, r4, r5, lr}
 8004d1a:	690b      	ldr	r3, [r1, #16]
 8004d1c:	4605      	mov	r5, r0
 8004d1e:	460c      	mov	r4, r1
 8004d20:	b913      	cbnz	r3, 8004d28 <_fflush_r+0x10>
 8004d22:	2500      	movs	r5, #0
 8004d24:	4628      	mov	r0, r5
 8004d26:	bd38      	pop	{r3, r4, r5, pc}
 8004d28:	b118      	cbz	r0, 8004d32 <_fflush_r+0x1a>
 8004d2a:	6a03      	ldr	r3, [r0, #32]
 8004d2c:	b90b      	cbnz	r3, 8004d32 <_fflush_r+0x1a>
 8004d2e:	f7ff fd61 	bl	80047f4 <__sinit>
 8004d32:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004d36:	2b00      	cmp	r3, #0
 8004d38:	d0f3      	beq.n	8004d22 <_fflush_r+0xa>
 8004d3a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8004d3c:	07d0      	lsls	r0, r2, #31
 8004d3e:	d404      	bmi.n	8004d4a <_fflush_r+0x32>
 8004d40:	0599      	lsls	r1, r3, #22
 8004d42:	d402      	bmi.n	8004d4a <_fflush_r+0x32>
 8004d44:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004d46:	f7ff fe48 	bl	80049da <__retarget_lock_acquire_recursive>
 8004d4a:	4628      	mov	r0, r5
 8004d4c:	4621      	mov	r1, r4
 8004d4e:	f7ff ff63 	bl	8004c18 <__sflush_r>
 8004d52:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004d54:	4605      	mov	r5, r0
 8004d56:	07da      	lsls	r2, r3, #31
 8004d58:	d4e4      	bmi.n	8004d24 <_fflush_r+0xc>
 8004d5a:	89a3      	ldrh	r3, [r4, #12]
 8004d5c:	059b      	lsls	r3, r3, #22
 8004d5e:	d4e1      	bmi.n	8004d24 <_fflush_r+0xc>
 8004d60:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004d62:	f7ff fe3b 	bl	80049dc <__retarget_lock_release_recursive>
 8004d66:	e7dd      	b.n	8004d24 <_fflush_r+0xc>

08004d68 <fiprintf>:
 8004d68:	b40e      	push	{r1, r2, r3}
 8004d6a:	b503      	push	{r0, r1, lr}
 8004d6c:	4601      	mov	r1, r0
 8004d6e:	ab03      	add	r3, sp, #12
 8004d70:	4805      	ldr	r0, [pc, #20]	@ (8004d88 <fiprintf+0x20>)
 8004d72:	f853 2b04 	ldr.w	r2, [r3], #4
 8004d76:	6800      	ldr	r0, [r0, #0]
 8004d78:	9301      	str	r3, [sp, #4]
 8004d7a:	f000 f845 	bl	8004e08 <_vfiprintf_r>
 8004d7e:	b002      	add	sp, #8
 8004d80:	f85d eb04 	ldr.w	lr, [sp], #4
 8004d84:	b003      	add	sp, #12
 8004d86:	4770      	bx	lr
 8004d88:	200000a0 	.word	0x200000a0

08004d8c <_sbrk_r>:
 8004d8c:	b538      	push	{r3, r4, r5, lr}
 8004d8e:	2300      	movs	r3, #0
 8004d90:	4d05      	ldr	r5, [pc, #20]	@ (8004da8 <_sbrk_r+0x1c>)
 8004d92:	4604      	mov	r4, r0
 8004d94:	4608      	mov	r0, r1
 8004d96:	602b      	str	r3, [r5, #0]
 8004d98:	f7fd fc64 	bl	8002664 <_sbrk>
 8004d9c:	1c43      	adds	r3, r0, #1
 8004d9e:	d102      	bne.n	8004da6 <_sbrk_r+0x1a>
 8004da0:	682b      	ldr	r3, [r5, #0]
 8004da2:	b103      	cbz	r3, 8004da6 <_sbrk_r+0x1a>
 8004da4:	6023      	str	r3, [r4, #0]
 8004da6:	bd38      	pop	{r3, r4, r5, pc}
 8004da8:	20000958 	.word	0x20000958

08004dac <abort>:
 8004dac:	2006      	movs	r0, #6
 8004dae:	b508      	push	{r3, lr}
 8004db0:	f000 fb8e 	bl	80054d0 <raise>
 8004db4:	2001      	movs	r0, #1
 8004db6:	f7fd fbe0 	bl	800257a <_exit>

08004dba <__sfputc_r>:
 8004dba:	6893      	ldr	r3, [r2, #8]
 8004dbc:	b410      	push	{r4}
 8004dbe:	3b01      	subs	r3, #1
 8004dc0:	2b00      	cmp	r3, #0
 8004dc2:	6093      	str	r3, [r2, #8]
 8004dc4:	da07      	bge.n	8004dd6 <__sfputc_r+0x1c>
 8004dc6:	6994      	ldr	r4, [r2, #24]
 8004dc8:	42a3      	cmp	r3, r4
 8004dca:	db01      	blt.n	8004dd0 <__sfputc_r+0x16>
 8004dcc:	290a      	cmp	r1, #10
 8004dce:	d102      	bne.n	8004dd6 <__sfputc_r+0x1c>
 8004dd0:	bc10      	pop	{r4}
 8004dd2:	f000 bac1 	b.w	8005358 <__swbuf_r>
 8004dd6:	6813      	ldr	r3, [r2, #0]
 8004dd8:	1c58      	adds	r0, r3, #1
 8004dda:	6010      	str	r0, [r2, #0]
 8004ddc:	7019      	strb	r1, [r3, #0]
 8004dde:	4608      	mov	r0, r1
 8004de0:	bc10      	pop	{r4}
 8004de2:	4770      	bx	lr

08004de4 <__sfputs_r>:
 8004de4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004de6:	4606      	mov	r6, r0
 8004de8:	460f      	mov	r7, r1
 8004dea:	4614      	mov	r4, r2
 8004dec:	18d5      	adds	r5, r2, r3
 8004dee:	42ac      	cmp	r4, r5
 8004df0:	d101      	bne.n	8004df6 <__sfputs_r+0x12>
 8004df2:	2000      	movs	r0, #0
 8004df4:	e007      	b.n	8004e06 <__sfputs_r+0x22>
 8004df6:	463a      	mov	r2, r7
 8004df8:	4630      	mov	r0, r6
 8004dfa:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004dfe:	f7ff ffdc 	bl	8004dba <__sfputc_r>
 8004e02:	1c43      	adds	r3, r0, #1
 8004e04:	d1f3      	bne.n	8004dee <__sfputs_r+0xa>
 8004e06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004e08 <_vfiprintf_r>:
 8004e08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e0c:	460d      	mov	r5, r1
 8004e0e:	4614      	mov	r4, r2
 8004e10:	4698      	mov	r8, r3
 8004e12:	4606      	mov	r6, r0
 8004e14:	b09d      	sub	sp, #116	@ 0x74
 8004e16:	b118      	cbz	r0, 8004e20 <_vfiprintf_r+0x18>
 8004e18:	6a03      	ldr	r3, [r0, #32]
 8004e1a:	b90b      	cbnz	r3, 8004e20 <_vfiprintf_r+0x18>
 8004e1c:	f7ff fcea 	bl	80047f4 <__sinit>
 8004e20:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004e22:	07d9      	lsls	r1, r3, #31
 8004e24:	d405      	bmi.n	8004e32 <_vfiprintf_r+0x2a>
 8004e26:	89ab      	ldrh	r3, [r5, #12]
 8004e28:	059a      	lsls	r2, r3, #22
 8004e2a:	d402      	bmi.n	8004e32 <_vfiprintf_r+0x2a>
 8004e2c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004e2e:	f7ff fdd4 	bl	80049da <__retarget_lock_acquire_recursive>
 8004e32:	89ab      	ldrh	r3, [r5, #12]
 8004e34:	071b      	lsls	r3, r3, #28
 8004e36:	d501      	bpl.n	8004e3c <_vfiprintf_r+0x34>
 8004e38:	692b      	ldr	r3, [r5, #16]
 8004e3a:	b99b      	cbnz	r3, 8004e64 <_vfiprintf_r+0x5c>
 8004e3c:	4629      	mov	r1, r5
 8004e3e:	4630      	mov	r0, r6
 8004e40:	f000 fac8 	bl	80053d4 <__swsetup_r>
 8004e44:	b170      	cbz	r0, 8004e64 <_vfiprintf_r+0x5c>
 8004e46:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004e48:	07dc      	lsls	r4, r3, #31
 8004e4a:	d504      	bpl.n	8004e56 <_vfiprintf_r+0x4e>
 8004e4c:	f04f 30ff 	mov.w	r0, #4294967295
 8004e50:	b01d      	add	sp, #116	@ 0x74
 8004e52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004e56:	89ab      	ldrh	r3, [r5, #12]
 8004e58:	0598      	lsls	r0, r3, #22
 8004e5a:	d4f7      	bmi.n	8004e4c <_vfiprintf_r+0x44>
 8004e5c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004e5e:	f7ff fdbd 	bl	80049dc <__retarget_lock_release_recursive>
 8004e62:	e7f3      	b.n	8004e4c <_vfiprintf_r+0x44>
 8004e64:	2300      	movs	r3, #0
 8004e66:	9309      	str	r3, [sp, #36]	@ 0x24
 8004e68:	2320      	movs	r3, #32
 8004e6a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8004e6e:	2330      	movs	r3, #48	@ 0x30
 8004e70:	f04f 0901 	mov.w	r9, #1
 8004e74:	f8cd 800c 	str.w	r8, [sp, #12]
 8004e78:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8005024 <_vfiprintf_r+0x21c>
 8004e7c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004e80:	4623      	mov	r3, r4
 8004e82:	469a      	mov	sl, r3
 8004e84:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004e88:	b10a      	cbz	r2, 8004e8e <_vfiprintf_r+0x86>
 8004e8a:	2a25      	cmp	r2, #37	@ 0x25
 8004e8c:	d1f9      	bne.n	8004e82 <_vfiprintf_r+0x7a>
 8004e8e:	ebba 0b04 	subs.w	fp, sl, r4
 8004e92:	d00b      	beq.n	8004eac <_vfiprintf_r+0xa4>
 8004e94:	465b      	mov	r3, fp
 8004e96:	4622      	mov	r2, r4
 8004e98:	4629      	mov	r1, r5
 8004e9a:	4630      	mov	r0, r6
 8004e9c:	f7ff ffa2 	bl	8004de4 <__sfputs_r>
 8004ea0:	3001      	adds	r0, #1
 8004ea2:	f000 80a7 	beq.w	8004ff4 <_vfiprintf_r+0x1ec>
 8004ea6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004ea8:	445a      	add	r2, fp
 8004eaa:	9209      	str	r2, [sp, #36]	@ 0x24
 8004eac:	f89a 3000 	ldrb.w	r3, [sl]
 8004eb0:	2b00      	cmp	r3, #0
 8004eb2:	f000 809f 	beq.w	8004ff4 <_vfiprintf_r+0x1ec>
 8004eb6:	2300      	movs	r3, #0
 8004eb8:	f04f 32ff 	mov.w	r2, #4294967295
 8004ebc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004ec0:	f10a 0a01 	add.w	sl, sl, #1
 8004ec4:	9304      	str	r3, [sp, #16]
 8004ec6:	9307      	str	r3, [sp, #28]
 8004ec8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004ecc:	931a      	str	r3, [sp, #104]	@ 0x68
 8004ece:	4654      	mov	r4, sl
 8004ed0:	2205      	movs	r2, #5
 8004ed2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004ed6:	4853      	ldr	r0, [pc, #332]	@ (8005024 <_vfiprintf_r+0x21c>)
 8004ed8:	f000 fb16 	bl	8005508 <memchr>
 8004edc:	9a04      	ldr	r2, [sp, #16]
 8004ede:	b9d8      	cbnz	r0, 8004f18 <_vfiprintf_r+0x110>
 8004ee0:	06d1      	lsls	r1, r2, #27
 8004ee2:	bf44      	itt	mi
 8004ee4:	2320      	movmi	r3, #32
 8004ee6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004eea:	0713      	lsls	r3, r2, #28
 8004eec:	bf44      	itt	mi
 8004eee:	232b      	movmi	r3, #43	@ 0x2b
 8004ef0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004ef4:	f89a 3000 	ldrb.w	r3, [sl]
 8004ef8:	2b2a      	cmp	r3, #42	@ 0x2a
 8004efa:	d015      	beq.n	8004f28 <_vfiprintf_r+0x120>
 8004efc:	4654      	mov	r4, sl
 8004efe:	2000      	movs	r0, #0
 8004f00:	f04f 0c0a 	mov.w	ip, #10
 8004f04:	9a07      	ldr	r2, [sp, #28]
 8004f06:	4621      	mov	r1, r4
 8004f08:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004f0c:	3b30      	subs	r3, #48	@ 0x30
 8004f0e:	2b09      	cmp	r3, #9
 8004f10:	d94b      	bls.n	8004faa <_vfiprintf_r+0x1a2>
 8004f12:	b1b0      	cbz	r0, 8004f42 <_vfiprintf_r+0x13a>
 8004f14:	9207      	str	r2, [sp, #28]
 8004f16:	e014      	b.n	8004f42 <_vfiprintf_r+0x13a>
 8004f18:	eba0 0308 	sub.w	r3, r0, r8
 8004f1c:	fa09 f303 	lsl.w	r3, r9, r3
 8004f20:	4313      	orrs	r3, r2
 8004f22:	46a2      	mov	sl, r4
 8004f24:	9304      	str	r3, [sp, #16]
 8004f26:	e7d2      	b.n	8004ece <_vfiprintf_r+0xc6>
 8004f28:	9b03      	ldr	r3, [sp, #12]
 8004f2a:	1d19      	adds	r1, r3, #4
 8004f2c:	681b      	ldr	r3, [r3, #0]
 8004f2e:	9103      	str	r1, [sp, #12]
 8004f30:	2b00      	cmp	r3, #0
 8004f32:	bfbb      	ittet	lt
 8004f34:	425b      	neglt	r3, r3
 8004f36:	f042 0202 	orrlt.w	r2, r2, #2
 8004f3a:	9307      	strge	r3, [sp, #28]
 8004f3c:	9307      	strlt	r3, [sp, #28]
 8004f3e:	bfb8      	it	lt
 8004f40:	9204      	strlt	r2, [sp, #16]
 8004f42:	7823      	ldrb	r3, [r4, #0]
 8004f44:	2b2e      	cmp	r3, #46	@ 0x2e
 8004f46:	d10a      	bne.n	8004f5e <_vfiprintf_r+0x156>
 8004f48:	7863      	ldrb	r3, [r4, #1]
 8004f4a:	2b2a      	cmp	r3, #42	@ 0x2a
 8004f4c:	d132      	bne.n	8004fb4 <_vfiprintf_r+0x1ac>
 8004f4e:	9b03      	ldr	r3, [sp, #12]
 8004f50:	3402      	adds	r4, #2
 8004f52:	1d1a      	adds	r2, r3, #4
 8004f54:	681b      	ldr	r3, [r3, #0]
 8004f56:	9203      	str	r2, [sp, #12]
 8004f58:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8004f5c:	9305      	str	r3, [sp, #20]
 8004f5e:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8005028 <_vfiprintf_r+0x220>
 8004f62:	2203      	movs	r2, #3
 8004f64:	4650      	mov	r0, sl
 8004f66:	7821      	ldrb	r1, [r4, #0]
 8004f68:	f000 face 	bl	8005508 <memchr>
 8004f6c:	b138      	cbz	r0, 8004f7e <_vfiprintf_r+0x176>
 8004f6e:	2240      	movs	r2, #64	@ 0x40
 8004f70:	9b04      	ldr	r3, [sp, #16]
 8004f72:	eba0 000a 	sub.w	r0, r0, sl
 8004f76:	4082      	lsls	r2, r0
 8004f78:	4313      	orrs	r3, r2
 8004f7a:	3401      	adds	r4, #1
 8004f7c:	9304      	str	r3, [sp, #16]
 8004f7e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004f82:	2206      	movs	r2, #6
 8004f84:	4829      	ldr	r0, [pc, #164]	@ (800502c <_vfiprintf_r+0x224>)
 8004f86:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004f8a:	f000 fabd 	bl	8005508 <memchr>
 8004f8e:	2800      	cmp	r0, #0
 8004f90:	d03f      	beq.n	8005012 <_vfiprintf_r+0x20a>
 8004f92:	4b27      	ldr	r3, [pc, #156]	@ (8005030 <_vfiprintf_r+0x228>)
 8004f94:	bb1b      	cbnz	r3, 8004fde <_vfiprintf_r+0x1d6>
 8004f96:	9b03      	ldr	r3, [sp, #12]
 8004f98:	3307      	adds	r3, #7
 8004f9a:	f023 0307 	bic.w	r3, r3, #7
 8004f9e:	3308      	adds	r3, #8
 8004fa0:	9303      	str	r3, [sp, #12]
 8004fa2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004fa4:	443b      	add	r3, r7
 8004fa6:	9309      	str	r3, [sp, #36]	@ 0x24
 8004fa8:	e76a      	b.n	8004e80 <_vfiprintf_r+0x78>
 8004faa:	460c      	mov	r4, r1
 8004fac:	2001      	movs	r0, #1
 8004fae:	fb0c 3202 	mla	r2, ip, r2, r3
 8004fb2:	e7a8      	b.n	8004f06 <_vfiprintf_r+0xfe>
 8004fb4:	2300      	movs	r3, #0
 8004fb6:	f04f 0c0a 	mov.w	ip, #10
 8004fba:	4619      	mov	r1, r3
 8004fbc:	3401      	adds	r4, #1
 8004fbe:	9305      	str	r3, [sp, #20]
 8004fc0:	4620      	mov	r0, r4
 8004fc2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004fc6:	3a30      	subs	r2, #48	@ 0x30
 8004fc8:	2a09      	cmp	r2, #9
 8004fca:	d903      	bls.n	8004fd4 <_vfiprintf_r+0x1cc>
 8004fcc:	2b00      	cmp	r3, #0
 8004fce:	d0c6      	beq.n	8004f5e <_vfiprintf_r+0x156>
 8004fd0:	9105      	str	r1, [sp, #20]
 8004fd2:	e7c4      	b.n	8004f5e <_vfiprintf_r+0x156>
 8004fd4:	4604      	mov	r4, r0
 8004fd6:	2301      	movs	r3, #1
 8004fd8:	fb0c 2101 	mla	r1, ip, r1, r2
 8004fdc:	e7f0      	b.n	8004fc0 <_vfiprintf_r+0x1b8>
 8004fde:	ab03      	add	r3, sp, #12
 8004fe0:	9300      	str	r3, [sp, #0]
 8004fe2:	462a      	mov	r2, r5
 8004fe4:	4630      	mov	r0, r6
 8004fe6:	4b13      	ldr	r3, [pc, #76]	@ (8005034 <_vfiprintf_r+0x22c>)
 8004fe8:	a904      	add	r1, sp, #16
 8004fea:	f3af 8000 	nop.w
 8004fee:	4607      	mov	r7, r0
 8004ff0:	1c78      	adds	r0, r7, #1
 8004ff2:	d1d6      	bne.n	8004fa2 <_vfiprintf_r+0x19a>
 8004ff4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004ff6:	07d9      	lsls	r1, r3, #31
 8004ff8:	d405      	bmi.n	8005006 <_vfiprintf_r+0x1fe>
 8004ffa:	89ab      	ldrh	r3, [r5, #12]
 8004ffc:	059a      	lsls	r2, r3, #22
 8004ffe:	d402      	bmi.n	8005006 <_vfiprintf_r+0x1fe>
 8005000:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8005002:	f7ff fceb 	bl	80049dc <__retarget_lock_release_recursive>
 8005006:	89ab      	ldrh	r3, [r5, #12]
 8005008:	065b      	lsls	r3, r3, #25
 800500a:	f53f af1f 	bmi.w	8004e4c <_vfiprintf_r+0x44>
 800500e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005010:	e71e      	b.n	8004e50 <_vfiprintf_r+0x48>
 8005012:	ab03      	add	r3, sp, #12
 8005014:	9300      	str	r3, [sp, #0]
 8005016:	462a      	mov	r2, r5
 8005018:	4630      	mov	r0, r6
 800501a:	4b06      	ldr	r3, [pc, #24]	@ (8005034 <_vfiprintf_r+0x22c>)
 800501c:	a904      	add	r1, sp, #16
 800501e:	f000 f87d 	bl	800511c <_printf_i>
 8005022:	e7e4      	b.n	8004fee <_vfiprintf_r+0x1e6>
 8005024:	0800582d 	.word	0x0800582d
 8005028:	08005833 	.word	0x08005833
 800502c:	08005837 	.word	0x08005837
 8005030:	00000000 	.word	0x00000000
 8005034:	08004de5 	.word	0x08004de5

08005038 <_printf_common>:
 8005038:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800503c:	4616      	mov	r6, r2
 800503e:	4698      	mov	r8, r3
 8005040:	688a      	ldr	r2, [r1, #8]
 8005042:	690b      	ldr	r3, [r1, #16]
 8005044:	4607      	mov	r7, r0
 8005046:	4293      	cmp	r3, r2
 8005048:	bfb8      	it	lt
 800504a:	4613      	movlt	r3, r2
 800504c:	6033      	str	r3, [r6, #0]
 800504e:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8005052:	460c      	mov	r4, r1
 8005054:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8005058:	b10a      	cbz	r2, 800505e <_printf_common+0x26>
 800505a:	3301      	adds	r3, #1
 800505c:	6033      	str	r3, [r6, #0]
 800505e:	6823      	ldr	r3, [r4, #0]
 8005060:	0699      	lsls	r1, r3, #26
 8005062:	bf42      	ittt	mi
 8005064:	6833      	ldrmi	r3, [r6, #0]
 8005066:	3302      	addmi	r3, #2
 8005068:	6033      	strmi	r3, [r6, #0]
 800506a:	6825      	ldr	r5, [r4, #0]
 800506c:	f015 0506 	ands.w	r5, r5, #6
 8005070:	d106      	bne.n	8005080 <_printf_common+0x48>
 8005072:	f104 0a19 	add.w	sl, r4, #25
 8005076:	68e3      	ldr	r3, [r4, #12]
 8005078:	6832      	ldr	r2, [r6, #0]
 800507a:	1a9b      	subs	r3, r3, r2
 800507c:	42ab      	cmp	r3, r5
 800507e:	dc2b      	bgt.n	80050d8 <_printf_common+0xa0>
 8005080:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8005084:	6822      	ldr	r2, [r4, #0]
 8005086:	3b00      	subs	r3, #0
 8005088:	bf18      	it	ne
 800508a:	2301      	movne	r3, #1
 800508c:	0692      	lsls	r2, r2, #26
 800508e:	d430      	bmi.n	80050f2 <_printf_common+0xba>
 8005090:	4641      	mov	r1, r8
 8005092:	4638      	mov	r0, r7
 8005094:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8005098:	47c8      	blx	r9
 800509a:	3001      	adds	r0, #1
 800509c:	d023      	beq.n	80050e6 <_printf_common+0xae>
 800509e:	6823      	ldr	r3, [r4, #0]
 80050a0:	6922      	ldr	r2, [r4, #16]
 80050a2:	f003 0306 	and.w	r3, r3, #6
 80050a6:	2b04      	cmp	r3, #4
 80050a8:	bf14      	ite	ne
 80050aa:	2500      	movne	r5, #0
 80050ac:	6833      	ldreq	r3, [r6, #0]
 80050ae:	f04f 0600 	mov.w	r6, #0
 80050b2:	bf08      	it	eq
 80050b4:	68e5      	ldreq	r5, [r4, #12]
 80050b6:	f104 041a 	add.w	r4, r4, #26
 80050ba:	bf08      	it	eq
 80050bc:	1aed      	subeq	r5, r5, r3
 80050be:	f854 3c12 	ldr.w	r3, [r4, #-18]
 80050c2:	bf08      	it	eq
 80050c4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80050c8:	4293      	cmp	r3, r2
 80050ca:	bfc4      	itt	gt
 80050cc:	1a9b      	subgt	r3, r3, r2
 80050ce:	18ed      	addgt	r5, r5, r3
 80050d0:	42b5      	cmp	r5, r6
 80050d2:	d11a      	bne.n	800510a <_printf_common+0xd2>
 80050d4:	2000      	movs	r0, #0
 80050d6:	e008      	b.n	80050ea <_printf_common+0xb2>
 80050d8:	2301      	movs	r3, #1
 80050da:	4652      	mov	r2, sl
 80050dc:	4641      	mov	r1, r8
 80050de:	4638      	mov	r0, r7
 80050e0:	47c8      	blx	r9
 80050e2:	3001      	adds	r0, #1
 80050e4:	d103      	bne.n	80050ee <_printf_common+0xb6>
 80050e6:	f04f 30ff 	mov.w	r0, #4294967295
 80050ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80050ee:	3501      	adds	r5, #1
 80050f0:	e7c1      	b.n	8005076 <_printf_common+0x3e>
 80050f2:	2030      	movs	r0, #48	@ 0x30
 80050f4:	18e1      	adds	r1, r4, r3
 80050f6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80050fa:	1c5a      	adds	r2, r3, #1
 80050fc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8005100:	4422      	add	r2, r4
 8005102:	3302      	adds	r3, #2
 8005104:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8005108:	e7c2      	b.n	8005090 <_printf_common+0x58>
 800510a:	2301      	movs	r3, #1
 800510c:	4622      	mov	r2, r4
 800510e:	4641      	mov	r1, r8
 8005110:	4638      	mov	r0, r7
 8005112:	47c8      	blx	r9
 8005114:	3001      	adds	r0, #1
 8005116:	d0e6      	beq.n	80050e6 <_printf_common+0xae>
 8005118:	3601      	adds	r6, #1
 800511a:	e7d9      	b.n	80050d0 <_printf_common+0x98>

0800511c <_printf_i>:
 800511c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005120:	7e0f      	ldrb	r7, [r1, #24]
 8005122:	4691      	mov	r9, r2
 8005124:	2f78      	cmp	r7, #120	@ 0x78
 8005126:	4680      	mov	r8, r0
 8005128:	460c      	mov	r4, r1
 800512a:	469a      	mov	sl, r3
 800512c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800512e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8005132:	d807      	bhi.n	8005144 <_printf_i+0x28>
 8005134:	2f62      	cmp	r7, #98	@ 0x62
 8005136:	d80a      	bhi.n	800514e <_printf_i+0x32>
 8005138:	2f00      	cmp	r7, #0
 800513a:	f000 80d1 	beq.w	80052e0 <_printf_i+0x1c4>
 800513e:	2f58      	cmp	r7, #88	@ 0x58
 8005140:	f000 80b8 	beq.w	80052b4 <_printf_i+0x198>
 8005144:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005148:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800514c:	e03a      	b.n	80051c4 <_printf_i+0xa8>
 800514e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8005152:	2b15      	cmp	r3, #21
 8005154:	d8f6      	bhi.n	8005144 <_printf_i+0x28>
 8005156:	a101      	add	r1, pc, #4	@ (adr r1, 800515c <_printf_i+0x40>)
 8005158:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800515c:	080051b5 	.word	0x080051b5
 8005160:	080051c9 	.word	0x080051c9
 8005164:	08005145 	.word	0x08005145
 8005168:	08005145 	.word	0x08005145
 800516c:	08005145 	.word	0x08005145
 8005170:	08005145 	.word	0x08005145
 8005174:	080051c9 	.word	0x080051c9
 8005178:	08005145 	.word	0x08005145
 800517c:	08005145 	.word	0x08005145
 8005180:	08005145 	.word	0x08005145
 8005184:	08005145 	.word	0x08005145
 8005188:	080052c7 	.word	0x080052c7
 800518c:	080051f3 	.word	0x080051f3
 8005190:	08005281 	.word	0x08005281
 8005194:	08005145 	.word	0x08005145
 8005198:	08005145 	.word	0x08005145
 800519c:	080052e9 	.word	0x080052e9
 80051a0:	08005145 	.word	0x08005145
 80051a4:	080051f3 	.word	0x080051f3
 80051a8:	08005145 	.word	0x08005145
 80051ac:	08005145 	.word	0x08005145
 80051b0:	08005289 	.word	0x08005289
 80051b4:	6833      	ldr	r3, [r6, #0]
 80051b6:	1d1a      	adds	r2, r3, #4
 80051b8:	681b      	ldr	r3, [r3, #0]
 80051ba:	6032      	str	r2, [r6, #0]
 80051bc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80051c0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80051c4:	2301      	movs	r3, #1
 80051c6:	e09c      	b.n	8005302 <_printf_i+0x1e6>
 80051c8:	6833      	ldr	r3, [r6, #0]
 80051ca:	6820      	ldr	r0, [r4, #0]
 80051cc:	1d19      	adds	r1, r3, #4
 80051ce:	6031      	str	r1, [r6, #0]
 80051d0:	0606      	lsls	r6, r0, #24
 80051d2:	d501      	bpl.n	80051d8 <_printf_i+0xbc>
 80051d4:	681d      	ldr	r5, [r3, #0]
 80051d6:	e003      	b.n	80051e0 <_printf_i+0xc4>
 80051d8:	0645      	lsls	r5, r0, #25
 80051da:	d5fb      	bpl.n	80051d4 <_printf_i+0xb8>
 80051dc:	f9b3 5000 	ldrsh.w	r5, [r3]
 80051e0:	2d00      	cmp	r5, #0
 80051e2:	da03      	bge.n	80051ec <_printf_i+0xd0>
 80051e4:	232d      	movs	r3, #45	@ 0x2d
 80051e6:	426d      	negs	r5, r5
 80051e8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80051ec:	230a      	movs	r3, #10
 80051ee:	4858      	ldr	r0, [pc, #352]	@ (8005350 <_printf_i+0x234>)
 80051f0:	e011      	b.n	8005216 <_printf_i+0xfa>
 80051f2:	6821      	ldr	r1, [r4, #0]
 80051f4:	6833      	ldr	r3, [r6, #0]
 80051f6:	0608      	lsls	r0, r1, #24
 80051f8:	f853 5b04 	ldr.w	r5, [r3], #4
 80051fc:	d402      	bmi.n	8005204 <_printf_i+0xe8>
 80051fe:	0649      	lsls	r1, r1, #25
 8005200:	bf48      	it	mi
 8005202:	b2ad      	uxthmi	r5, r5
 8005204:	2f6f      	cmp	r7, #111	@ 0x6f
 8005206:	6033      	str	r3, [r6, #0]
 8005208:	bf14      	ite	ne
 800520a:	230a      	movne	r3, #10
 800520c:	2308      	moveq	r3, #8
 800520e:	4850      	ldr	r0, [pc, #320]	@ (8005350 <_printf_i+0x234>)
 8005210:	2100      	movs	r1, #0
 8005212:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8005216:	6866      	ldr	r6, [r4, #4]
 8005218:	2e00      	cmp	r6, #0
 800521a:	60a6      	str	r6, [r4, #8]
 800521c:	db05      	blt.n	800522a <_printf_i+0x10e>
 800521e:	6821      	ldr	r1, [r4, #0]
 8005220:	432e      	orrs	r6, r5
 8005222:	f021 0104 	bic.w	r1, r1, #4
 8005226:	6021      	str	r1, [r4, #0]
 8005228:	d04b      	beq.n	80052c2 <_printf_i+0x1a6>
 800522a:	4616      	mov	r6, r2
 800522c:	fbb5 f1f3 	udiv	r1, r5, r3
 8005230:	fb03 5711 	mls	r7, r3, r1, r5
 8005234:	5dc7      	ldrb	r7, [r0, r7]
 8005236:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800523a:	462f      	mov	r7, r5
 800523c:	42bb      	cmp	r3, r7
 800523e:	460d      	mov	r5, r1
 8005240:	d9f4      	bls.n	800522c <_printf_i+0x110>
 8005242:	2b08      	cmp	r3, #8
 8005244:	d10b      	bne.n	800525e <_printf_i+0x142>
 8005246:	6823      	ldr	r3, [r4, #0]
 8005248:	07df      	lsls	r7, r3, #31
 800524a:	d508      	bpl.n	800525e <_printf_i+0x142>
 800524c:	6923      	ldr	r3, [r4, #16]
 800524e:	6861      	ldr	r1, [r4, #4]
 8005250:	4299      	cmp	r1, r3
 8005252:	bfde      	ittt	le
 8005254:	2330      	movle	r3, #48	@ 0x30
 8005256:	f806 3c01 	strble.w	r3, [r6, #-1]
 800525a:	f106 36ff 	addle.w	r6, r6, #4294967295
 800525e:	1b92      	subs	r2, r2, r6
 8005260:	6122      	str	r2, [r4, #16]
 8005262:	464b      	mov	r3, r9
 8005264:	4621      	mov	r1, r4
 8005266:	4640      	mov	r0, r8
 8005268:	f8cd a000 	str.w	sl, [sp]
 800526c:	aa03      	add	r2, sp, #12
 800526e:	f7ff fee3 	bl	8005038 <_printf_common>
 8005272:	3001      	adds	r0, #1
 8005274:	d14a      	bne.n	800530c <_printf_i+0x1f0>
 8005276:	f04f 30ff 	mov.w	r0, #4294967295
 800527a:	b004      	add	sp, #16
 800527c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005280:	6823      	ldr	r3, [r4, #0]
 8005282:	f043 0320 	orr.w	r3, r3, #32
 8005286:	6023      	str	r3, [r4, #0]
 8005288:	2778      	movs	r7, #120	@ 0x78
 800528a:	4832      	ldr	r0, [pc, #200]	@ (8005354 <_printf_i+0x238>)
 800528c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8005290:	6823      	ldr	r3, [r4, #0]
 8005292:	6831      	ldr	r1, [r6, #0]
 8005294:	061f      	lsls	r7, r3, #24
 8005296:	f851 5b04 	ldr.w	r5, [r1], #4
 800529a:	d402      	bmi.n	80052a2 <_printf_i+0x186>
 800529c:	065f      	lsls	r7, r3, #25
 800529e:	bf48      	it	mi
 80052a0:	b2ad      	uxthmi	r5, r5
 80052a2:	6031      	str	r1, [r6, #0]
 80052a4:	07d9      	lsls	r1, r3, #31
 80052a6:	bf44      	itt	mi
 80052a8:	f043 0320 	orrmi.w	r3, r3, #32
 80052ac:	6023      	strmi	r3, [r4, #0]
 80052ae:	b11d      	cbz	r5, 80052b8 <_printf_i+0x19c>
 80052b0:	2310      	movs	r3, #16
 80052b2:	e7ad      	b.n	8005210 <_printf_i+0xf4>
 80052b4:	4826      	ldr	r0, [pc, #152]	@ (8005350 <_printf_i+0x234>)
 80052b6:	e7e9      	b.n	800528c <_printf_i+0x170>
 80052b8:	6823      	ldr	r3, [r4, #0]
 80052ba:	f023 0320 	bic.w	r3, r3, #32
 80052be:	6023      	str	r3, [r4, #0]
 80052c0:	e7f6      	b.n	80052b0 <_printf_i+0x194>
 80052c2:	4616      	mov	r6, r2
 80052c4:	e7bd      	b.n	8005242 <_printf_i+0x126>
 80052c6:	6833      	ldr	r3, [r6, #0]
 80052c8:	6825      	ldr	r5, [r4, #0]
 80052ca:	1d18      	adds	r0, r3, #4
 80052cc:	6961      	ldr	r1, [r4, #20]
 80052ce:	6030      	str	r0, [r6, #0]
 80052d0:	062e      	lsls	r6, r5, #24
 80052d2:	681b      	ldr	r3, [r3, #0]
 80052d4:	d501      	bpl.n	80052da <_printf_i+0x1be>
 80052d6:	6019      	str	r1, [r3, #0]
 80052d8:	e002      	b.n	80052e0 <_printf_i+0x1c4>
 80052da:	0668      	lsls	r0, r5, #25
 80052dc:	d5fb      	bpl.n	80052d6 <_printf_i+0x1ba>
 80052de:	8019      	strh	r1, [r3, #0]
 80052e0:	2300      	movs	r3, #0
 80052e2:	4616      	mov	r6, r2
 80052e4:	6123      	str	r3, [r4, #16]
 80052e6:	e7bc      	b.n	8005262 <_printf_i+0x146>
 80052e8:	6833      	ldr	r3, [r6, #0]
 80052ea:	2100      	movs	r1, #0
 80052ec:	1d1a      	adds	r2, r3, #4
 80052ee:	6032      	str	r2, [r6, #0]
 80052f0:	681e      	ldr	r6, [r3, #0]
 80052f2:	6862      	ldr	r2, [r4, #4]
 80052f4:	4630      	mov	r0, r6
 80052f6:	f000 f907 	bl	8005508 <memchr>
 80052fa:	b108      	cbz	r0, 8005300 <_printf_i+0x1e4>
 80052fc:	1b80      	subs	r0, r0, r6
 80052fe:	6060      	str	r0, [r4, #4]
 8005300:	6863      	ldr	r3, [r4, #4]
 8005302:	6123      	str	r3, [r4, #16]
 8005304:	2300      	movs	r3, #0
 8005306:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800530a:	e7aa      	b.n	8005262 <_printf_i+0x146>
 800530c:	4632      	mov	r2, r6
 800530e:	4649      	mov	r1, r9
 8005310:	4640      	mov	r0, r8
 8005312:	6923      	ldr	r3, [r4, #16]
 8005314:	47d0      	blx	sl
 8005316:	3001      	adds	r0, #1
 8005318:	d0ad      	beq.n	8005276 <_printf_i+0x15a>
 800531a:	6823      	ldr	r3, [r4, #0]
 800531c:	079b      	lsls	r3, r3, #30
 800531e:	d413      	bmi.n	8005348 <_printf_i+0x22c>
 8005320:	68e0      	ldr	r0, [r4, #12]
 8005322:	9b03      	ldr	r3, [sp, #12]
 8005324:	4298      	cmp	r0, r3
 8005326:	bfb8      	it	lt
 8005328:	4618      	movlt	r0, r3
 800532a:	e7a6      	b.n	800527a <_printf_i+0x15e>
 800532c:	2301      	movs	r3, #1
 800532e:	4632      	mov	r2, r6
 8005330:	4649      	mov	r1, r9
 8005332:	4640      	mov	r0, r8
 8005334:	47d0      	blx	sl
 8005336:	3001      	adds	r0, #1
 8005338:	d09d      	beq.n	8005276 <_printf_i+0x15a>
 800533a:	3501      	adds	r5, #1
 800533c:	68e3      	ldr	r3, [r4, #12]
 800533e:	9903      	ldr	r1, [sp, #12]
 8005340:	1a5b      	subs	r3, r3, r1
 8005342:	42ab      	cmp	r3, r5
 8005344:	dcf2      	bgt.n	800532c <_printf_i+0x210>
 8005346:	e7eb      	b.n	8005320 <_printf_i+0x204>
 8005348:	2500      	movs	r5, #0
 800534a:	f104 0619 	add.w	r6, r4, #25
 800534e:	e7f5      	b.n	800533c <_printf_i+0x220>
 8005350:	0800583e 	.word	0x0800583e
 8005354:	0800584f 	.word	0x0800584f

08005358 <__swbuf_r>:
 8005358:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800535a:	460e      	mov	r6, r1
 800535c:	4614      	mov	r4, r2
 800535e:	4605      	mov	r5, r0
 8005360:	b118      	cbz	r0, 800536a <__swbuf_r+0x12>
 8005362:	6a03      	ldr	r3, [r0, #32]
 8005364:	b90b      	cbnz	r3, 800536a <__swbuf_r+0x12>
 8005366:	f7ff fa45 	bl	80047f4 <__sinit>
 800536a:	69a3      	ldr	r3, [r4, #24]
 800536c:	60a3      	str	r3, [r4, #8]
 800536e:	89a3      	ldrh	r3, [r4, #12]
 8005370:	071a      	lsls	r2, r3, #28
 8005372:	d501      	bpl.n	8005378 <__swbuf_r+0x20>
 8005374:	6923      	ldr	r3, [r4, #16]
 8005376:	b943      	cbnz	r3, 800538a <__swbuf_r+0x32>
 8005378:	4621      	mov	r1, r4
 800537a:	4628      	mov	r0, r5
 800537c:	f000 f82a 	bl	80053d4 <__swsetup_r>
 8005380:	b118      	cbz	r0, 800538a <__swbuf_r+0x32>
 8005382:	f04f 37ff 	mov.w	r7, #4294967295
 8005386:	4638      	mov	r0, r7
 8005388:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800538a:	6823      	ldr	r3, [r4, #0]
 800538c:	6922      	ldr	r2, [r4, #16]
 800538e:	b2f6      	uxtb	r6, r6
 8005390:	1a98      	subs	r0, r3, r2
 8005392:	6963      	ldr	r3, [r4, #20]
 8005394:	4637      	mov	r7, r6
 8005396:	4283      	cmp	r3, r0
 8005398:	dc05      	bgt.n	80053a6 <__swbuf_r+0x4e>
 800539a:	4621      	mov	r1, r4
 800539c:	4628      	mov	r0, r5
 800539e:	f7ff fcbb 	bl	8004d18 <_fflush_r>
 80053a2:	2800      	cmp	r0, #0
 80053a4:	d1ed      	bne.n	8005382 <__swbuf_r+0x2a>
 80053a6:	68a3      	ldr	r3, [r4, #8]
 80053a8:	3b01      	subs	r3, #1
 80053aa:	60a3      	str	r3, [r4, #8]
 80053ac:	6823      	ldr	r3, [r4, #0]
 80053ae:	1c5a      	adds	r2, r3, #1
 80053b0:	6022      	str	r2, [r4, #0]
 80053b2:	701e      	strb	r6, [r3, #0]
 80053b4:	6962      	ldr	r2, [r4, #20]
 80053b6:	1c43      	adds	r3, r0, #1
 80053b8:	429a      	cmp	r2, r3
 80053ba:	d004      	beq.n	80053c6 <__swbuf_r+0x6e>
 80053bc:	89a3      	ldrh	r3, [r4, #12]
 80053be:	07db      	lsls	r3, r3, #31
 80053c0:	d5e1      	bpl.n	8005386 <__swbuf_r+0x2e>
 80053c2:	2e0a      	cmp	r6, #10
 80053c4:	d1df      	bne.n	8005386 <__swbuf_r+0x2e>
 80053c6:	4621      	mov	r1, r4
 80053c8:	4628      	mov	r0, r5
 80053ca:	f7ff fca5 	bl	8004d18 <_fflush_r>
 80053ce:	2800      	cmp	r0, #0
 80053d0:	d0d9      	beq.n	8005386 <__swbuf_r+0x2e>
 80053d2:	e7d6      	b.n	8005382 <__swbuf_r+0x2a>

080053d4 <__swsetup_r>:
 80053d4:	b538      	push	{r3, r4, r5, lr}
 80053d6:	4b29      	ldr	r3, [pc, #164]	@ (800547c <__swsetup_r+0xa8>)
 80053d8:	4605      	mov	r5, r0
 80053da:	6818      	ldr	r0, [r3, #0]
 80053dc:	460c      	mov	r4, r1
 80053de:	b118      	cbz	r0, 80053e8 <__swsetup_r+0x14>
 80053e0:	6a03      	ldr	r3, [r0, #32]
 80053e2:	b90b      	cbnz	r3, 80053e8 <__swsetup_r+0x14>
 80053e4:	f7ff fa06 	bl	80047f4 <__sinit>
 80053e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80053ec:	0719      	lsls	r1, r3, #28
 80053ee:	d422      	bmi.n	8005436 <__swsetup_r+0x62>
 80053f0:	06da      	lsls	r2, r3, #27
 80053f2:	d407      	bmi.n	8005404 <__swsetup_r+0x30>
 80053f4:	2209      	movs	r2, #9
 80053f6:	602a      	str	r2, [r5, #0]
 80053f8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80053fc:	f04f 30ff 	mov.w	r0, #4294967295
 8005400:	81a3      	strh	r3, [r4, #12]
 8005402:	e033      	b.n	800546c <__swsetup_r+0x98>
 8005404:	0758      	lsls	r0, r3, #29
 8005406:	d512      	bpl.n	800542e <__swsetup_r+0x5a>
 8005408:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800540a:	b141      	cbz	r1, 800541e <__swsetup_r+0x4a>
 800540c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8005410:	4299      	cmp	r1, r3
 8005412:	d002      	beq.n	800541a <__swsetup_r+0x46>
 8005414:	4628      	mov	r0, r5
 8005416:	f7ff fb01 	bl	8004a1c <_free_r>
 800541a:	2300      	movs	r3, #0
 800541c:	6363      	str	r3, [r4, #52]	@ 0x34
 800541e:	89a3      	ldrh	r3, [r4, #12]
 8005420:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8005424:	81a3      	strh	r3, [r4, #12]
 8005426:	2300      	movs	r3, #0
 8005428:	6063      	str	r3, [r4, #4]
 800542a:	6923      	ldr	r3, [r4, #16]
 800542c:	6023      	str	r3, [r4, #0]
 800542e:	89a3      	ldrh	r3, [r4, #12]
 8005430:	f043 0308 	orr.w	r3, r3, #8
 8005434:	81a3      	strh	r3, [r4, #12]
 8005436:	6923      	ldr	r3, [r4, #16]
 8005438:	b94b      	cbnz	r3, 800544e <__swsetup_r+0x7a>
 800543a:	89a3      	ldrh	r3, [r4, #12]
 800543c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8005440:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8005444:	d003      	beq.n	800544e <__swsetup_r+0x7a>
 8005446:	4621      	mov	r1, r4
 8005448:	4628      	mov	r0, r5
 800544a:	f000 f890 	bl	800556e <__smakebuf_r>
 800544e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005452:	f013 0201 	ands.w	r2, r3, #1
 8005456:	d00a      	beq.n	800546e <__swsetup_r+0x9a>
 8005458:	2200      	movs	r2, #0
 800545a:	60a2      	str	r2, [r4, #8]
 800545c:	6962      	ldr	r2, [r4, #20]
 800545e:	4252      	negs	r2, r2
 8005460:	61a2      	str	r2, [r4, #24]
 8005462:	6922      	ldr	r2, [r4, #16]
 8005464:	b942      	cbnz	r2, 8005478 <__swsetup_r+0xa4>
 8005466:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800546a:	d1c5      	bne.n	80053f8 <__swsetup_r+0x24>
 800546c:	bd38      	pop	{r3, r4, r5, pc}
 800546e:	0799      	lsls	r1, r3, #30
 8005470:	bf58      	it	pl
 8005472:	6962      	ldrpl	r2, [r4, #20]
 8005474:	60a2      	str	r2, [r4, #8]
 8005476:	e7f4      	b.n	8005462 <__swsetup_r+0x8e>
 8005478:	2000      	movs	r0, #0
 800547a:	e7f7      	b.n	800546c <__swsetup_r+0x98>
 800547c:	200000a0 	.word	0x200000a0

08005480 <_raise_r>:
 8005480:	291f      	cmp	r1, #31
 8005482:	b538      	push	{r3, r4, r5, lr}
 8005484:	4605      	mov	r5, r0
 8005486:	460c      	mov	r4, r1
 8005488:	d904      	bls.n	8005494 <_raise_r+0x14>
 800548a:	2316      	movs	r3, #22
 800548c:	6003      	str	r3, [r0, #0]
 800548e:	f04f 30ff 	mov.w	r0, #4294967295
 8005492:	bd38      	pop	{r3, r4, r5, pc}
 8005494:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8005496:	b112      	cbz	r2, 800549e <_raise_r+0x1e>
 8005498:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800549c:	b94b      	cbnz	r3, 80054b2 <_raise_r+0x32>
 800549e:	4628      	mov	r0, r5
 80054a0:	f000 f830 	bl	8005504 <_getpid_r>
 80054a4:	4622      	mov	r2, r4
 80054a6:	4601      	mov	r1, r0
 80054a8:	4628      	mov	r0, r5
 80054aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80054ae:	f000 b817 	b.w	80054e0 <_kill_r>
 80054b2:	2b01      	cmp	r3, #1
 80054b4:	d00a      	beq.n	80054cc <_raise_r+0x4c>
 80054b6:	1c59      	adds	r1, r3, #1
 80054b8:	d103      	bne.n	80054c2 <_raise_r+0x42>
 80054ba:	2316      	movs	r3, #22
 80054bc:	6003      	str	r3, [r0, #0]
 80054be:	2001      	movs	r0, #1
 80054c0:	e7e7      	b.n	8005492 <_raise_r+0x12>
 80054c2:	2100      	movs	r1, #0
 80054c4:	4620      	mov	r0, r4
 80054c6:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80054ca:	4798      	blx	r3
 80054cc:	2000      	movs	r0, #0
 80054ce:	e7e0      	b.n	8005492 <_raise_r+0x12>

080054d0 <raise>:
 80054d0:	4b02      	ldr	r3, [pc, #8]	@ (80054dc <raise+0xc>)
 80054d2:	4601      	mov	r1, r0
 80054d4:	6818      	ldr	r0, [r3, #0]
 80054d6:	f7ff bfd3 	b.w	8005480 <_raise_r>
 80054da:	bf00      	nop
 80054dc:	200000a0 	.word	0x200000a0

080054e0 <_kill_r>:
 80054e0:	b538      	push	{r3, r4, r5, lr}
 80054e2:	2300      	movs	r3, #0
 80054e4:	4d06      	ldr	r5, [pc, #24]	@ (8005500 <_kill_r+0x20>)
 80054e6:	4604      	mov	r4, r0
 80054e8:	4608      	mov	r0, r1
 80054ea:	4611      	mov	r1, r2
 80054ec:	602b      	str	r3, [r5, #0]
 80054ee:	f7fd f834 	bl	800255a <_kill>
 80054f2:	1c43      	adds	r3, r0, #1
 80054f4:	d102      	bne.n	80054fc <_kill_r+0x1c>
 80054f6:	682b      	ldr	r3, [r5, #0]
 80054f8:	b103      	cbz	r3, 80054fc <_kill_r+0x1c>
 80054fa:	6023      	str	r3, [r4, #0]
 80054fc:	bd38      	pop	{r3, r4, r5, pc}
 80054fe:	bf00      	nop
 8005500:	20000958 	.word	0x20000958

08005504 <_getpid_r>:
 8005504:	f7fd b822 	b.w	800254c <_getpid>

08005508 <memchr>:
 8005508:	4603      	mov	r3, r0
 800550a:	b510      	push	{r4, lr}
 800550c:	b2c9      	uxtb	r1, r1
 800550e:	4402      	add	r2, r0
 8005510:	4293      	cmp	r3, r2
 8005512:	4618      	mov	r0, r3
 8005514:	d101      	bne.n	800551a <memchr+0x12>
 8005516:	2000      	movs	r0, #0
 8005518:	e003      	b.n	8005522 <memchr+0x1a>
 800551a:	7804      	ldrb	r4, [r0, #0]
 800551c:	3301      	adds	r3, #1
 800551e:	428c      	cmp	r4, r1
 8005520:	d1f6      	bne.n	8005510 <memchr+0x8>
 8005522:	bd10      	pop	{r4, pc}

08005524 <__swhatbuf_r>:
 8005524:	b570      	push	{r4, r5, r6, lr}
 8005526:	460c      	mov	r4, r1
 8005528:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800552c:	4615      	mov	r5, r2
 800552e:	2900      	cmp	r1, #0
 8005530:	461e      	mov	r6, r3
 8005532:	b096      	sub	sp, #88	@ 0x58
 8005534:	da0c      	bge.n	8005550 <__swhatbuf_r+0x2c>
 8005536:	89a3      	ldrh	r3, [r4, #12]
 8005538:	2100      	movs	r1, #0
 800553a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800553e:	bf14      	ite	ne
 8005540:	2340      	movne	r3, #64	@ 0x40
 8005542:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8005546:	2000      	movs	r0, #0
 8005548:	6031      	str	r1, [r6, #0]
 800554a:	602b      	str	r3, [r5, #0]
 800554c:	b016      	add	sp, #88	@ 0x58
 800554e:	bd70      	pop	{r4, r5, r6, pc}
 8005550:	466a      	mov	r2, sp
 8005552:	f000 f849 	bl	80055e8 <_fstat_r>
 8005556:	2800      	cmp	r0, #0
 8005558:	dbed      	blt.n	8005536 <__swhatbuf_r+0x12>
 800555a:	9901      	ldr	r1, [sp, #4]
 800555c:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8005560:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8005564:	4259      	negs	r1, r3
 8005566:	4159      	adcs	r1, r3
 8005568:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800556c:	e7eb      	b.n	8005546 <__swhatbuf_r+0x22>

0800556e <__smakebuf_r>:
 800556e:	898b      	ldrh	r3, [r1, #12]
 8005570:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005572:	079d      	lsls	r5, r3, #30
 8005574:	4606      	mov	r6, r0
 8005576:	460c      	mov	r4, r1
 8005578:	d507      	bpl.n	800558a <__smakebuf_r+0x1c>
 800557a:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800557e:	6023      	str	r3, [r4, #0]
 8005580:	6123      	str	r3, [r4, #16]
 8005582:	2301      	movs	r3, #1
 8005584:	6163      	str	r3, [r4, #20]
 8005586:	b003      	add	sp, #12
 8005588:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800558a:	466a      	mov	r2, sp
 800558c:	ab01      	add	r3, sp, #4
 800558e:	f7ff ffc9 	bl	8005524 <__swhatbuf_r>
 8005592:	9f00      	ldr	r7, [sp, #0]
 8005594:	4605      	mov	r5, r0
 8005596:	4639      	mov	r1, r7
 8005598:	4630      	mov	r0, r6
 800559a:	f7ff fab1 	bl	8004b00 <_malloc_r>
 800559e:	b948      	cbnz	r0, 80055b4 <__smakebuf_r+0x46>
 80055a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80055a4:	059a      	lsls	r2, r3, #22
 80055a6:	d4ee      	bmi.n	8005586 <__smakebuf_r+0x18>
 80055a8:	f023 0303 	bic.w	r3, r3, #3
 80055ac:	f043 0302 	orr.w	r3, r3, #2
 80055b0:	81a3      	strh	r3, [r4, #12]
 80055b2:	e7e2      	b.n	800557a <__smakebuf_r+0xc>
 80055b4:	89a3      	ldrh	r3, [r4, #12]
 80055b6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80055ba:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80055be:	81a3      	strh	r3, [r4, #12]
 80055c0:	9b01      	ldr	r3, [sp, #4]
 80055c2:	6020      	str	r0, [r4, #0]
 80055c4:	b15b      	cbz	r3, 80055de <__smakebuf_r+0x70>
 80055c6:	4630      	mov	r0, r6
 80055c8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80055cc:	f000 f81e 	bl	800560c <_isatty_r>
 80055d0:	b128      	cbz	r0, 80055de <__smakebuf_r+0x70>
 80055d2:	89a3      	ldrh	r3, [r4, #12]
 80055d4:	f023 0303 	bic.w	r3, r3, #3
 80055d8:	f043 0301 	orr.w	r3, r3, #1
 80055dc:	81a3      	strh	r3, [r4, #12]
 80055de:	89a3      	ldrh	r3, [r4, #12]
 80055e0:	431d      	orrs	r5, r3
 80055e2:	81a5      	strh	r5, [r4, #12]
 80055e4:	e7cf      	b.n	8005586 <__smakebuf_r+0x18>
	...

080055e8 <_fstat_r>:
 80055e8:	b538      	push	{r3, r4, r5, lr}
 80055ea:	2300      	movs	r3, #0
 80055ec:	4d06      	ldr	r5, [pc, #24]	@ (8005608 <_fstat_r+0x20>)
 80055ee:	4604      	mov	r4, r0
 80055f0:	4608      	mov	r0, r1
 80055f2:	4611      	mov	r1, r2
 80055f4:	602b      	str	r3, [r5, #0]
 80055f6:	f7fd f80f 	bl	8002618 <_fstat>
 80055fa:	1c43      	adds	r3, r0, #1
 80055fc:	d102      	bne.n	8005604 <_fstat_r+0x1c>
 80055fe:	682b      	ldr	r3, [r5, #0]
 8005600:	b103      	cbz	r3, 8005604 <_fstat_r+0x1c>
 8005602:	6023      	str	r3, [r4, #0]
 8005604:	bd38      	pop	{r3, r4, r5, pc}
 8005606:	bf00      	nop
 8005608:	20000958 	.word	0x20000958

0800560c <_isatty_r>:
 800560c:	b538      	push	{r3, r4, r5, lr}
 800560e:	2300      	movs	r3, #0
 8005610:	4d05      	ldr	r5, [pc, #20]	@ (8005628 <_isatty_r+0x1c>)
 8005612:	4604      	mov	r4, r0
 8005614:	4608      	mov	r0, r1
 8005616:	602b      	str	r3, [r5, #0]
 8005618:	f7fd f80d 	bl	8002636 <_isatty>
 800561c:	1c43      	adds	r3, r0, #1
 800561e:	d102      	bne.n	8005626 <_isatty_r+0x1a>
 8005620:	682b      	ldr	r3, [r5, #0]
 8005622:	b103      	cbz	r3, 8005626 <_isatty_r+0x1a>
 8005624:	6023      	str	r3, [r4, #0]
 8005626:	bd38      	pop	{r3, r4, r5, pc}
 8005628:	20000958 	.word	0x20000958

0800562c <sqrtf>:
 800562c:	b538      	push	{r3, r4, r5, lr}
 800562e:	4605      	mov	r5, r0
 8005630:	f000 f816 	bl	8005660 <__ieee754_sqrtf>
 8005634:	4629      	mov	r1, r5
 8005636:	4604      	mov	r4, r0
 8005638:	4628      	mov	r0, r5
 800563a:	f7fb fc7b 	bl	8000f34 <__aeabi_fcmpun>
 800563e:	b968      	cbnz	r0, 800565c <sqrtf+0x30>
 8005640:	2100      	movs	r1, #0
 8005642:	4628      	mov	r0, r5
 8005644:	f7fb fc4e 	bl	8000ee4 <__aeabi_fcmplt>
 8005648:	b140      	cbz	r0, 800565c <sqrtf+0x30>
 800564a:	f7ff f99b 	bl	8004984 <__errno>
 800564e:	2321      	movs	r3, #33	@ 0x21
 8005650:	2100      	movs	r1, #0
 8005652:	6003      	str	r3, [r0, #0]
 8005654:	4608      	mov	r0, r1
 8005656:	f7fb fb5b 	bl	8000d10 <__aeabi_fdiv>
 800565a:	4604      	mov	r4, r0
 800565c:	4620      	mov	r0, r4
 800565e:	bd38      	pop	{r3, r4, r5, pc}

08005660 <__ieee754_sqrtf>:
 8005660:	f020 4200 	bic.w	r2, r0, #2147483648	@ 0x80000000
 8005664:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8005668:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800566c:	4603      	mov	r3, r0
 800566e:	4604      	mov	r4, r0
 8005670:	d30a      	bcc.n	8005688 <__ieee754_sqrtf+0x28>
 8005672:	4601      	mov	r1, r0
 8005674:	f7fb fa98 	bl	8000ba8 <__aeabi_fmul>
 8005678:	4601      	mov	r1, r0
 800567a:	4620      	mov	r0, r4
 800567c:	f7fb f98c 	bl	8000998 <__addsf3>
 8005680:	4604      	mov	r4, r0
 8005682:	4620      	mov	r0, r4
 8005684:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005688:	2a00      	cmp	r2, #0
 800568a:	d0fa      	beq.n	8005682 <__ieee754_sqrtf+0x22>
 800568c:	2800      	cmp	r0, #0
 800568e:	da06      	bge.n	800569e <__ieee754_sqrtf+0x3e>
 8005690:	4601      	mov	r1, r0
 8005692:	f7fb f97f 	bl	8000994 <__aeabi_fsub>
 8005696:	4601      	mov	r1, r0
 8005698:	f7fb fb3a 	bl	8000d10 <__aeabi_fdiv>
 800569c:	e7f0      	b.n	8005680 <__ieee754_sqrtf+0x20>
 800569e:	f010 41ff 	ands.w	r1, r0, #2139095040	@ 0x7f800000
 80056a2:	d03c      	beq.n	800571e <__ieee754_sqrtf+0xbe>
 80056a4:	15c2      	asrs	r2, r0, #23
 80056a6:	2400      	movs	r4, #0
 80056a8:	2019      	movs	r0, #25
 80056aa:	4626      	mov	r6, r4
 80056ac:	f04f 7180 	mov.w	r1, #16777216	@ 0x1000000
 80056b0:	f3c3 0316 	ubfx	r3, r3, #0, #23
 80056b4:	f1a2 057f 	sub.w	r5, r2, #127	@ 0x7f
 80056b8:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80056bc:	07d2      	lsls	r2, r2, #31
 80056be:	bf58      	it	pl
 80056c0:	005b      	lslpl	r3, r3, #1
 80056c2:	106d      	asrs	r5, r5, #1
 80056c4:	005b      	lsls	r3, r3, #1
 80056c6:	1872      	adds	r2, r6, r1
 80056c8:	429a      	cmp	r2, r3
 80056ca:	bfcf      	iteee	gt
 80056cc:	461a      	movgt	r2, r3
 80056ce:	1856      	addle	r6, r2, r1
 80056d0:	1864      	addle	r4, r4, r1
 80056d2:	1a9a      	suble	r2, r3, r2
 80056d4:	3801      	subs	r0, #1
 80056d6:	ea4f 0342 	mov.w	r3, r2, lsl #1
 80056da:	ea4f 0151 	mov.w	r1, r1, lsr #1
 80056de:	d1f2      	bne.n	80056c6 <__ieee754_sqrtf+0x66>
 80056e0:	b1ba      	cbz	r2, 8005712 <__ieee754_sqrtf+0xb2>
 80056e2:	4e15      	ldr	r6, [pc, #84]	@ (8005738 <__ieee754_sqrtf+0xd8>)
 80056e4:	4f15      	ldr	r7, [pc, #84]	@ (800573c <__ieee754_sqrtf+0xdc>)
 80056e6:	6830      	ldr	r0, [r6, #0]
 80056e8:	6839      	ldr	r1, [r7, #0]
 80056ea:	f7fb f953 	bl	8000994 <__aeabi_fsub>
 80056ee:	f8d6 8000 	ldr.w	r8, [r6]
 80056f2:	4601      	mov	r1, r0
 80056f4:	4640      	mov	r0, r8
 80056f6:	f7fb fbff 	bl	8000ef8 <__aeabi_fcmple>
 80056fa:	b150      	cbz	r0, 8005712 <__ieee754_sqrtf+0xb2>
 80056fc:	6830      	ldr	r0, [r6, #0]
 80056fe:	6839      	ldr	r1, [r7, #0]
 8005700:	f7fb f94a 	bl	8000998 <__addsf3>
 8005704:	6836      	ldr	r6, [r6, #0]
 8005706:	4601      	mov	r1, r0
 8005708:	4630      	mov	r0, r6
 800570a:	f7fb fbeb 	bl	8000ee4 <__aeabi_fcmplt>
 800570e:	b170      	cbz	r0, 800572e <__ieee754_sqrtf+0xce>
 8005710:	3402      	adds	r4, #2
 8005712:	1064      	asrs	r4, r4, #1
 8005714:	f104 547c 	add.w	r4, r4, #1056964608	@ 0x3f000000
 8005718:	eb04 54c5 	add.w	r4, r4, r5, lsl #23
 800571c:	e7b1      	b.n	8005682 <__ieee754_sqrtf+0x22>
 800571e:	005b      	lsls	r3, r3, #1
 8005720:	0218      	lsls	r0, r3, #8
 8005722:	460a      	mov	r2, r1
 8005724:	f101 0101 	add.w	r1, r1, #1
 8005728:	d5f9      	bpl.n	800571e <__ieee754_sqrtf+0xbe>
 800572a:	4252      	negs	r2, r2
 800572c:	e7bb      	b.n	80056a6 <__ieee754_sqrtf+0x46>
 800572e:	3401      	adds	r4, #1
 8005730:	f024 0401 	bic.w	r4, r4, #1
 8005734:	e7ed      	b.n	8005712 <__ieee754_sqrtf+0xb2>
 8005736:	bf00      	nop
 8005738:	08005864 	.word	0x08005864
 800573c:	08005860 	.word	0x08005860

08005740 <_init>:
 8005740:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005742:	bf00      	nop
 8005744:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005746:	bc08      	pop	{r3}
 8005748:	469e      	mov	lr, r3
 800574a:	4770      	bx	lr

0800574c <_fini>:
 800574c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800574e:	bf00      	nop
 8005750:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005752:	bc08      	pop	{r3}
 8005754:	469e      	mov	lr, r3
 8005756:	4770      	bx	lr
